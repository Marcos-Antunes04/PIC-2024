

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Jun 07 17:57:14 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26     0000                     
    27                           ; Generated 22/03/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F877A Definitions
    59                           ; 
    60                           ; SFR Addresses
    61     0000                     	;# 
    62     0001                     	;# 
    63     0002                     	;# 
    64     0003                     	;# 
    65     0004                     	;# 
    66     0005                     	;# 
    67     0006                     	;# 
    68     0007                     	;# 
    69     0008                     	;# 
    70     0009                     	;# 
    71     000A                     	;# 
    72     000B                     	;# 
    73     000C                     	;# 
    74     000D                     	;# 
    75     000E                     	;# 
    76     000E                     	;# 
    77     000F                     	;# 
    78     0010                     	;# 
    79     0011                     	;# 
    80     0012                     	;# 
    81     0013                     	;# 
    82     0014                     	;# 
    83     0015                     	;# 
    84     0015                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001B                     	;# 
    91     001B                     	;# 
    92     001C                     	;# 
    93     001D                     	;# 
    94     001E                     	;# 
    95     001F                     	;# 
    96     0081                     	;# 
    97     0085                     	;# 
    98     0086                     	;# 
    99     0087                     	;# 
   100     0088                     	;# 
   101     0089                     	;# 
   102     008C                     	;# 
   103     008D                     	;# 
   104     008E                     	;# 
   105     0091                     	;# 
   106     0092                     	;# 
   107     0093                     	;# 
   108     0094                     	;# 
   109     0098                     	;# 
   110     0099                     	;# 
   111     009C                     	;# 
   112     009D                     	;# 
   113     009E                     	;# 
   114     009F                     	;# 
   115     010C                     	;# 
   116     010D                     	;# 
   117     010E                     	;# 
   118     010F                     	;# 
   119     018C                     	;# 
   120     018D                     	;# 
   121     0000                     	;# 
   122     0001                     	;# 
   123     0002                     	;# 
   124     0003                     	;# 
   125     0004                     	;# 
   126     0005                     	;# 
   127     0006                     	;# 
   128     0007                     	;# 
   129     0008                     	;# 
   130     0009                     	;# 
   131     000A                     	;# 
   132     000B                     	;# 
   133     000C                     	;# 
   134     000D                     	;# 
   135     000E                     	;# 
   136     000E                     	;# 
   137     000F                     	;# 
   138     0010                     	;# 
   139     0011                     	;# 
   140     0012                     	;# 
   141     0013                     	;# 
   142     0014                     	;# 
   143     0015                     	;# 
   144     0015                     	;# 
   145     0016                     	;# 
   146     0017                     	;# 
   147     0018                     	;# 
   148     0019                     	;# 
   149     001A                     	;# 
   150     001B                     	;# 
   151     001B                     	;# 
   152     001C                     	;# 
   153     001D                     	;# 
   154     001E                     	;# 
   155     001F                     	;# 
   156     0081                     	;# 
   157     0085                     	;# 
   158     0086                     	;# 
   159     0087                     	;# 
   160     0088                     	;# 
   161     0089                     	;# 
   162     008C                     	;# 
   163     008D                     	;# 
   164     008E                     	;# 
   165     0091                     	;# 
   166     0092                     	;# 
   167     0093                     	;# 
   168     0094                     	;# 
   169     0098                     	;# 
   170     0099                     	;# 
   171     009C                     	;# 
   172     009D                     	;# 
   173     009E                     	;# 
   174     009F                     	;# 
   175     010C                     	;# 
   176     010D                     	;# 
   177     010E                     	;# 
   178     010F                     	;# 
   179     018C                     	;# 
   180     018D                     	;# 
   181     0008                     _PORTD	set	8
   182     001E                     _ADRESH	set	30
   183     001F                     _ADCON0bits	set	31
   184     001F                     _ADCON0	set	31
   185     0013                     _SSPBUF	set	19
   186     0014                     _SSPCON	set	20
   187     0006                     _PORTB	set	6
   188     00FA                     _GO_DONE	set	250
   189     0063                     _SSPIF	set	99
   190     0088                     _TRISD	set	136
   191     0086                     _TRISB	set	134
   192     0085                     _TRISA	set	133
   193     009E                     _ADRESL	set	158
   194     009F                     _ADCON1	set	159
   195     0091                     _SSPCON2bits	set	145
   196     0087                     _TRISCbits	set	135
   197     0093                     _SSPADD	set	147
   198     0094                     _SSPSTAT	set	148
   199     0091                     _SSPCON2	set	145
   200     048E                     _ACKSTAT	set	1166
   201                           
   202                           	psect	strings
   203     0003                     __pstrings:
   204     0003                     stringtab:
   205     0003                     __stringtab:
   206     0003                     stringcode:	
   207                           ;	String table - string pointers are 1 byte each
   208                           
   209     0003                     stringdir:
   210     0003  3000               	movlw	high stringdir
   211     0004  008A               	movwf	10
   212     0005  0804               	movf	4,w
   213     0006  0A84               	incf	4,f
   214     0007  0782               	addwf	2,f
   215     0008                     __stringbase:
   216     0008  3400               	retlw	0
   217     0009                     __end_of__stringtab:
   218     0009                     STR_2:
   219     0009  3446               	retlw	70	;'F'
   220     000A  3472               	retlw	114	;'r'
   221     000B  346F               	retlw	111	;'o'
   222     000C  346D               	retlw	109	;'m'
   223     000D  3420               	retlw	32	;' '
   224     000E  3441               	retlw	65	;'A'
   225     000F  346E               	retlw	110	;'n'
   226     0010  3474               	retlw	116	;'t'
   227     0011  3475               	retlw	117	;'u'
   228     0012  346E               	retlw	110	;'n'
   229     0013  3465               	retlw	101	;'e'
   230     0014  3473               	retlw	115	;'s'
   231     0015  3400               	retlw	0
   232     0016                     STR_1:
   233     0016  3448               	retlw	72	;'H'
   234     0017  3465               	retlw	101	;'e'
   235     0018  346C               	retlw	108	;'l'
   236     0019  346C               	retlw	108	;'l'
   237     001A  346F               	retlw	111	;'o'
   238     001B  3420               	retlw	32	;' '
   239     001C  3457               	retlw	87	;'W'
   240     001D  346F               	retlw	111	;'o'
   241     001E  3472               	retlw	114	;'r'
   242     001F  346C               	retlw	108	;'l'
   243     0020  3464               	retlw	100	;'d'
   244     0021  3400               	retlw	0
   245                           
   246                           	psect	cinit
   247     07F8                     start_initialization:	
   248                           ; #config settings
   249                           
   250     07F8                     __initialization:
   251                           
   252                           ; Clear objects allocated to BANK0
   253     07F8  1283               	bcf	3,5	;RP0=0, select bank0
   254     07F9  1303               	bcf	3,6	;RP1=0, select bank0
   255     07FA  01B4               	clrf	__pbssBANK0& (0+127)
   256     07FB  01B5               	clrf	(__pbssBANK0+1)& (0+127)
   257     07FC                     end_of_initialization:	
   258                           ;End of C runtime variable initialization code
   259                           
   260     07FC                     __end_of__initialization:
   261     07FC  0183               	clrf	3
   262     07FD  120A  118A  2F21   	ljmp	_main	;jump to C main() function
   263                           
   264                           	psect	bssBANK0
   265     0034                     __pbssBANK0:
   266     0034                     _adc_value:
   267     0034                     	ds	2
   268                           
   269                           	psect	cstackCOMMON
   270     0070                     __pcstackCOMMON:
   271     0070                     ?_I2C_IDLE:
   272     0070                     ??_I2C_IDLE:	
   273                           ; 1 bytes @ 0x0
   274                           
   275     0070                     ?_I2C_Start:	
   276                           ; 1 bytes @ 0x0
   277                           
   278     0070                     ??_I2C_Start:	
   279                           ; 1 bytes @ 0x0
   280                           
   281     0070                     ?_I2C_Stop:	
   282                           ; 1 bytes @ 0x0
   283                           
   284     0070                     ??_I2C_Stop:	
   285                           ; 1 bytes @ 0x0
   286                           
   287     0070                     ?_I2C_Write:	
   288                           ; 1 bytes @ 0x0
   289                           
   290     0070                     ??_I2C_Write:	
   291                           ; 1 bytes @ 0x0
   292                           
   293     0070                     ?_ADC_Setup:	
   294                           ; 1 bytes @ 0x0
   295                           
   296     0070                     ??_ADC_Setup:	
   297                           ; 1 bytes @ 0x0
   298                           
   299     0070                     ?_lcd_send_cmd:	
   300                           ; 1 bytes @ 0x0
   301                           
   302     0070                     ?_lcd_send_data:	
   303                           ; 1 bytes @ 0x0
   304                           
   305     0070                     ?_lcd_clear:	
   306                           ; 1 bytes @ 0x0
   307                           
   308     0070                     ?_lcd_init:	
   309                           ; 1 bytes @ 0x0
   310                           
   311     0070                     ?_lcd_send_string:	
   312                           ; 1 bytes @ 0x0
   313                           
   314     0070                     ?_main:	
   315                           ; 1 bytes @ 0x0
   316                           
   317     0070                     ?___lldiv:	
   318                           ; 1 bytes @ 0x0
   319                           
   320     0070                     I2C_Write@Data:	
   321                           ; 4 bytes @ 0x0
   322                           
   323     0070                     I2C_Multi_Send@cmd:	
   324                           ; 1 bytes @ 0x0
   325                           
   326     0070                     ___lldiv@divisor:	
   327                           ; 1 bytes @ 0x0
   328                           
   329                           
   330                           ; 4 bytes @ 0x0
   331     0070                     	ds	1
   332     0071                     ?_I2C_Multi_Send:
   333     0071                     I2C_Multi_Send@address:	
   334                           ; 1 bytes @ 0x1
   335                           
   336                           
   337                           ; 1 bytes @ 0x1
   338     0071                     	ds	1
   339     0072                     I2C_Multi_Send@data:
   340                           
   341                           ; 1 bytes @ 0x2
   342     0072                     	ds	1
   343     0073                     I2C_Multi_Send@size:
   344                           
   345                           ; 2 bytes @ 0x3
   346     0073                     	ds	1
   347     0074                     ___lldiv@dividend:
   348                           
   349                           ; 4 bytes @ 0x4
   350     0074                     	ds	1
   351     0075                     ??_I2C_Multi_Send:
   352                           
   353                           ; 1 bytes @ 0x5
   354     0075                     	ds	1
   355     0076                     I2C_Multi_Send@send:
   356                           
   357                           ; 1 bytes @ 0x6
   358     0076                     	ds	1
   359     0077                     I2C_Multi_Send@n:
   360                           
   361                           ; 2 bytes @ 0x7
   362     0077                     	ds	1
   363     0078                     ??___lldiv:
   364                           
   365                           ; 1 bytes @ 0x8
   366     0078                     	ds	1
   367     0079                     ??_lcd_send_cmd:
   368     0079                     ??_lcd_send_data:	
   369                           ; 1 bytes @ 0x9
   370                           
   371     0079                     ___lldiv@quotient:	
   372                           ; 1 bytes @ 0x9
   373                           
   374                           
   375                           ; 4 bytes @ 0x9
   376     0079                     	ds	3
   377     007C                     ??_lcd_clear:
   378     007C                     ??_lcd_put_cur:	
   379                           ; 1 bytes @ 0xC
   380                           
   381     007C                     ??_lcd_send_string:	
   382                           ; 1 bytes @ 0xC
   383                           
   384     007C                     lcd_send_string@str:	
   385                           ; 1 bytes @ 0xC
   386                           
   387     007C                     lcd_clear@i:	
   388                           ; 1 bytes @ 0xC
   389                           
   390                           
   391                           ; 2 bytes @ 0xC
   392     007C                     	ds	1
   393     007D                     ___lldiv@counter:
   394                           
   395                           ; 1 bytes @ 0xD
   396     007D                     	ds	1
   397                           
   398                           	psect	cstackBANK0
   399     0020                     __pcstackBANK0:
   400     0020                     ?_I2C_Master_Init:
   401     0020                     I2C_Master_Init@c:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0020                     lcd_send_cmd@data_t:	
   405                           ; 4 bytes @ 0x0
   406                           
   407     0020                     lcd_send_data@data_t:	
   408                           ; 4 bytes @ 0x0
   409                           
   410                           
   411                           ; 4 bytes @ 0x0
   412     0020                     	ds	4
   413     0024                     ??_I2C_Master_Init:
   414     0024                     lcd_send_cmd@cmd:	
   415                           ; 1 bytes @ 0x4
   416                           
   417     0024                     lcd_send_data@data:	
   418                           ; 1 bytes @ 0x4
   419                           
   420                           
   421                           ; 1 bytes @ 0x4
   422     0024                     	ds	1
   423     0025                     lcd_send_cmd@data_u:
   424     0025                     lcd_send_data@data_u:	
   425                           ; 1 bytes @ 0x5
   426                           
   427                           
   428                           ; 1 bytes @ 0x5
   429     0025                     	ds	1
   430     0026                     lcd_send_cmd@data_l:
   431     0026                     lcd_send_data@data_l:	
   432                           ; 1 bytes @ 0x6
   433                           
   434                           
   435                           ; 1 bytes @ 0x6
   436     0026                     	ds	1
   437     0027                     ?_lcd_put_cur:
   438     0027                     ??_lcd_init:	
   439                           ; 1 bytes @ 0x7
   440                           
   441     0027                     lcd_put_cur@row:	
   442                           ; 1 bytes @ 0x7
   443                           
   444                           
   445                           ; 2 bytes @ 0x7
   446     0027                     	ds	2
   447     0029                     lcd_put_cur@col:
   448                           
   449                           ; 2 bytes @ 0x9
   450     0029                     	ds	2
   451     002B                     ??_main:
   452                           
   453                           ; 1 bytes @ 0xB
   454     002B                     	ds	3
   455     002E                     main@row:
   456                           
   457                           ; 2 bytes @ 0xE
   458     002E                     	ds	2
   459     0030                     main@col:
   460                           
   461                           ; 2 bytes @ 0x10
   462     0030                     	ds	2
   463     0032                     main@i:
   464                           
   465                           ; 2 bytes @ 0x12
   466     0032                     	ds	2
   467                           
   468                           	psect	maintext
   469     0721                     __pmaintext:	
   470 ;;
   471 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   472 ;;
   473 ;; *************** function _main *****************
   474 ;; Defined at:
   475 ;;		line 208 in file "newmain.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;		None
   478 ;; Auto vars:     Size  Location     Type
   479 ;;  i               2   18[BANK0 ] int 
   480 ;;  col             2   16[BANK0 ] int 
   481 ;;  row             2   14[BANK0 ] int 
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : B00/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   491 ;;      Params:         0       0       0       0       0
   492 ;;      Locals:         0       6       0       0       0
   493 ;;      Temps:          0       3       0       0       0
   494 ;;      Totals:         0       9       0       0       0
   495 ;;Total ram usage:        9 bytes
   496 ;; Hardware stack levels required when called: 5
   497 ;; This function calls:
   498 ;;		_ADC_Setup
   499 ;;		_I2C_Master_Init
   500 ;;		_lcd_clear
   501 ;;		_lcd_init
   502 ;;		_lcd_put_cur
   503 ;;		_lcd_send_data
   504 ;;		_lcd_send_string
   505 ;; This function is called by:
   506 ;;		Startup code after reset
   507 ;; This function uses a non-reentrant model
   508 ;;
   509                           
   510     0721                     _main:	
   511                           ;psect for function _main
   512                           
   513     0721                     l1224:	
   514                           ;incstack = 0
   515                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   516                           
   517                           
   518                           ;newmain.c: 211: 
   519     0721  30FF               	movlw	255
   520     0722  1683               	bsf	3,5	;RP0=1, select bank1
   521     0723  1303               	bcf	3,6	;RP1=0, select bank1
   522     0724  0085               	movwf	5	;volatile
   523     0725                     l1226:
   524                           
   525                           ;newmain.c: 212:   lcd_put_cur(1,0);
   526     0725  0186               	clrf	6	;volatile
   527     0726                     l1228:
   528                           
   529                           ;newmain.c: 213: 
   530     0726  0188               	clrf	8	;volatile
   531     0727                     l1230:
   532                           
   533                           ;newmain.c: 214:   lcd_send_string("From Antunes");
   534     0727  1283               	bcf	3,5	;RP0=0, select bank0
   535     0728  1303               	bcf	3,6	;RP1=0, select bank0
   536     0729  0188               	clrf	8	;volatile
   537     072A                     l1232:
   538                           
   539                           ;newmain.c: 215: 
   540     072A  0186               	clrf	6	;volatile
   541     072B                     l1234:
   542                           
   543                           ;newmain.c: 217:   int row = 0;
   544     072B  3000               	movlw	0
   545     072C  00A3               	movwf	I2C_Master_Init@c+3
   546     072D  3001               	movlw	1
   547     072E  00A2               	movwf	I2C_Master_Init@c+2
   548     072F  3086               	movlw	134
   549     0730  00A1               	movwf	I2C_Master_Init@c+1
   550     0731  30A0               	movlw	160
   551     0732  00A0               	movwf	I2C_Master_Init@c
   552     0733  120A  118A  2553  120A  118A  	fcall	_I2C_Master_Init
   553     0738                     l1236:
   554                           
   555                           ;newmain.c: 219: 
   556     0738  120A  118A  248D  120A  118A  	fcall	_ADC_Setup
   557     073D                     l1238:
   558                           
   559                           ;newmain.c: 221:       for(int i = 0; i<128;i++){
   560     073D  3033               	movlw	51
   561     073E  1283               	bcf	3,5	;RP0=0, select bank0
   562     073F  1303               	bcf	3,6	;RP1=0, select bank0
   563     0740  00AD               	movwf	??_main+2
   564     0741  30BB               	movlw	187
   565     0742  00AC               	movwf	??_main+1
   566     0743  30DF               	movlw	223
   567     0744  00AB               	movwf	??_main
   568     0745                     u427:
   569     0745  0BAB               	decfsz	??_main,f
   570     0746  2F45               	goto	u427
   571     0747  0BAC               	decfsz	??_main+1,f
   572     0748  2F45               	goto	u427
   573     0749  0BAD               	decfsz	??_main+2,f
   574     074A  2F45               	goto	u427
   575     074B                     l1240:
   576                           
   577                           ;newmain.c: 223:           lcd_send_data(i+48);
   578     074B  120A  118A  2679  120A  118A  	fcall	_lcd_init
   579                           
   580                           ;newmain.c: 224:           col++;
   581     0750  300E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   582     0751  120A  118A  24E3  120A  118A  	fcall	_lcd_send_string
   583     0756                     l1242:
   584                           
   585                           ;newmain.c: 226:           if(row>1) row=0;
   586     0756  3033               	movlw	51
   587     0757  1283               	bcf	3,5	;RP0=0, select bank0
   588     0758  1303               	bcf	3,6	;RP1=0, select bank0
   589     0759  00AD               	movwf	??_main+2
   590     075A  30BB               	movlw	187
   591     075B  00AC               	movwf	??_main+1
   592     075C  30DF               	movlw	223
   593     075D  00AB               	movwf	??_main
   594     075E                     u437:
   595     075E  0BAB               	decfsz	??_main,f
   596     075F  2F5E               	goto	u437
   597     0760  0BAC               	decfsz	??_main+1,f
   598     0761  2F5E               	goto	u437
   599     0762  0BAD               	decfsz	??_main+2,f
   600     0763  2F5E               	goto	u437
   601     0764                     l1244:
   602                           
   603                           ;newmain.c: 228:       }
   604     0764  3001               	movlw	1
   605     0765  1283               	bcf	3,5	;RP0=0, select bank0
   606     0766  1303               	bcf	3,6	;RP1=0, select bank0
   607     0767  00A7               	movwf	lcd_put_cur@row
   608     0768  3000               	movlw	0
   609     0769  00A8               	movwf	lcd_put_cur@row+1
   610     076A  3000               	movlw	0
   611     076B  00A9               	movwf	lcd_put_cur@col
   612     076C  00AA               	movwf	lcd_put_cur@col+1
   613     076D  120A  118A  24C5  120A  118A  	fcall	_lcd_put_cur
   614     0772                     l1246:
   615                           
   616                           ;newmain.c: 230: }
   617     0772  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   618     0773  120A  118A  24E3  120A  118A  	fcall	_lcd_send_string
   619     0778                     l1248:
   620     0778  120A  118A  2502  120A  118A  	fcall	_lcd_clear
   621     077D                     l1250:
   622     077D  1283               	bcf	3,5	;RP0=0, select bank0
   623     077E  1303               	bcf	3,6	;RP1=0, select bank0
   624     077F  01AE               	clrf	main@row
   625     0780  01AF               	clrf	main@row+1
   626     0781                     l1252:
   627     0781  01B0               	clrf	main@col
   628     0782  01B1               	clrf	main@col+1
   629     0783                     l1254:
   630     0783  1283               	bcf	3,5	;RP0=0, select bank0
   631     0784  1303               	bcf	3,6	;RP1=0, select bank0
   632     0785  01B2               	clrf	main@i
   633     0786  01B3               	clrf	main@i+1
   634     0787                     l1260:
   635     0787  1283               	bcf	3,5	;RP0=0, select bank0
   636     0788  1303               	bcf	3,6	;RP1=0, select bank0
   637     0789  082F               	movf	main@row+1,w
   638     078A  00A8               	movwf	lcd_put_cur@row+1
   639     078B  082E               	movf	main@row,w
   640     078C  00A7               	movwf	lcd_put_cur@row
   641     078D  0831               	movf	main@col+1,w
   642     078E  00AA               	movwf	lcd_put_cur@col+1
   643     078F  0830               	movf	main@col,w
   644     0790  00A9               	movwf	lcd_put_cur@col
   645     0791  120A  118A  24C5  120A  118A  	fcall	_lcd_put_cur
   646     0796  1283               	bcf	3,5	;RP0=0, select bank0
   647     0797  1303               	bcf	3,6	;RP1=0, select bank0
   648     0798  0832               	movf	main@i,w
   649     0799  3E30               	addlw	48
   650     079A  120A  118A  25CF  120A  118A  	fcall	_lcd_send_data
   651     079F                     l1262:
   652     079F  3001               	movlw	1
   653     07A0  1283               	bcf	3,5	;RP0=0, select bank0
   654     07A1  1303               	bcf	3,6	;RP1=0, select bank0
   655     07A2  07B0               	addwf	main@col,f
   656     07A3  1803               	skipnc
   657     07A4  0AB1               	incf	main@col+1,f
   658     07A5  3000               	movlw	0
   659     07A6  07B1               	addwf	main@col+1,f
   660     07A7                     l1264:
   661     07A7  0831               	movf	main@col+1,w
   662     07A8  3A80               	xorlw	128
   663     07A9  00FF               	movwf	btemp+1
   664     07AA  3080               	movlw	128
   665     07AB  027F               	subwf	btemp+1,w
   666     07AC  1D03               	skipz
   667     07AD  2FB0               	goto	u395
   668     07AE  3010               	movlw	16
   669     07AF  0230               	subwf	main@col,w
   670     07B0                     u395:
   671     07B0  1C03               	skipc
   672     07B1  2FB3               	goto	u391
   673     07B2  2FB4               	goto	u390
   674     07B3                     u391:
   675     07B3  2FBE               	goto	l1270
   676     07B4                     u390:
   677     07B4                     l1266:
   678     07B4  3001               	movlw	1
   679     07B5  1283               	bcf	3,5	;RP0=0, select bank0
   680     07B6  1303               	bcf	3,6	;RP1=0, select bank0
   681     07B7  07AE               	addwf	main@row,f
   682     07B8  1803               	skipnc
   683     07B9  0AAF               	incf	main@row+1,f
   684     07BA  3000               	movlw	0
   685     07BB  07AF               	addwf	main@row+1,f
   686     07BC                     l1268:
   687     07BC  01B0               	clrf	main@col
   688     07BD  01B1               	clrf	main@col+1
   689     07BE                     l1270:
   690     07BE  1283               	bcf	3,5	;RP0=0, select bank0
   691     07BF  1303               	bcf	3,6	;RP1=0, select bank0
   692     07C0  082F               	movf	main@row+1,w
   693     07C1  3A80               	xorlw	128
   694     07C2  00FF               	movwf	btemp+1
   695     07C3  3080               	movlw	128
   696     07C4  027F               	subwf	btemp+1,w
   697     07C5  1D03               	skipz
   698     07C6  2FC9               	goto	u405
   699     07C7  3002               	movlw	2
   700     07C8  022E               	subwf	main@row,w
   701     07C9                     u405:
   702     07C9  1C03               	skipc
   703     07CA  2FCC               	goto	u401
   704     07CB  2FCD               	goto	u400
   705     07CC                     u401:
   706     07CC  2FD1               	goto	l1274
   707     07CD                     u400:
   708     07CD                     l1272:
   709     07CD  1283               	bcf	3,5	;RP0=0, select bank0
   710     07CE  1303               	bcf	3,6	;RP1=0, select bank0
   711     07CF  01AE               	clrf	main@row
   712     07D0  01AF               	clrf	main@row+1
   713     07D1                     l1274:
   714     07D1  3002               	movlw	2
   715     07D2  1283               	bcf	3,5	;RP0=0, select bank0
   716     07D3  1303               	bcf	3,6	;RP1=0, select bank0
   717     07D4  00AD               	movwf	??_main+2
   718     07D5  3045               	movlw	69
   719     07D6  00AC               	movwf	??_main+1
   720     07D7  30A9               	movlw	169
   721     07D8  00AB               	movwf	??_main
   722     07D9                     u447:
   723     07D9  0BAB               	decfsz	??_main,f
   724     07DA  2FD9               	goto	u447
   725     07DB  0BAC               	decfsz	??_main+1,f
   726     07DC  2FD9               	goto	u447
   727     07DD  0BAD               	decfsz	??_main+2,f
   728     07DE  2FD9               	goto	u447
   729     07DF                     l1276:
   730     07DF  3001               	movlw	1
   731     07E0  1283               	bcf	3,5	;RP0=0, select bank0
   732     07E1  1303               	bcf	3,6	;RP1=0, select bank0
   733     07E2  07B2               	addwf	main@i,f
   734     07E3  1803               	skipnc
   735     07E4  0AB3               	incf	main@i+1,f
   736     07E5  3000               	movlw	0
   737     07E6  07B3               	addwf	main@i+1,f
   738     07E7                     l1278:
   739     07E7  0833               	movf	main@i+1,w
   740     07E8  3A80               	xorlw	128
   741     07E9  00FF               	movwf	btemp+1
   742     07EA  3080               	movlw	128
   743     07EB  027F               	subwf	btemp+1,w
   744     07EC  1D03               	skipz
   745     07ED  2FF0               	goto	u415
   746     07EE  3080               	movlw	128
   747     07EF  0232               	subwf	main@i,w
   748     07F0                     u415:
   749     07F0  1C03               	skipc
   750     07F1  2FF3               	goto	u411
   751     07F2  2FF4               	goto	u410
   752     07F3                     u411:
   753     07F3  2F87               	goto	l1260
   754     07F4                     u410:
   755     07F4  2F83               	goto	l1254
   756     07F5  120A  118A  2800   	ljmp	start
   757     07F8                     __end_of_main:
   758                           
   759                           	psect	text1
   760     04E3                     __ptext1:	
   761 ;; *************** function _lcd_send_string *****************
   762 ;; Defined at:
   763 ;;		line 199 in file "newmain.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;  str             1    wreg     PTR unsigned char 
   766 ;;		 -> STR_2(13), STR_1(12), 
   767 ;; Auto vars:     Size  Location     Type
   768 ;;  str             1   12[COMMON] PTR unsigned char 
   769 ;;		 -> STR_2(13), STR_1(12), 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   779 ;;      Params:         0       0       0       0       0
   780 ;;      Locals:         1       0       0       0       0
   781 ;;      Temps:          0       0       0       0       0
   782 ;;      Totals:         1       0       0       0       0
   783 ;;Total ram usage:        1 bytes
   784 ;; Hardware stack levels used: 1
   785 ;; Hardware stack levels required when called: 4
   786 ;; This function calls:
   787 ;;		_lcd_send_data
   788 ;; This function is called by:
   789 ;;		_main
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793     04E3                     _lcd_send_string:	
   794                           ;psect for function _lcd_send_string
   795                           
   796                           
   797                           ;incstack = 0
   798                           ; Regs used in _lcd_send_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   799                           ;lcd_send_string@str stored from wreg
   800     04E3  00FC               	movwf	lcd_send_string@str
   801     04E4                     l1200:
   802                           
   803                           ;newmain.c: 199:   PORTB = 0X00;;newmain.c: 200: ;newmain.c: 201:   I2C_Master_Init(1000
      +                          00);
   804     04E4  2CF5               	goto	l1206
   805     04E5                     l1202:
   806     04E5  087C               	movf	lcd_send_string@str,w
   807     04E6  0084               	movwf	4
   808     04E7  120A  118A  2003  120A  118A  	fcall	stringdir
   809     04EC  120A  118A  25CF  120A  118A  	fcall	_lcd_send_data
   810     04F1                     l1204:
   811     04F1  3001               	movlw	1
   812     04F2  00FF               	movwf	btemp+1
   813     04F3  087F               	movf	btemp+1,w
   814     04F4  07FC               	addwf	lcd_send_string@str,f
   815     04F5                     l1206:
   816     04F5  087C               	movf	lcd_send_string@str,w
   817     04F6  0084               	movwf	4
   818     04F7  120A  118A  2003  120A  118A  	fcall	stringdir
   819     04FC  3A00               	xorlw	0
   820     04FD  1D03               	skipz
   821     04FE  2D00               	goto	u381
   822     04FF  2D01               	goto	u380
   823     0500                     u381:
   824     0500  2CE5               	goto	l1202
   825     0501                     u380:
   826     0501                     l124:
   827     0501  0008               	return
   828     0502                     __end_of_lcd_send_string:
   829                           
   830                           	psect	text2
   831     04C5                     __ptext2:	
   832 ;; *************** function _lcd_put_cur *****************
   833 ;; Defined at:
   834 ;;		line 157 in file "newmain.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  row             2    7[BANK0 ] int 
   837 ;;  col             2    9[BANK0 ] int 
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   849 ;;      Params:         0       4       0       0       0
   850 ;;      Locals:         0       0       0       0       0
   851 ;;      Temps:          0       0       0       0       0
   852 ;;      Totals:         0       4       0       0       0
   853 ;;Total ram usage:        4 bytes
   854 ;; Hardware stack levels used: 1
   855 ;; Hardware stack levels required when called: 4
   856 ;; This function calls:
   857 ;;		_lcd_send_cmd
   858 ;; This function is called by:
   859 ;;		_main
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863     04C5                     _lcd_put_cur:	
   864                           ;psect for function _lcd_put_cur
   865                           
   866     04C5                     l1158:	
   867                           ;incstack = 0
   868                           ; Regs used in _lcd_put_cur: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   869                           
   870                           
   871                           ;newmain.c: 157: void lcd_init (void);newmain.c: 158: {;newmain.c: 159: 
   872     04C5  2CCD               	goto	l1164
   873     04C6                     l112:	
   874                           ;newmain.c: 160:  _delay((unsigned long)((50)*(20000000/4000.0)));;newmain.c: 161:  lcd_
      +                          send_cmd (0x30);
   875                           
   876                           
   877                           ;newmain.c: 162:  _delay((unsigned long)((5)*(20000000/4000.0)));
   878     04C6  17A9               	bsf	lcd_put_cur@col,7
   879                           
   880                           ;newmain.c: 163:  lcd_send_cmd (0x30);
   881     04C7  2CDC               	goto	l1166
   882     04C8                     l1160:
   883                           
   884                           ;newmain.c: 165:  lcd_send_cmd (0x30);
   885     04C8  30C0               	movlw	192
   886     04C9  04A9               	iorwf	lcd_put_cur@col,f
   887     04CA  3000               	movlw	0
   888     04CB  04AA               	iorwf	lcd_put_cur@col+1,f
   889                           
   890                           ;newmain.c: 166:  _delay((unsigned long)((10)*(20000000/4000.0)));
   891     04CC  2CDC               	goto	l1166
   892     04CD                     l1164:
   893                           
   894                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   895                           ; Switch size 1, requested type "simple"
   896                           ; Number of cases is 1, Range of values is 0 to 0
   897                           ; switch strategies available:
   898                           ; Name         Instructions Cycles
   899                           ; simple_byte            4     3 (average)
   900                           ; direct_byte           11     8 (fixed)
   901                           ; jumptable            260     6 (fixed)
   902                           ;	Chosen strategy is simple_byte
   903     04CD  1283               	bcf	3,5	;RP0=0, select bank0
   904     04CE  1303               	bcf	3,6	;RP1=0, select bank0
   905     04CF  0828               	movf	lcd_put_cur@row+1,w
   906     04D0  3A00               	xorlw	0	; case 0
   907     04D1  1903               	skipnz
   908     04D2  2CD4               	goto	l1300
   909     04D3  2CDC               	goto	l1166
   910     04D4                     l1300:
   911                           
   912                           ; Switch size 1, requested type "simple"
   913                           ; Number of cases is 2, Range of values is 0 to 1
   914                           ; switch strategies available:
   915                           ; Name         Instructions Cycles
   916                           ; simple_byte            7     4 (average)
   917                           ; direct_byte           14     8 (fixed)
   918                           ; jumptable            260     6 (fixed)
   919                           ;	Chosen strategy is simple_byte
   920     04D4  0827               	movf	lcd_put_cur@row,w
   921     04D5  3A00               	xorlw	0	; case 0
   922     04D6  1903               	skipnz
   923     04D7  2CC6               	goto	l112
   924     04D8  3A01               	xorlw	1	; case 1
   925     04D9  1903               	skipnz
   926     04DA  2CC8               	goto	l1160
   927     04DB  2CDC               	goto	l1166
   928     04DC                     l1166:
   929                           
   930                           ;newmain.c: 169: 
   931     04DC  0829               	movf	lcd_put_cur@col,w
   932     04DD  120A  118A  258B  120A  118A  	fcall	_lcd_send_cmd
   933     04E2                     l115:
   934     04E2  0008               	return
   935     04E3                     __end_of_lcd_put_cur:
   936                           
   937                           	psect	text3
   938     0679                     __ptext3:	
   939 ;; *************** function _lcd_init *****************
   940 ;; Defined at:
   941 ;;		line 173 in file "newmain.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   955 ;;      Params:         0       0       0       0       0
   956 ;;      Locals:         0       0       0       0       0
   957 ;;      Temps:          0       3       0       0       0
   958 ;;      Totals:         0       3       0       0       0
   959 ;;Total ram usage:        3 bytes
   960 ;; Hardware stack levels used: 1
   961 ;; Hardware stack levels required when called: 4
   962 ;; This function calls:
   963 ;;		_lcd_send_cmd
   964 ;; This function is called by:
   965 ;;		_main
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969     0679                     _lcd_init:	
   970                           ;psect for function _lcd_init
   971                           
   972     0679                     l1172:	
   973                           ;incstack = 0
   974                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   975                           
   976                           
   977                           ;newmain.c: 176:  _delay((unsigned long)((1)*(20000000/4000.0)));
   978     0679  3002               	movlw	2
   979     067A  1283               	bcf	3,5	;RP0=0, select bank0
   980     067B  1303               	bcf	3,6	;RP1=0, select bank0
   981     067C  00A9               	movwf	??_lcd_init+2
   982     067D  3045               	movlw	69
   983     067E  00A8               	movwf	??_lcd_init+1
   984     067F  30A9               	movlw	169
   985     0680  00A7               	movwf	??_lcd_init
   986     0681                     u457:
   987     0681  0BA7               	decfsz	??_lcd_init,f
   988     0682  2E81               	goto	u457
   989     0683  0BA8               	decfsz	??_lcd_init+1,f
   990     0684  2E81               	goto	u457
   991     0685  0BA9               	decfsz	??_lcd_init+2,f
   992     0686  2E81               	goto	u457
   993     0687                     l1174:
   994                           
   995                           ;newmain.c: 177:  _delay((unsigned long)((1)*(20000000/4000.0)));
   996     0687  3030               	movlw	48
   997     0688  120A  118A  258B  120A  118A  	fcall	_lcd_send_cmd
   998     068D                     l1176:
   999                           
  1000                           ;newmain.c: 178:  lcd_send_cmd (0x06);
  1001     068D  3021               	movlw	33
  1002     068E  1283               	bcf	3,5	;RP0=0, select bank0
  1003     068F  1303               	bcf	3,6	;RP1=0, select bank0
  1004     0690  00A8               	movwf	??_lcd_init+1
  1005     0691  3075               	movlw	117
  1006     0692  00A7               	movwf	??_lcd_init
  1007     0693                     u467:
  1008     0693  0BA7               	decfsz	??_lcd_init,f
  1009     0694  2E93               	goto	u467
  1010     0695  0BA8               	decfsz	??_lcd_init+1,f
  1011     0696  2E93               	goto	u467
  1012     0697  2E98               	nop2
  1013                           
  1014                           ;newmain.c: 179:  _delay((unsigned long)((1)*(20000000/4000.0)));
  1015     0698  3030               	movlw	48
  1016     0699  120A  118A  258B  120A  118A  	fcall	_lcd_send_cmd
  1017     069E                     l1178:
  1018                           
  1019                           ;newmain.c: 180:  lcd_send_cmd (0x0C);
  1020     069E  3007               	movlw	7
  1021     069F  1283               	bcf	3,5	;RP0=0, select bank0
  1022     06A0  1303               	bcf	3,6	;RP1=0, select bank0
  1023     06A1  00A8               	movwf	??_lcd_init+1
  1024     06A2  307C               	movlw	124
  1025     06A3  00A7               	movwf	??_lcd_init
  1026     06A4                     u477:
  1027     06A4  0BA7               	decfsz	??_lcd_init,f
  1028     06A5  2EA4               	goto	u477
  1029     06A6  0BA8               	decfsz	??_lcd_init+1,f
  1030     06A7  2EA4               	goto	u477
  1031     06A8  0000               	nop
  1032     06A9                     l1180:
  1033                           
  1034                           ;newmain.c: 181: }
  1035     06A9  3030               	movlw	48
  1036     06AA  120A  118A  258B  120A  118A  	fcall	_lcd_send_cmd
  1037                           
  1038                           ;newmain.c: 182: 
  1039     06AF  3041               	movlw	65
  1040     06B0  1283               	bcf	3,5	;RP0=0, select bank0
  1041     06B1  1303               	bcf	3,6	;RP1=0, select bank0
  1042     06B2  00A8               	movwf	??_lcd_init+1
  1043     06B3  30ED               	movlw	237
  1044     06B4  00A7               	movwf	??_lcd_init
  1045     06B5                     u487:
  1046     06B5  0BA7               	decfsz	??_lcd_init,f
  1047     06B6  2EB5               	goto	u487
  1048     06B7  0BA8               	decfsz	??_lcd_init+1,f
  1049     06B8  2EB5               	goto	u487
  1050     06B9  2EBA               	nop2
  1051     06BA                     l1182:
  1052                           
  1053                           ;newmain.c: 183: void lcd_send_string (char *str)
  1054     06BA  3020               	movlw	32
  1055     06BB  120A  118A  258B  120A  118A  	fcall	_lcd_send_cmd
  1056     06C0                     l1184:
  1057                           
  1058                           ;newmain.c: 184: {
  1059     06C0  3041               	movlw	65
  1060     06C1  1283               	bcf	3,5	;RP0=0, select bank0
  1061     06C2  1303               	bcf	3,6	;RP1=0, select bank0
  1062     06C3  00A8               	movwf	??_lcd_init+1
  1063     06C4  30ED               	movlw	237
  1064     06C5  00A7               	movwf	??_lcd_init
  1065     06C6                     u497:
  1066     06C6  0BA7               	decfsz	??_lcd_init,f
  1067     06C7  2EC6               	goto	u497
  1068     06C8  0BA8               	decfsz	??_lcd_init+1,f
  1069     06C9  2EC6               	goto	u497
  1070     06CA  2ECB               	nop2
  1071                           
  1072                           ;newmain.c: 187: 
  1073     06CB  3028               	movlw	40
  1074     06CC  120A  118A  258B  120A  118A  	fcall	_lcd_send_cmd
  1075     06D1                     l1186:
  1076                           
  1077                           ;newmain.c: 188: 
  1078     06D1  3007               	movlw	7
  1079     06D2  1283               	bcf	3,5	;RP0=0, select bank0
  1080     06D3  1303               	bcf	3,6	;RP1=0, select bank0
  1081     06D4  00A8               	movwf	??_lcd_init+1
  1082     06D5  307C               	movlw	124
  1083     06D6  00A7               	movwf	??_lcd_init
  1084     06D7                     u507:
  1085     06D7  0BA7               	decfsz	??_lcd_init,f
  1086     06D8  2ED7               	goto	u507
  1087     06D9  0BA8               	decfsz	??_lcd_init+1,f
  1088     06DA  2ED7               	goto	u507
  1089     06DB  0000               	nop
  1090     06DC                     l1188:
  1091                           
  1092                           ;newmain.c: 189: uint16_t adc_value = 0;
  1093     06DC  3008               	movlw	8
  1094     06DD  120A  118A  258B  120A  118A  	fcall	_lcd_send_cmd
  1095                           
  1096                           ;newmain.c: 190: 
  1097     06E2  3007               	movlw	7
  1098     06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1099     06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1100     06E5  00A8               	movwf	??_lcd_init+1
  1101     06E6  307C               	movlw	124
  1102     06E7  00A7               	movwf	??_lcd_init
  1103     06E8                     u517:
  1104     06E8  0BA7               	decfsz	??_lcd_init,f
  1105     06E9  2EE8               	goto	u517
  1106     06EA  0BA8               	decfsz	??_lcd_init+1,f
  1107     06EB  2EE8               	goto	u517
  1108     06EC  0000               	nop
  1109     06ED                     l1190:
  1110                           
  1111                           ;newmain.c: 191: 
  1112     06ED  3001               	movlw	1
  1113     06EE  120A  118A  258B  120A  118A  	fcall	_lcd_send_cmd
  1114     06F3                     l1192:
  1115                           
  1116                           ;newmain.c: 192: void main()
  1117     06F3  3007               	movlw	7
  1118     06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1119     06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1120     06F6  00A8               	movwf	??_lcd_init+1
  1121     06F7  307C               	movlw	124
  1122     06F8  00A7               	movwf	??_lcd_init
  1123     06F9                     u527:
  1124     06F9  0BA7               	decfsz	??_lcd_init,f
  1125     06FA  2EF9               	goto	u527
  1126     06FB  0BA8               	decfsz	??_lcd_init+1,f
  1127     06FC  2EF9               	goto	u527
  1128     06FD  0000               	nop
  1129     06FE                     l1194:
  1130                           
  1131                           ;newmain.c: 193: {
  1132     06FE  3007               	movlw	7
  1133     06FF  1283               	bcf	3,5	;RP0=0, select bank0
  1134     0700  1303               	bcf	3,6	;RP1=0, select bank0
  1135     0701  00A8               	movwf	??_lcd_init+1
  1136     0702  307C               	movlw	124
  1137     0703  00A7               	movwf	??_lcd_init
  1138     0704                     u537:
  1139     0704  0BA7               	decfsz	??_lcd_init,f
  1140     0705  2F04               	goto	u537
  1141     0706  0BA8               	decfsz	??_lcd_init+1,f
  1142     0707  2F04               	goto	u537
  1143     0708  0000               	nop
  1144     0709                     l1196:
  1145                           
  1146                           ;newmain.c: 194: 
  1147     0709  3006               	movlw	6
  1148     070A  120A  118A  258B  120A  118A  	fcall	_lcd_send_cmd
  1149                           
  1150                           ;newmain.c: 195:   TRISA = 0XFF;
  1151     070F  3007               	movlw	7
  1152     0710  1283               	bcf	3,5	;RP0=0, select bank0
  1153     0711  1303               	bcf	3,6	;RP1=0, select bank0
  1154     0712  00A8               	movwf	??_lcd_init+1
  1155     0713  307C               	movlw	124
  1156     0714  00A7               	movwf	??_lcd_init
  1157     0715                     u547:
  1158     0715  0BA7               	decfsz	??_lcd_init,f
  1159     0716  2F15               	goto	u547
  1160     0717  0BA8               	decfsz	??_lcd_init+1,f
  1161     0718  2F15               	goto	u547
  1162     0719  0000               	nop
  1163     071A                     l1198:
  1164                           
  1165                           ;newmain.c: 196:   TRISB = 0x00;
  1166     071A  300C               	movlw	12
  1167     071B  120A  118A  258B  120A  118A  	fcall	_lcd_send_cmd
  1168     0720                     l118:
  1169     0720  0008               	return
  1170     0721                     __end_of_lcd_init:
  1171                           
  1172                           	psect	text4
  1173     0502                     __ptext4:	
  1174 ;; *************** function _lcd_clear *****************
  1175 ;; Defined at:
  1176 ;;		line 148 in file "newmain.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;  i               2   12[COMMON] int 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1190 ;;      Params:         0       0       0       0       0
  1191 ;;      Locals:         2       0       0       0       0
  1192 ;;      Temps:          0       0       0       0       0
  1193 ;;      Totals:         2       0       0       0       0
  1194 ;;Total ram usage:        2 bytes
  1195 ;; Hardware stack levels used: 1
  1196 ;; Hardware stack levels required when called: 4
  1197 ;; This function calls:
  1198 ;;		_lcd_send_cmd
  1199 ;;		_lcd_send_data
  1200 ;; This function is called by:
  1201 ;;		_main
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205     0502                     _lcd_clear:	
  1206                           ;psect for function _lcd_clear
  1207                           
  1208     0502                     l1144:	
  1209                           ;incstack = 0
  1210                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1211                           
  1212                           
  1213                           ;newmain.c: 150:             break;
  1214     0502  3080               	movlw	128
  1215     0503  120A  118A  258B  120A  118A  	fcall	_lcd_send_cmd
  1216     0508                     l1146:
  1217                           
  1218                           ;newmain.c: 151:     }
  1219     0508  01FC               	clrf	lcd_clear@i
  1220     0509  01FD               	clrf	lcd_clear@i+1
  1221     050A                     l1152:
  1222                           
  1223                           ;newmain.c: 152: ;newmain.c: 153:     lcd_send_cmd (col);
  1224     050A  3020               	movlw	32
  1225     050B  120A  118A  25CF  120A  118A  	fcall	_lcd_send_data
  1226     0510                     l1154:
  1227                           
  1228                           ;newmain.c: 154: }
  1229     0510  3001               	movlw	1
  1230     0511  07FC               	addwf	lcd_clear@i,f
  1231     0512  1803               	skipnc
  1232     0513  0AFD               	incf	lcd_clear@i+1,f
  1233     0514  3000               	movlw	0
  1234     0515  07FD               	addwf	lcd_clear@i+1,f
  1235     0516                     l1156:
  1236     0516  087D               	movf	lcd_clear@i+1,w
  1237     0517  3A80               	xorlw	128
  1238     0518  00FF               	movwf	btemp+1
  1239     0519  3080               	movlw	128
  1240     051A  027F               	subwf	btemp+1,w
  1241     051B  1D03               	skipz
  1242     051C  2D1F               	goto	u375
  1243     051D  3046               	movlw	70
  1244     051E  027C               	subwf	lcd_clear@i,w
  1245     051F                     u375:
  1246     051F  1C03               	skipc
  1247     0520  2D22               	goto	u371
  1248     0521  2D23               	goto	u370
  1249     0522                     u371:
  1250     0522  2D0A               	goto	l1152
  1251     0523                     u370:
  1252     0523                     l108:
  1253     0523  0008               	return
  1254     0524                     __end_of_lcd_clear:
  1255                           
  1256                           	psect	text5
  1257     05CF                     __ptext5:	
  1258 ;; *************** function _lcd_send_data *****************
  1259 ;; Defined at:
  1260 ;;		line 131 in file "newmain.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;  data            1    wreg     unsigned char 
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;  data            1    4[BANK0 ] unsigned char 
  1265 ;;  data_t          4    0[BANK0 ] unsigned char [4]
  1266 ;;  data_l          1    6[BANK0 ] unsigned char 
  1267 ;;  data_u          1    5[BANK0 ] unsigned char 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1277 ;;      Params:         0       0       0       0       0
  1278 ;;      Locals:         0       7       0       0       0
  1279 ;;      Temps:          3       0       0       0       0
  1280 ;;      Totals:         3       7       0       0       0
  1281 ;;Total ram usage:       10 bytes
  1282 ;; Hardware stack levels used: 1
  1283 ;; Hardware stack levels required when called: 3
  1284 ;; This function calls:
  1285 ;;		_I2C_Multi_Send
  1286 ;;		_I2C_Start
  1287 ;;		_I2C_Stop
  1288 ;; This function is called by:
  1289 ;;		_lcd_clear
  1290 ;;		_lcd_send_string
  1291 ;;		_main
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295     05CF                     _lcd_send_data:	
  1296                           ;psect for function _lcd_send_data
  1297                           
  1298                           
  1299                           ;incstack = 0
  1300                           ; Regs used in _lcd_send_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1301                           ;lcd_send_data@data stored from wreg
  1302     05CF  1283               	bcf	3,5	;RP0=0, select bank0
  1303     05D0  1303               	bcf	3,6	;RP1=0, select bank0
  1304     05D1  00A4               	movwf	lcd_send_data@data
  1305     05D2                     l1084:
  1306                           
  1307                           ;newmain.c: 131: ;newmain.c: 132: void lcd_clear (void);newmain.c: 133: {;newmain.c: 134
      +                          :  lcd_send_cmd (0x80);;newmain.c: 135:  for (int i=0; i<70; i++)
  1308     05D2  0824               	movf	lcd_send_data@data,w
  1309     05D3  39F0               	andlw	240
  1310     05D4  00A5               	movwf	lcd_send_data@data_u
  1311     05D5                     l1086:
  1312                           
  1313                           ;newmain.c: 136:  {
  1314     05D5  0824               	movf	lcd_send_data@data,w
  1315     05D6  00F9               	movwf	??_lcd_send_data
  1316     05D7  3003               	movlw	3
  1317     05D8                     u285:
  1318     05D8  1003               	clrc
  1319     05D9  0DF9               	rlf	??_lcd_send_data,f
  1320     05DA  3EFF               	addlw	-1
  1321     05DB  1D03               	skipz
  1322     05DC  2DD8               	goto	u285
  1323     05DD  1003               	clrc
  1324     05DE  0D79               	rlf	??_lcd_send_data,w
  1325     05DF  39F0               	andlw	240
  1326     05E0  00A6               	movwf	lcd_send_data@data_l
  1327     05E1                     l1088:
  1328                           
  1329                           ;newmain.c: 137:   lcd_send_data (' ');
  1330     05E1  0825               	movf	lcd_send_data@data_u,w
  1331     05E2  380D               	iorlw	13
  1332     05E3  00A0               	movwf	lcd_send_data@data_t
  1333     05E4                     l1090:
  1334                           
  1335                           ;newmain.c: 138:  }
  1336     05E4  0825               	movf	lcd_send_data@data_u,w
  1337     05E5  3809               	iorlw	9
  1338     05E6  00A1               	movwf	lcd_send_data@data_t+1
  1339     05E7                     l1092:
  1340                           
  1341                           ;newmain.c: 139: }
  1342     05E7  0826               	movf	lcd_send_data@data_l,w
  1343     05E8  380D               	iorlw	13
  1344     05E9  00A2               	movwf	lcd_send_data@data_t+2
  1345     05EA                     l1094:
  1346                           
  1347                           ;newmain.c: 140: 
  1348     05EA  0826               	movf	lcd_send_data@data_l,w
  1349     05EB  3809               	iorlw	9
  1350     05EC  00A3               	movwf	lcd_send_data@data_t+3
  1351     05ED                     l1096:
  1352                           
  1353                           ;newmain.c: 141: void lcd_put_cur(int row, int col)
  1354     05ED  120A  118A  2496  120A  118A  	fcall	_I2C_Start
  1355     05F2                     l1098:
  1356                           
  1357                           ;newmain.c: 142: {
  1358     05F2  3027               	movlw	39
  1359     05F3  00F1               	movwf	I2C_Multi_Send@address
  1360     05F4  3020               	movlw	(low (lcd_send_data@data_t| 0))& (0+255)
  1361     05F5  00F2               	movwf	I2C_Multi_Send@data
  1362     05F6  3004               	movlw	4
  1363     05F7  00F3               	movwf	I2C_Multi_Send@size
  1364     05F8  3000               	movlw	0
  1365     05F9  00F4               	movwf	I2C_Multi_Send@size+1
  1366     05FA  3000               	movlw	0
  1367     05FB  120A  118A  2524  120A  118A  	fcall	_I2C_Multi_Send
  1368     0600                     l1100:
  1369                           
  1370                           ;newmain.c: 143:     switch (row)
  1371     0600  120A  118A  249F  120A  118A  	fcall	_I2C_Stop
  1372     0605                     l1102:
  1373                           
  1374                           ;newmain.c: 144:     {
  1375     0605  3002               	movlw	2
  1376     0606  00FB               	movwf	??_lcd_send_data+2
  1377     0607  3045               	movlw	69
  1378     0608  00FA               	movwf	??_lcd_send_data+1
  1379     0609  30A9               	movlw	169
  1380     060A  00F9               	movwf	??_lcd_send_data
  1381     060B                     u557:
  1382     060B  0BF9               	decfsz	??_lcd_send_data,f
  1383     060C  2E0B               	goto	u557
  1384     060D  0BFA               	decfsz	??_lcd_send_data+1,f
  1385     060E  2E0B               	goto	u557
  1386     060F  0BFB               	decfsz	??_lcd_send_data+2,f
  1387     0610  2E0B               	goto	u557
  1388     0611  2E12               	nop2
  1389     0612                     l103:
  1390     0612  0008               	return
  1391     0613                     __end_of_lcd_send_data:
  1392                           
  1393                           	psect	text6
  1394     058B                     __ptext6:	
  1395 ;; *************** function _lcd_send_cmd *****************
  1396 ;; Defined at:
  1397 ;;		line 114 in file "newmain.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;  cmd             1    wreg     unsigned char 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  cmd             1    4[BANK0 ] unsigned char 
  1402 ;;  data_t          4    0[BANK0 ] unsigned char [4]
  1403 ;;  data_l          1    6[BANK0 ] unsigned char 
  1404 ;;  data_u          1    5[BANK0 ] unsigned char 
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1414 ;;      Params:         0       0       0       0       0
  1415 ;;      Locals:         0       7       0       0       0
  1416 ;;      Temps:          3       0       0       0       0
  1417 ;;      Totals:         3       7       0       0       0
  1418 ;;Total ram usage:       10 bytes
  1419 ;; Hardware stack levels used: 1
  1420 ;; Hardware stack levels required when called: 3
  1421 ;; This function calls:
  1422 ;;		_I2C_Multi_Send
  1423 ;;		_I2C_Start
  1424 ;;		_I2C_Stop
  1425 ;; This function is called by:
  1426 ;;		_lcd_clear
  1427 ;;		_lcd_put_cur
  1428 ;;		_lcd_init
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432     058B                     _lcd_send_cmd:	
  1433                           ;psect for function _lcd_send_cmd
  1434                           
  1435                           
  1436                           ;incstack = 0
  1437                           ; Regs used in _lcd_send_cmd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1438                           ;lcd_send_cmd@cmd stored from wreg
  1439     058B  1283               	bcf	3,5	;RP0=0, select bank0
  1440     058C  1303               	bcf	3,6	;RP1=0, select bank0
  1441     058D  00A4               	movwf	lcd_send_cmd@cmd
  1442     058E                     l1064:
  1443                           
  1444                           ;newmain.c: 114: ;newmain.c: 115: void lcd_send_data (char data);newmain.c: 116: {;newma
      +                          in.c: 117:  char data_u, data_l;;newmain.c: 118:  uint8_t data_t[4];
  1445     058E  0824               	movf	lcd_send_cmd@cmd,w
  1446     058F  39F0               	andlw	240
  1447     0590  00A5               	movwf	lcd_send_cmd@data_u
  1448     0591                     l1066:
  1449                           
  1450                           ;newmain.c: 119:  data_u = (data&0xf0);
  1451     0591  0824               	movf	lcd_send_cmd@cmd,w
  1452     0592  00F9               	movwf	??_lcd_send_cmd
  1453     0593  3003               	movlw	3
  1454     0594                     u275:
  1455     0594  1003               	clrc
  1456     0595  0DF9               	rlf	??_lcd_send_cmd,f
  1457     0596  3EFF               	addlw	-1
  1458     0597  1D03               	skipz
  1459     0598  2D94               	goto	u275
  1460     0599  1003               	clrc
  1461     059A  0D79               	rlf	??_lcd_send_cmd,w
  1462     059B  39F0               	andlw	240
  1463     059C  00A6               	movwf	lcd_send_cmd@data_l
  1464     059D                     l1068:
  1465                           
  1466                           ;newmain.c: 120:  data_l = ((data<<4)&0xf0);
  1467     059D  0825               	movf	lcd_send_cmd@data_u,w
  1468     059E  380C               	iorlw	12
  1469     059F  00A0               	movwf	lcd_send_cmd@data_t
  1470     05A0                     l1070:
  1471                           
  1472                           ;newmain.c: 121:  data_t[0] = data_u|0x0D;
  1473     05A0  0825               	movf	lcd_send_cmd@data_u,w
  1474     05A1  3808               	iorlw	8
  1475     05A2  00A1               	movwf	lcd_send_cmd@data_t+1
  1476     05A3                     l1072:
  1477                           
  1478                           ;newmain.c: 122:  data_t[1] = data_u|0x09;
  1479     05A3  0826               	movf	lcd_send_cmd@data_l,w
  1480     05A4  380C               	iorlw	12
  1481     05A5  00A2               	movwf	lcd_send_cmd@data_t+2
  1482     05A6                     l1074:
  1483                           
  1484                           ;newmain.c: 123:  data_t[2] = data_l|0x0D;
  1485     05A6  0826               	movf	lcd_send_cmd@data_l,w
  1486     05A7  3808               	iorlw	8
  1487     05A8  00A3               	movwf	lcd_send_cmd@data_t+3
  1488     05A9                     l1076:
  1489                           
  1490                           ;newmain.c: 124:  data_t[3] = data_l|0x09;
  1491     05A9  120A  118A  2496  120A  118A  	fcall	_I2C_Start
  1492     05AE                     l1078:
  1493                           
  1494                           ;newmain.c: 125:  I2C_Start();
  1495     05AE  3027               	movlw	39
  1496     05AF  00F1               	movwf	I2C_Multi_Send@address
  1497     05B0  3020               	movlw	(low (lcd_send_cmd@data_t| 0))& (0+255)
  1498     05B1  00F2               	movwf	I2C_Multi_Send@data
  1499     05B2  3004               	movlw	4
  1500     05B3  00F3               	movwf	I2C_Multi_Send@size
  1501     05B4  3000               	movlw	0
  1502     05B5  00F4               	movwf	I2C_Multi_Send@size+1
  1503     05B6  3000               	movlw	0
  1504     05B7  120A  118A  2524  120A  118A  	fcall	_I2C_Multi_Send
  1505     05BC                     l1080:
  1506                           
  1507                           ;newmain.c: 126:     I2C_Multi_Send(0,0X27,data_t,sizeof(data_t));
  1508     05BC  120A  118A  249F  120A  118A  	fcall	_I2C_Stop
  1509     05C1                     l1082:
  1510                           
  1511                           ;newmain.c: 127:     I2C_Stop();
  1512     05C1  3002               	movlw	2
  1513     05C2  00FB               	movwf	??_lcd_send_cmd+2
  1514     05C3  3045               	movlw	69
  1515     05C4  00FA               	movwf	??_lcd_send_cmd+1
  1516     05C5  30A9               	movlw	169
  1517     05C6  00F9               	movwf	??_lcd_send_cmd
  1518     05C7                     u567:
  1519     05C7  0BF9               	decfsz	??_lcd_send_cmd,f
  1520     05C8  2DC7               	goto	u567
  1521     05C9  0BFA               	decfsz	??_lcd_send_cmd+1,f
  1522     05CA  2DC7               	goto	u567
  1523     05CB  0BFB               	decfsz	??_lcd_send_cmd+2,f
  1524     05CC  2DC7               	goto	u567
  1525     05CD  2DCE               	nop2
  1526     05CE                     l100:
  1527     05CE  0008               	return
  1528     05CF                     __end_of_lcd_send_cmd:
  1529                           
  1530                           	psect	text7
  1531     049F                     __ptext7:	
  1532 ;; *************** function _I2C_Stop *****************
  1533 ;; Defined at:
  1534 ;;		line 47 in file "newmain.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;		None
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;		None
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  1    wreg      void 
  1541 ;; Registers used:
  1542 ;;		wreg, status,2, status,0, pclath, cstack
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1548 ;;      Params:         0       0       0       0       0
  1549 ;;      Locals:         0       0       0       0       0
  1550 ;;      Temps:          0       0       0       0       0
  1551 ;;      Totals:         0       0       0       0       0
  1552 ;;Total ram usage:        0 bytes
  1553 ;; Hardware stack levels used: 1
  1554 ;; Hardware stack levels required when called: 1
  1555 ;; This function calls:
  1556 ;;		_I2C_IDLE
  1557 ;; This function is called by:
  1558 ;;		_lcd_send_cmd
  1559 ;;		_lcd_send_data
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563     049F                     _I2C_Stop:	
  1564                           ;psect for function _I2C_Stop
  1565                           
  1566     049F                     l1048:	
  1567                           ;incstack = 0
  1568                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  1569                           
  1570                           
  1571                           ;newmain.c: 49: void I2C_NACK(void)
  1572     049F  120A  118A  24A8  120A  118A  	fcall	_I2C_IDLE
  1573     04A4                     l1050:
  1574                           
  1575                           ;newmain.c: 50: {
  1576     04A4  1683               	bsf	3,5	;RP0=1, select bank1
  1577     04A5  1303               	bcf	3,6	;RP1=0, select bank1
  1578     04A6  1511               	bsf	17,2	;volatile
  1579     04A7                     l63:
  1580     04A7  0008               	return
  1581     04A8                     __end_of_I2C_Stop:
  1582                           
  1583                           	psect	text8
  1584     0496                     __ptext8:	
  1585 ;; *************** function _I2C_Start *****************
  1586 ;; Defined at:
  1587 ;;		line 41 in file "newmain.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;		None
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;		None
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2, status,0, pclath, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1601 ;;      Params:         0       0       0       0       0
  1602 ;;      Locals:         0       0       0       0       0
  1603 ;;      Temps:          0       0       0       0       0
  1604 ;;      Totals:         0       0       0       0       0
  1605 ;;Total ram usage:        0 bytes
  1606 ;; Hardware stack levels used: 1
  1607 ;; Hardware stack levels required when called: 1
  1608 ;; This function calls:
  1609 ;;		_I2C_IDLE
  1610 ;; This function is called by:
  1611 ;;		_lcd_send_cmd
  1612 ;;		_lcd_send_data
  1613 ;; This function uses a non-reentrant model
  1614 ;;
  1615                           
  1616     0496                     _I2C_Start:	
  1617                           ;psect for function _I2C_Start
  1618                           
  1619     0496                     l1044:	
  1620                           ;incstack = 0
  1621                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  1622                           
  1623                           
  1624                           ;newmain.c: 43: void I2C_ACK(void)
  1625     0496  120A  118A  24A8  120A  118A  	fcall	_I2C_IDLE
  1626     049B                     l1046:
  1627                           
  1628                           ;newmain.c: 44: {
  1629     049B  1683               	bsf	3,5	;RP0=1, select bank1
  1630     049C  1303               	bcf	3,6	;RP1=0, select bank1
  1631     049D  1411               	bsf	17,0	;volatile
  1632     049E                     l60:
  1633     049E  0008               	return
  1634     049F                     __end_of_I2C_Start:
  1635                           
  1636                           	psect	text9
  1637     0524                     __ptext9:	
  1638 ;; *************** function _I2C_Multi_Send *****************
  1639 ;; Defined at:
  1640 ;;		line 88 in file "newmain.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  cmd             1    wreg     unsigned char 
  1643 ;;  address         1    1[COMMON] unsigned char 
  1644 ;;  data            1    2[COMMON] PTR unsigned char 
  1645 ;;		 -> lcd_send_data@data_t(4), lcd_send_cmd@data_t(4), 
  1646 ;;  size            2    3[COMMON] int 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;  cmd             1    0[COMMON] unsigned char 
  1649 ;;  n               2    7[COMMON] int 
  1650 ;;  send            1    6[COMMON] unsigned char 
  1651 ;; Return value:  Size  Location     Type
  1652 ;;                  1    wreg      void 
  1653 ;; Registers used:
  1654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1655 ;; Tracked objects:
  1656 ;;		On entry : 0/0
  1657 ;;		On exit  : 0/0
  1658 ;;		Unchanged: 0/0
  1659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1660 ;;      Params:         4       0       0       0       0
  1661 ;;      Locals:         3       0       0       0       0
  1662 ;;      Temps:          1       0       0       0       0
  1663 ;;      Totals:         8       0       0       0       0
  1664 ;;Total ram usage:        8 bytes
  1665 ;; Hardware stack levels used: 1
  1666 ;; Hardware stack levels required when called: 2
  1667 ;; This function calls:
  1668 ;;		_I2C_Write
  1669 ;; This function is called by:
  1670 ;;		_lcd_send_cmd
  1671 ;;		_lcd_send_data
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675     0524                     _I2C_Multi_Send:	
  1676                           ;psect for function _I2C_Multi_Send
  1677                           
  1678     0524                     l1052:	
  1679                           ;incstack = 0
  1680                           ; Regs used in _I2C_Multi_Send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1681                           
  1682                           
  1683                           ;newmain.c: 89:     ADCON0bits.CHS1 = 0;
  1684     0524  0871               	movf	I2C_Multi_Send@address,w
  1685     0525  00F5               	movwf	??_I2C_Multi_Send
  1686     0526  0775               	addwf	??_I2C_Multi_Send,w
  1687     0527  39FE               	andlw	254
  1688     0528  00F6               	movwf	I2C_Multi_Send@send
  1689     0529                     l1054:
  1690                           
  1691                           ;newmain.c: 90:     ADCON0bits.CHS2 = 0;
  1692     0529  0876               	movf	I2C_Multi_Send@send,w
  1693     052A  120A  118A  24B5  120A  118A  	fcall	_I2C_Write
  1694     052F                     l1056:
  1695                           
  1696                           ;newmain.c: 91: 
  1697     052F  01F7               	clrf	I2C_Multi_Send@n
  1698     0530  01F8               	clrf	I2C_Multi_Send@n+1
  1699     0531  2D44               	goto	l1062
  1700     0532                     l1058:
  1701                           
  1702                           ;newmain.c: 92:     ADCON0 |= channel<<3;
  1703     0532  0877               	movf	I2C_Multi_Send@n,w
  1704     0533  0772               	addwf	I2C_Multi_Send@data,w
  1705     0534  00F5               	movwf	??_I2C_Multi_Send
  1706     0535  0875               	movf	??_I2C_Multi_Send,w
  1707     0536  0084               	movwf	4
  1708     0537  1383               	bcf	3,7	;select IRP bank0
  1709     0538  0800               	movf	0,w
  1710     0539  120A  118A  24B5  120A  118A  	fcall	_I2C_Write
  1711     053E                     l1060:
  1712                           
  1713                           ;newmain.c: 93:     GO_DONE = 1;
  1714     053E  3001               	movlw	1
  1715     053F  07F7               	addwf	I2C_Multi_Send@n,f
  1716     0540  1803               	skipnc
  1717     0541  0AF8               	incf	I2C_Multi_Send@n+1,f
  1718     0542  3000               	movlw	0
  1719     0543  07F8               	addwf	I2C_Multi_Send@n+1,f
  1720     0544                     l1062:
  1721     0544  0878               	movf	I2C_Multi_Send@n+1,w
  1722     0545  3A80               	xorlw	128
  1723     0546  00F5               	movwf	??_I2C_Multi_Send
  1724     0547  0874               	movf	I2C_Multi_Send@size+1,w
  1725     0548  3A80               	xorlw	128
  1726     0549  0275               	subwf	??_I2C_Multi_Send,w
  1727     054A  1D03               	skipz
  1728     054B  2D4E               	goto	u265
  1729     054C  0873               	movf	I2C_Multi_Send@size,w
  1730     054D  0277               	subwf	I2C_Multi_Send@n,w
  1731     054E                     u265:
  1732     054E  1C03               	skipc
  1733     054F  2D51               	goto	u261
  1734     0550  2D52               	goto	u260
  1735     0551                     u261:
  1736     0551  2D32               	goto	l1058
  1737     0552                     u260:
  1738     0552                     l87:
  1739     0552  0008               	return
  1740     0553                     __end_of_I2C_Multi_Send:
  1741                           
  1742                           	psect	text10
  1743     04B5                     __ptext10:	
  1744 ;; *************** function _I2C_Write *****************
  1745 ;; Defined at:
  1746 ;;		line 72 in file "newmain.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  Data            1    wreg     unsigned char 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  Data            1    0[COMMON] unsigned char 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      unsigned char 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2, status,0, pclath, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1760 ;;      Params:         0       0       0       0       0
  1761 ;;      Locals:         1       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0
  1763 ;;      Totals:         1       0       0       0       0
  1764 ;;Total ram usage:        1 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; Hardware stack levels required when called: 1
  1767 ;; This function calls:
  1768 ;;		_I2C_IDLE
  1769 ;; This function is called by:
  1770 ;;		_I2C_Multi_Send
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774     04B5                     _I2C_Write:	
  1775                           ;psect for function _I2C_Write
  1776                           
  1777                           
  1778                           ;incstack = 0
  1779                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  1780                           ;I2C_Write@Data stored from wreg
  1781     04B5  00F0               	movwf	I2C_Write@Data
  1782     04B6                     l1034:
  1783                           
  1784                           ;newmain.c: 72: void I2C_Multi_Send(uint8_t cmd, uint8_t address, uint8_t *data, int siz
      +                          e){;newmain.c: 73:     uint8_t send = (uint8_t) ((address << 1) & (0b11111110));;newmain
      +                          .c: 74:     I2C_Write(send);
  1785     04B6  120A  118A  24A8  120A  118A  	fcall	_I2C_IDLE
  1786     04BB                     l1036:
  1787                           
  1788                           ;newmain.c: 75:     for(int n = 0; n < size; n++){
  1789     04BB  0870               	movf	I2C_Write@Data,w
  1790     04BC  1283               	bcf	3,5	;RP0=0, select bank0
  1791     04BD  1303               	bcf	3,6	;RP1=0, select bank0
  1792     04BE  0093               	movwf	19	;volatile
  1793     04BF                     l1038:
  1794                           
  1795                           ;newmain.c: 76:         I2C_Write(data[n]);
  1796     04BF  120A  118A  24A8  120A  118A  	fcall	_I2C_IDLE
  1797     04C4                     l1040:
  1798     04C4                     l75:	
  1799                           ;newmain.c: 77:     };	Return value of _I2C_Write is never used
  1800                           
  1801     04C4  0008               	return
  1802     04C5                     __end_of_I2C_Write:
  1803                           
  1804                           	psect	text11
  1805     04A8                     __ptext11:	
  1806 ;; *************** function _I2C_IDLE *****************
  1807 ;; Defined at:
  1808 ;;		line 36 in file "newmain.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;		None
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;		None
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		wreg, status,2
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1822 ;;      Params:         0       0       0       0       0
  1823 ;;      Locals:         0       0       0       0       0
  1824 ;;      Temps:          0       0       0       0       0
  1825 ;;      Totals:         0       0       0       0       0
  1826 ;;Total ram usage:        0 bytes
  1827 ;; Hardware stack levels used: 1
  1828 ;; This function calls:
  1829 ;;		Nothing
  1830 ;; This function is called by:
  1831 ;;		_I2C_Start
  1832 ;;		_I2C_Stop
  1833 ;;		_I2C_Write
  1834 ;;		_I2C_Restart
  1835 ;;		_I2C_ACK
  1836 ;;		_I2C_NACK
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840     04A8                     _I2C_IDLE:	
  1841                           ;psect for function _I2C_IDLE
  1842                           
  1843     04A8                     l1030:	
  1844                           ;incstack = 0
  1845                           ; Regs used in _I2C_IDLE: [wreg+status,2]
  1846                           
  1847     04A8                     l54:	
  1848                           ;newmain.c: 38: {
  1849                           
  1850     04A8  1683               	bsf	3,5	;RP0=1, select bank1
  1851     04A9  1303               	bcf	3,6	;RP1=0, select bank1
  1852     04AA  1914               	btfsc	20,2	;volatile
  1853     04AB  2CAD               	goto	u241
  1854     04AC  2CAE               	goto	u240
  1855     04AD                     u241:
  1856     04AD  2CA8               	goto	l54
  1857     04AE                     u240:
  1858     04AE                     l1032:
  1859     04AE  0811               	movf	17,w	;volatile
  1860     04AF  391F               	andlw	31
  1861     04B0  1D03               	btfss	3,2
  1862     04B1  2CB3               	goto	u251
  1863     04B2  2CB4               	goto	u250
  1864     04B3                     u251:
  1865     04B3  2CA8               	goto	l54
  1866     04B4                     u250:
  1867     04B4                     l57:
  1868     04B4  0008               	return
  1869     04B5                     __end_of_I2C_IDLE:
  1870                           
  1871                           	psect	text12
  1872     0553                     __ptext12:	
  1873 ;; *************** function _I2C_Master_Init *****************
  1874 ;; Defined at:
  1875 ;;		line 27 in file "newmain.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;  c               4    0[BANK0 ] const unsigned long 
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;		None
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1889 ;;      Params:         0       4       0       0       0
  1890 ;;      Locals:         0       0       0       0       0
  1891 ;;      Temps:          0       4       0       0       0
  1892 ;;      Totals:         0       8       0       0       0
  1893 ;;Total ram usage:        8 bytes
  1894 ;; Hardware stack levels used: 1
  1895 ;; Hardware stack levels required when called: 1
  1896 ;; This function calls:
  1897 ;;		___lldiv
  1898 ;; This function is called by:
  1899 ;;		_main
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903     0553                     _I2C_Master_Init:	
  1904                           ;psect for function _I2C_Master_Init
  1905                           
  1906     0553                     l1130:	
  1907                           ;incstack = 0
  1908                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1909                           
  1910                           
  1911                           ;newmain.c: 28: SSPCON2bits.SEN = 1;
  1912     0553  3028               	movlw	40
  1913     0554  1283               	bcf	3,5	;RP0=0, select bank0
  1914     0555  1303               	bcf	3,6	;RP1=0, select bank0
  1915     0556  0094               	movwf	20	;volatile
  1916     0557                     l1132:
  1917                           
  1918                           ;newmain.c: 29: }
  1919     0557  1683               	bsf	3,5	;RP0=1, select bank1
  1920     0558  1303               	bcf	3,6	;RP1=0, select bank1
  1921     0559  0191               	clrf	17	;volatile
  1922     055A                     l1134:
  1923                           
  1924                           ;newmain.c: 30: 
  1925     055A  0194               	clrf	20	;volatile
  1926     055B                     l1136:
  1927                           
  1928                           ;newmain.c: 31: void I2C_Stop()
  1929     055B  1283               	bcf	3,5	;RP0=0, select bank0
  1930     055C  1303               	bcf	3,6	;RP1=0, select bank0
  1931     055D  0820               	movf	I2C_Master_Init@c,w
  1932     055E  00A4               	movwf	??_I2C_Master_Init
  1933     055F  0821               	movf	I2C_Master_Init@c+1,w
  1934     0560  00A5               	movwf	??_I2C_Master_Init+1
  1935     0561  0822               	movf	I2C_Master_Init@c+2,w
  1936     0562  00A6               	movwf	??_I2C_Master_Init+2
  1937     0563  0823               	movf	I2C_Master_Init@c+3,w
  1938     0564  00A7               	movwf	??_I2C_Master_Init+3
  1939     0565  3002               	movlw	2
  1940     0566                     u365:
  1941     0566  1003               	clrc
  1942     0567  0DA4               	rlf	??_I2C_Master_Init,f
  1943     0568  0DA5               	rlf	??_I2C_Master_Init+1,f
  1944     0569  0DA6               	rlf	??_I2C_Master_Init+2,f
  1945     056A  0DA7               	rlf	??_I2C_Master_Init+3,f
  1946     056B                     u360:
  1947     056B  3EFF               	addlw	-1
  1948     056C  1D03               	skipz
  1949     056D  2D66               	goto	u365
  1950     056E  0827               	movf	??_I2C_Master_Init+3,w
  1951     056F  00F3               	movwf	___lldiv@divisor+3
  1952     0570  0826               	movf	??_I2C_Master_Init+2,w
  1953     0571  00F2               	movwf	___lldiv@divisor+2
  1954     0572  0825               	movf	??_I2C_Master_Init+1,w
  1955     0573  00F1               	movwf	___lldiv@divisor+1
  1956     0574  0824               	movf	??_I2C_Master_Init,w
  1957     0575  00F0               	movwf	___lldiv@divisor
  1958     0576  3001               	movlw	1
  1959     0577  00F7               	movwf	___lldiv@dividend+3
  1960     0578  3031               	movlw	49
  1961     0579  00F6               	movwf	___lldiv@dividend+2
  1962     057A  302D               	movlw	45
  1963     057B  00F5               	movwf	___lldiv@dividend+1
  1964     057C  3000               	movlw	0
  1965     057D  00F4               	movwf	___lldiv@dividend
  1966     057E  120A  118A  2613  120A  118A  	fcall	___lldiv
  1967     0583  0870               	movf	?___lldiv,w
  1968     0584  3EFF               	addlw	255
  1969     0585  1683               	bsf	3,5	;RP0=1, select bank1
  1970     0586  1303               	bcf	3,6	;RP1=0, select bank1
  1971     0587  0093               	movwf	19	;volatile
  1972     0588                     l1138:
  1973                           
  1974                           ;newmain.c: 32: {
  1975     0588  1587               	bsf	7,3	;volatile
  1976     0589                     l1140:
  1977                           
  1978                           ;newmain.c: 33: I2C_IDLE();
  1979     0589  1607               	bsf	7,4	;volatile
  1980     058A                     l51:
  1981     058A  0008               	return
  1982     058B                     __end_of_I2C_Master_Init:
  1983                           
  1984                           	psect	text13
  1985     0613                     __ptext13:	
  1986 ;; *************** function ___lldiv *****************
  1987 ;; Defined at:
  1988 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;  divisor         4    0[COMMON] unsigned long 
  1991 ;;  dividend        4    4[COMMON] unsigned long 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  quotient        4    9[COMMON] unsigned long 
  1994 ;;  counter         1   13[COMMON] unsigned char 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  4    0[COMMON] unsigned long 
  1997 ;; Registers used:
  1998 ;;		wreg, status,2, status,0, btemp+1
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2004 ;;      Params:         8       0       0       0       0
  2005 ;;      Locals:         5       0       0       0       0
  2006 ;;      Temps:          1       0       0       0       0
  2007 ;;      Totals:        14       0       0       0       0
  2008 ;;Total ram usage:       14 bytes
  2009 ;; Hardware stack levels used: 1
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_I2C_Master_Init
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017     0613                     ___lldiv:	
  2018                           ;psect for function ___lldiv
  2019                           
  2020     0613                     l1104:	
  2021                           ;incstack = 0
  2022                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  2023                           
  2024     0613  3000               	movlw	0
  2025     0614  00FC               	movwf	___lldiv@quotient+3
  2026     0615  3000               	movlw	0
  2027     0616  00FB               	movwf	___lldiv@quotient+2
  2028     0617  3000               	movlw	0
  2029     0618  00FA               	movwf	___lldiv@quotient+1
  2030     0619  3000               	movlw	0
  2031     061A  00F9               	movwf	___lldiv@quotient
  2032     061B  0873               	movf	___lldiv@divisor+3,w
  2033     061C  0472               	iorwf	___lldiv@divisor+2,w
  2034     061D  0471               	iorwf	___lldiv@divisor+1,w
  2035     061E  0470               	iorwf	___lldiv@divisor,w
  2036     061F  1903               	skipnz
  2037     0620  2E22               	goto	u291
  2038     0621  2E23               	goto	u290
  2039     0622                     u291:
  2040     0622  2E70               	goto	l1126
  2041     0623                     u290:
  2042     0623                     l1106:
  2043     0623  01FD               	clrf	___lldiv@counter
  2044     0624  0AFD               	incf	___lldiv@counter,f
  2045     0625  2E33               	goto	l1112
  2046     0626                     l1108:
  2047     0626  3001               	movlw	1
  2048     0627  00F8               	movwf	??___lldiv
  2049     0628                     u305:
  2050     0628  1003               	clrc
  2051     0629  0DF0               	rlf	___lldiv@divisor,f
  2052     062A  0DF1               	rlf	___lldiv@divisor+1,f
  2053     062B  0DF2               	rlf	___lldiv@divisor+2,f
  2054     062C  0DF3               	rlf	___lldiv@divisor+3,f
  2055     062D  0BF8               	decfsz	??___lldiv,f
  2056     062E  2E28               	goto	u305
  2057     062F                     l1110:
  2058     062F  3001               	movlw	1
  2059     0630  00FF               	movwf	btemp+1
  2060     0631  087F               	movf	btemp+1,w
  2061     0632  07FD               	addwf	___lldiv@counter,f
  2062     0633                     l1112:
  2063     0633  1FF3               	btfss	___lldiv@divisor+3,7
  2064     0634  2E36               	goto	u311
  2065     0635  2E37               	goto	u310
  2066     0636                     u311:
  2067     0636  2E26               	goto	l1108
  2068     0637                     u310:
  2069     0637                     l1114:
  2070     0637  3001               	movlw	1
  2071     0638  00F8               	movwf	??___lldiv
  2072     0639                     u325:
  2073     0639  1003               	clrc
  2074     063A  0DF9               	rlf	___lldiv@quotient,f
  2075     063B  0DFA               	rlf	___lldiv@quotient+1,f
  2076     063C  0DFB               	rlf	___lldiv@quotient+2,f
  2077     063D  0DFC               	rlf	___lldiv@quotient+3,f
  2078     063E  0BF8               	decfsz	??___lldiv,f
  2079     063F  2E39               	goto	u325
  2080     0640                     l1116:
  2081     0640  0873               	movf	___lldiv@divisor+3,w
  2082     0641  0277               	subwf	___lldiv@dividend+3,w
  2083     0642  1D03               	skipz
  2084     0643  2E4E               	goto	u335
  2085     0644  0872               	movf	___lldiv@divisor+2,w
  2086     0645  0276               	subwf	___lldiv@dividend+2,w
  2087     0646  1D03               	skipz
  2088     0647  2E4E               	goto	u335
  2089     0648  0871               	movf	___lldiv@divisor+1,w
  2090     0649  0275               	subwf	___lldiv@dividend+1,w
  2091     064A  1D03               	skipz
  2092     064B  2E4E               	goto	u335
  2093     064C  0870               	movf	___lldiv@divisor,w
  2094     064D  0274               	subwf	___lldiv@dividend,w
  2095     064E                     u335:
  2096     064E  1C03               	skipc
  2097     064F  2E51               	goto	u331
  2098     0650  2E52               	goto	u330
  2099     0651                     u331:
  2100     0651  2E61               	goto	l1122
  2101     0652                     u330:
  2102     0652                     l1118:
  2103     0652  0870               	movf	___lldiv@divisor,w
  2104     0653  02F4               	subwf	___lldiv@dividend,f
  2105     0654  0871               	movf	___lldiv@divisor+1,w
  2106     0655  1C03               	skipc
  2107     0656  0F71               	incfsz	___lldiv@divisor+1,w
  2108     0657  02F5               	subwf	___lldiv@dividend+1,f
  2109     0658  0872               	movf	___lldiv@divisor+2,w
  2110     0659  1C03               	skipc
  2111     065A  0F72               	incfsz	___lldiv@divisor+2,w
  2112     065B  02F6               	subwf	___lldiv@dividend+2,f
  2113     065C  0873               	movf	___lldiv@divisor+3,w
  2114     065D  1C03               	skipc
  2115     065E  0F73               	incfsz	___lldiv@divisor+3,w
  2116     065F  02F7               	subwf	___lldiv@dividend+3,f
  2117     0660                     l1120:
  2118     0660  1479               	bsf	___lldiv@quotient,0
  2119     0661                     l1122:
  2120     0661  3001               	movlw	1
  2121     0662                     u345:
  2122     0662  1003               	clrc
  2123     0663  0CF3               	rrf	___lldiv@divisor+3,f
  2124     0664  0CF2               	rrf	___lldiv@divisor+2,f
  2125     0665  0CF1               	rrf	___lldiv@divisor+1,f
  2126     0666  0CF0               	rrf	___lldiv@divisor,f
  2127     0667  3EFF               	addlw	-1
  2128     0668  1D03               	skipz
  2129     0669  2E62               	goto	u345
  2130     066A                     l1124:
  2131     066A  3001               	movlw	1
  2132     066B  02FD               	subwf	___lldiv@counter,f
  2133     066C  1D03               	btfss	3,2
  2134     066D  2E6F               	goto	u351
  2135     066E  2E70               	goto	u350
  2136     066F                     u351:
  2137     066F  2E37               	goto	l1114
  2138     0670                     u350:
  2139     0670                     l1126:
  2140     0670  087C               	movf	___lldiv@quotient+3,w
  2141     0671  00F3               	movwf	?___lldiv+3
  2142     0672  087B               	movf	___lldiv@quotient+2,w
  2143     0673  00F2               	movwf	?___lldiv+2
  2144     0674  087A               	movf	___lldiv@quotient+1,w
  2145     0675  00F1               	movwf	?___lldiv+1
  2146     0676  0879               	movf	___lldiv@quotient,w
  2147     0677  00F0               	movwf	?___lldiv
  2148     0678                     l260:
  2149     0678  0008               	return
  2150     0679                     __end_of___lldiv:
  2151                           
  2152                           	psect	text14
  2153     048D                     __ptext14:	
  2154 ;; *************** function _ADC_Setup *****************
  2155 ;; Defined at:
  2156 ;;		line 96 in file "newmain.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;		None
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;		None
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2170 ;;      Params:         0       0       0       0       0
  2171 ;;      Locals:         0       0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0
  2173 ;;      Totals:         0       0       0       0       0
  2174 ;;Total ram usage:        0 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; This function calls:
  2177 ;;		Nothing
  2178 ;; This function is called by:
  2179 ;;		_main
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183     048D                     _ADC_Setup:	
  2184                           ;psect for function _ADC_Setup
  2185                           
  2186     048D                     l1142:	
  2187                           ;incstack = 0
  2188                           ; Regs used in _ADC_Setup: [wreg]
  2189                           
  2190                           
  2191                           ;newmain.c: 97: 
  2192     048D  3081               	movlw	129
  2193     048E  1283               	bcf	3,5	;RP0=0, select bank0
  2194     048F  1303               	bcf	3,6	;RP1=0, select bank0
  2195     0490  009F               	movwf	31	;volatile
  2196                           
  2197                           ;newmain.c: 98: void lcd_send_cmd (char cmd)
  2198     0491  3080               	movlw	128
  2199     0492  1683               	bsf	3,5	;RP0=1, select bank1
  2200     0493  1303               	bcf	3,6	;RP1=0, select bank1
  2201     0494  009F               	movwf	31	;volatile
  2202     0495                     l90:
  2203     0495  0008               	return
  2204     0496                     __end_of_ADC_Setup:
  2205     007E                     btemp	set	126	;btemp
  2206     007E                     wtemp0	set	126
  2207                           
  2208                           	psect	config
  2209                           
  2210                           ;Config register CONFIG @ 0x2007
  2211                           ;	Oscillator Selection bits
  2212                           ;	FOSC = HS, HS oscillator
  2213                           ;	Watchdog Timer Enable bit
  2214                           ;	WDTE = OFF, WDT disabled
  2215                           ;	Power-up Timer Enable bit
  2216                           ;	PWRTE = OFF, PWRT disabled
  2217                           ;	Brown-out Reset Enable bit
  2218                           ;	BOREN = ON, BOR enabled
  2219                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2220                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2221                           ;	Data EEPROM Memory Code Protection bit
  2222                           ;	CPD = OFF, Data EEPROM code protection off
  2223                           ;	Flash Program Memory Write Enable bits
  2224                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2225                           ;	In-Circuit Debugger Mode bit
  2226                           ;	DEBUG = 0x1, unprogrammed default
  2227                           ;	Flash Program Memory Code Protection bit
  2228                           ;	CP = OFF, Code protection off
  2229     2007                     	org	8199
  2230     2007  3F7A               	dw	16250

Data Sizes:
    Strings     25
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_send_string@str	PTR unsigned char  size(1) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[12]), 

    I2C_Multi_Send@data	PTR unsigned char  size(1) Largest target is 4
		 -> lcd_send_data@data_t(BANK0[4]), lcd_send_cmd@data_t(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_lcd_clear
    _lcd_send_string->_lcd_send_data
    _lcd_put_cur->_lcd_send_cmd
    _lcd_init->_lcd_send_cmd
    _lcd_clear->_lcd_send_cmd
    _lcd_clear->_lcd_send_data
    _lcd_send_data->_I2C_Multi_Send
    _lcd_send_cmd->_I2C_Multi_Send
    _I2C_Multi_Send->_I2C_Write
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_lcd_put_cur
    _lcd_send_string->_lcd_send_data
    _lcd_put_cur->_lcd_send_cmd
    _lcd_init->_lcd_send_cmd
    _lcd_clear->_lcd_send_cmd
    _lcd_clear->_lcd_send_data

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    6139
                                             11 BANK0      9     9      0
                          _ADC_Setup
                    _I2C_Master_Init
                          _lcd_clear
                           _lcd_init
                        _lcd_put_cur
                      _lcd_send_data
                    _lcd_send_string
 ---------------------------------------------------------------------------------
 (1) _lcd_send_string                                      1     1      0     954
                                             12 COMMON     1     1      0
                      _lcd_send_data
 ---------------------------------------------------------------------------------
 (1) _lcd_put_cur                                          4     0      4    1193
                                              7 BANK0      4     0      4
                       _lcd_send_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     843
                                              7 BANK0      3     3      0
                       _lcd_send_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            2     2      0    1732
                                             12 COMMON     2     2      0
                       _lcd_send_cmd
                      _lcd_send_data
 ---------------------------------------------------------------------------------
 (2) _lcd_send_data                                       10    10      0     843
                                              9 COMMON     3     3      0
                                              0 BANK0      7     7      0
                     _I2C_Multi_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _lcd_send_cmd                                        10    10      0     843
                                              9 COMMON     3     3      0
                                              0 BANK0      7     7      0
                     _I2C_Multi_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
                           _I2C_IDLE
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
                           _I2C_IDLE
 ---------------------------------------------------------------------------------
 (3) _I2C_Multi_Send                                       9     5      4     613
                                              1 COMMON     8     4      4
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _I2C_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_IDLE                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _ADC_Setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Setup
   _I2C_Master_Init
     ___lldiv
   _lcd_clear
     _lcd_send_cmd
       _I2C_Multi_Send
         _I2C_Write
           _I2C_IDLE
       _I2C_Start
         _I2C_IDLE
       _I2C_Stop
         _I2C_IDLE
     _lcd_send_data
       _I2C_Multi_Send
       _I2C_Start
       _I2C_Stop
   _lcd_init
     _lcd_send_cmd
   _lcd_put_cur
     _lcd_send_cmd
   _lcd_send_data
   _lcd_send_string
     _lcd_send_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      24       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      16       5       27.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      24      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Jun 07 17:57:14 2024

        I2C_Multi_Send@n 0077            ?_lcd_send_cmd 0070                        pc 0002  
           ?_lcd_put_cur 0027           ?_lcd_send_data 0070                       l51 058A  
                     l60 049E                       l54 04A8        I2C_Multi_Send@cmd 0070  
                     l63 04A7                       l57 04B4                       l90 0495  
                     l75 04C4                       l87 0552                       fsr 0004  
                    l100 05CE                      l103 0612                      l112 04C6  
                    l115 04E2                      l108 0523                      l124 0501  
                    l118 0720                      l260 0678       I2C_Multi_Send@data 0072  
                    u310 0637                      u311 0636                      u240 04AE  
                    u400 07CD                      u305 0628                      u241 04AD  
                    u401 07CC                      u330 0652                      u250 04B4  
                    u410 07F4                      u331 0651                      u251 04B3  
                    u411 07F3                      u260 0552                      u325 0639  
                    u261 0551                      u405 07C9                      u350 0670  
                    u351 066F                      u335 064E                      u415 07F0  
                    u360 056B                      u345 0662                      u265 054E  
                    u290 0623                      u370 0523                      u291 0622  
                    u275 0594                      u371 0522                      u507 06D7  
                    u427 0745                      u380 0501                      u365 0566  
                    u285 05D8                      u517 06E8                      u381 0500  
                    u437 075E                      u390 07B4                      u375 051F  
                    u527 06F9                      u447 07D9                      u391 07B3  
                    u537 0704                      u457 0681                      u547 0715  
                    u467 0693                      u395 07B0                      u557 060B  
                    u477 06A4                      u567 05C7                      u487 06B5  
                    u497 06C6       I2C_Multi_Send@send 0076       I2C_Multi_Send@size 0073  
                    fsr0 0004                      indf 0000                     l1100 0600  
                   l1110 062F                     l1030 04A8                     l1102 0605  
                   l1120 0660                     l1112 0633                     l1104 0613  
                   l1032 04AE                     l1040 04C4                     l1200 04E4  
                   l1122 0661                     l1114 0637                     l1106 0623  
                   l1130 0553                     l1034 04B6                     l1050 04A4  
                   l1202 04E5                     l1124 066A                     l1116 0640  
                   l1108 0626                     l1140 0589                     l1132 0557  
                   l1036 04BB                     l1060 053E                     l1052 0524  
                   l1044 0496                     l1300 04D4                     l1204 04F1  
                   l1142 048D                     l1118 0652                     l1126 0670  
                   l1134 055A                     l1038 04BF                     l1062 0544  
                   l1054 0529                     l1046 049B                     l1070 05A0  
                   l1206 04F5                     l1230 0727                     l1136 055B  
                   l1056 052F                     l1048 049F                     l1080 05BC  
                   l1072 05A3                     l1064 058E                     l1152 050A  
                   l1144 0502                     l1160 04C8                     l1240 074B  
                   l1232 072A                     l1224 0721                     l1138 0588  
                   l1058 0532                     l1082 05C1                     l1074 05A6  
                   l1066 0591                     l1090 05E4                     l1154 0510  
                   l1146 0508                     l1250 077D                     l1242 0756  
                   l1234 072B                     l1226 0725                     l1076 05A9  
                   l1068 059D                     l1092 05E7                     l1084 05D2  
                   l1156 0516                     l1180 06A9                     l1172 0679  
                   l1164 04CD                     l1260 0787                     l1252 0781  
                   l1244 0764                     l1236 0738                     l1228 0726  
                   l1078 05AE                     l1094 05EA                     l1086 05D5  
                   l1190 06ED                     l1182 06BA                     l1174 0687  
                   l1166 04DC                     l1158 04C5                     l1270 07BE  
                   l1262 079F                     l1254 0783                     l1246 0772  
                   l1238 073D                     l1096 05ED                     l1088 05E1  
                   l1192 06F3                     l1184 06C0                     l1176 068D  
                   l1272 07CD                     l1264 07A7                     l1248 0778  
                   l1098 05F2                     l1194 06FE                     l1186 06D1  
                   l1178 069E                     l1274 07D1                     l1266 07B4  
                   l1196 0709                     l1188 06DC                     l1276 07DF  
                   l1268 07BC                     l1198 071A                     l1278 07E7  
                   STR_1 0016                     STR_2 0009         __end_of_I2C_IDLE 04B5  
                   _main 0721                     btemp 007E         __end_of_I2C_Stop 04A8  
       ?_lcd_send_string 0070                     start 0000           ??_lcd_send_cmd 0079  
       ?_I2C_Master_Init 0020                    ?_main 0070          __end_of___lldiv 0679  
                  _PORTB 0006                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _SSPIF 0063  
                  main@i 0032        __end_of_I2C_Start 049F        __end_of_I2C_Write 04C5  
                  pclath 000A        __end_of_ADC_Setup 0496                    status 0003  
                  wtemp0 007E          __initialization 07F8          ??_lcd_send_data 0079  
           __end_of_main 07F8                   ??_main 002B                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
  I2C_Multi_Send@address 0071                   _SSPADD 0093                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of_lcd_init 0721                ??___lldiv 0078  
              ?_I2C_IDLE 0070                ?_I2C_Stop 0070     __end_of_lcd_send_cmd 05CF  
__end_of__initialization 07FC       lcd_send_cmd@data_l 0026       lcd_send_cmd@data_t 0020  
     lcd_send_cmd@data_u 0025           __pcstackCOMMON 0070               ??_I2C_IDLE 0070  
             ??_I2C_Stop 0070               __pbssBANK0 0034               __pmaintext 0721  
                _ACKSTAT 048E                  _GO_DONE 00FA                  _SSPCON2 0091  
              ?_lcd_init 0070                  _SSPSTAT 0094               __stringtab 0003  
              _I2C_Start 0496                _I2C_Write 04B5                _ADC_Setup 048D  
      __end_of_lcd_clear 0524                  ___lldiv 0613                  __ptext1 04E3  
                __ptext2 04C5                  __ptext3 0679                  __ptext4 0502  
                __ptext5 05CF                  __ptext6 058B                  __ptext7 049F  
                __ptext8 0496                  __ptext9 0524                  main@col 0030  
             ??_lcd_init 0027                  main@row 002E           lcd_put_cur@col 0029  
         lcd_put_cur@row 0027     end_of_initialization 07FC               ?_I2C_Start 0070  
             ?_I2C_Write 0070               ?_ADC_Setup 0070          ___lldiv@divisor 0070  
        ___lldiv@counter 007D         I2C_Master_Init@c 0020             _lcd_send_cmd 058B  
  __end_of_lcd_send_data 0613           _I2C_Multi_Send 0524                _TRISCbits 0087  
             lcd_clear@i 007C       lcd_send_string@str 007C   __end_of_I2C_Multi_Send 0553  
          ??_lcd_put_cur 007C      lcd_send_data@data_l 0026      lcd_send_data@data_t 0020  
    lcd_send_data@data_u 0025        ??_lcd_send_string 007C      start_initialization 07F8  
      ??_I2C_Master_Init 0024              ??_I2C_Start 0070              ??_I2C_Write 0070  
            ??_ADC_Setup 0070          ?_I2C_Multi_Send 0071      __end_of_lcd_put_cur 04E3  
              ___latbits 0002            __pcstackBANK0 0020        lcd_send_data@data 0024  
              _adc_value 0034          lcd_send_cmd@cmd 0024                 ?___lldiv 0070  
              _lcd_clear 0502                __pstrings 0003                 _I2C_IDLE 04A8  
               _I2C_Stop 049F              _lcd_put_cur 04C5               ?_lcd_clear 0070  
             _ADCON0bits 001F              __stringbase 0008            I2C_Write@Data 0070  
        _lcd_send_string 04E3       __end_of__stringtab 0009          _I2C_Master_Init 0553  
               __ptext10 04B5                 __ptext11 04A8                 __ptext12 0553  
               __ptext13 0613                 __ptext14 048D                 _lcd_init 0679  
       ??_I2C_Multi_Send 0075              ??_lcd_clear 007C         ___lldiv@dividend 0074  
__end_of_lcd_send_string 0502                stringcode 0003  __end_of_I2C_Master_Init 058B  
          _lcd_send_data 05CF         ___lldiv@quotient 0079                 stringdir 0003  
               stringtab 0003              _SSPCON2bits 0091  
