

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Jun 07 19:18:58 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Generated 22/03/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000D                     	;# 
    79     000E                     	;# 
    80     000E                     	;# 
    81     000F                     	;# 
    82     0010                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0013                     	;# 
    86     0014                     	;# 
    87     0015                     	;# 
    88     0015                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     001A                     	;# 
    94     001B                     	;# 
    95     001B                     	;# 
    96     001C                     	;# 
    97     001D                     	;# 
    98     001E                     	;# 
    99     001F                     	;# 
   100     0081                     	;# 
   101     0085                     	;# 
   102     0086                     	;# 
   103     0087                     	;# 
   104     0088                     	;# 
   105     0089                     	;# 
   106     008C                     	;# 
   107     008D                     	;# 
   108     008E                     	;# 
   109     0091                     	;# 
   110     0092                     	;# 
   111     0093                     	;# 
   112     0094                     	;# 
   113     0098                     	;# 
   114     0099                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     010C                     	;# 
   120     010D                     	;# 
   121     010E                     	;# 
   122     010F                     	;# 
   123     018C                     	;# 
   124     018D                     	;# 
   125     0000                     	;# 
   126     0001                     	;# 
   127     0002                     	;# 
   128     0003                     	;# 
   129     0004                     	;# 
   130     0005                     	;# 
   131     0006                     	;# 
   132     0007                     	;# 
   133     0008                     	;# 
   134     0009                     	;# 
   135     000A                     	;# 
   136     000B                     	;# 
   137     000C                     	;# 
   138     000D                     	;# 
   139     000E                     	;# 
   140     000E                     	;# 
   141     000F                     	;# 
   142     0010                     	;# 
   143     0011                     	;# 
   144     0012                     	;# 
   145     0013                     	;# 
   146     0014                     	;# 
   147     0015                     	;# 
   148     0015                     	;# 
   149     0016                     	;# 
   150     0017                     	;# 
   151     0018                     	;# 
   152     0019                     	;# 
   153     001A                     	;# 
   154     001B                     	;# 
   155     001B                     	;# 
   156     001C                     	;# 
   157     001D                     	;# 
   158     001E                     	;# 
   159     001F                     	;# 
   160     0081                     	;# 
   161     0085                     	;# 
   162     0086                     	;# 
   163     0087                     	;# 
   164     0088                     	;# 
   165     0089                     	;# 
   166     008C                     	;# 
   167     008D                     	;# 
   168     008E                     	;# 
   169     0091                     	;# 
   170     0092                     	;# 
   171     0093                     	;# 
   172     0094                     	;# 
   173     0098                     	;# 
   174     0099                     	;# 
   175     009C                     	;# 
   176     009D                     	;# 
   177     009E                     	;# 
   178     009F                     	;# 
   179     010C                     	;# 
   180     010D                     	;# 
   181     010E                     	;# 
   182     010F                     	;# 
   183     018C                     	;# 
   184     018D                     	;# 
   185                           
   186                           	psect	strings
   187     0003                     __pstrings:
   188     0003                     stringtab:
   189     0003                     __stringtab:
   190                           
   191                           ;	String table - string pointers are 1 byte each
   192     0003  1BFF               	btfsc	btemp+1,7
   193     0004  280D               	ljmp	stringcode
   194     0005  1383               	bcf	3,7
   195     0006  187F               	btfsc	btemp+1,0
   196     0007  1783               	bsf	3,7
   197     0008  0800               	movf	0,w
   198     0009  0A84               	incf	4,f
   199     000A  1903               	skipnz
   200     000B  0AFF               	incf	btemp+1,f
   201     000C  0008               	return
   202     000D                     stringcode:
   203     000D                     stringdir:
   204     000D  3000               	movlw	high stringdir
   205     000E  008A               	movwf	10
   206     000F  0804               	movf	4,w
   207     0010  0A84               	incf	4,f
   208     0011  0782               	addwf	2,f
   209     0012                     __stringbase:
   210     0012  3400               	retlw	0
   211     0013                     __end_of__stringtab:
   212     0013                     _dpowers:
   213     0013  3401               	retlw	1
   214     0014  3400               	retlw	0
   215     0015  340A               	retlw	10
   216     0016  3400               	retlw	0
   217     0017  3464               	retlw	100
   218     0018  3400               	retlw	0
   219     0019  34E8               	retlw	232
   220     001A  3403               	retlw	3
   221     001B  3410               	retlw	16
   222     001C  3427               	retlw	39
   223     001D                     __end_of_dpowers:
   224     0008                     _PORTD	set	8
   225     001E                     _ADRESH	set	30
   226     001F                     _ADCON0bits	set	31
   227     001F                     _ADCON0	set	31
   228     0013                     _SSPBUF	set	19
   229     0014                     _SSPCON	set	20
   230     0006                     _PORTB	set	6
   231     00FA                     _GO_DONE	set	250
   232     0063                     _SSPIF	set	99
   233     0088                     _TRISD	set	136
   234     0086                     _TRISB	set	134
   235     0085                     _TRISA	set	133
   236     009E                     _ADRESL	set	158
   237     009F                     _ADCON1	set	159
   238     0091                     _SSPCON2bits	set	145
   239     0087                     _TRISCbits	set	135
   240     0093                     _SSPADD	set	147
   241     0094                     _SSPSTAT	set	148
   242     0091                     _SSPCON2	set	145
   243     048E                     _ACKSTAT	set	1166
   244     001D                     STR_2:
   245     001D  3446               	retlw	70	;'F'
   246     001E  3472               	retlw	114	;'r'
   247     001F  346F               	retlw	111	;'o'
   248     0020  346D               	retlw	109	;'m'
   249     0021  3420               	retlw	32	;' '
   250     0022  3441               	retlw	65	;'A'
   251     0023  346E               	retlw	110	;'n'
   252     0024  3474               	retlw	116	;'t'
   253     0025  3475               	retlw	117	;'u'
   254     0026  346E               	retlw	110	;'n'
   255     0027  3465               	retlw	101	;'e'
   256     0028  3473               	retlw	115	;'s'
   257     0029  3400               	retlw	0
   258     002A                     STR_1:
   259     002A  3448               	retlw	72	;'H'
   260     002B  3465               	retlw	101	;'e'
   261     002C  346C               	retlw	108	;'l'
   262     002D  346C               	retlw	108	;'l'
   263     002E  346F               	retlw	111	;'o'
   264     002F  3420               	retlw	32	;' '
   265     0030  3457               	retlw	87	;'W'
   266     0031  346F               	retlw	111	;'o'
   267     0032  3472               	retlw	114	;'r'
   268     0033  346C               	retlw	108	;'l'
   269     0034  3464               	retlw	100	;'d'
   270     0035  3400               	retlw	0
   271     0036                     STR_3:
   272     0036  3425               	retlw	37	;'%'
   273     0037  3464               	retlw	100	;'d'
   274     0038  3400               	retlw	0
   275     0036                     
   276                           	psect	cinit
   277     07F6                     start_initialization:	
   278                           ; #config settings
   279                           
   280     07F6                     __initialization:
   281                           
   282                           ; Clear objects allocated to BANK0
   283     07F6  1283               	bcf	3,5	;RP0=0, select bank0
   284     07F7  1303               	bcf	3,6	;RP1=0, select bank0
   285     07F8  01B8               	clrf	__pbssBANK0& (0+127)
   286     07F9  01B9               	clrf	(__pbssBANK0+1)& (0+127)
   287     07FA  01BA               	clrf	(__pbssBANK0+2)& (0+127)
   288     07FB  01BB               	clrf	(__pbssBANK0+3)& (0+127)
   289     07FC                     end_of_initialization:	
   290                           ;End of C runtime variable initialization code
   291                           
   292     07FC                     __end_of__initialization:
   293     07FC  0183               	clrf	3
   294     07FD  120A  118A  2E47   	ljmp	_main	;jump to C main() function
   295                           
   296                           	psect	bssBANK0
   297     0038                     __pbssBANK0:
   298     0038                     _adc_value_2:
   299     0038                     	ds	2
   300     003A                     _adc_value_1:
   301     003A                     	ds	2
   302                           
   303                           	psect	cstackCOMMON
   304     0070                     __pcstackCOMMON:
   305     0070                     ?_I2C_IDLE:
   306     0070                     ??_I2C_IDLE:	
   307                           ; 1 bytes @ 0x0
   308                           
   309     0070                     ?_I2C_Start:	
   310                           ; 1 bytes @ 0x0
   311                           
   312     0070                     ??_I2C_Start:	
   313                           ; 1 bytes @ 0x0
   314                           
   315     0070                     ?_I2C_Stop:	
   316                           ; 1 bytes @ 0x0
   317                           
   318     0070                     ??_I2C_Stop:	
   319                           ; 1 bytes @ 0x0
   320                           
   321     0070                     ?_I2C_Write:	
   322                           ; 1 bytes @ 0x0
   323                           
   324     0070                     ??_I2C_Write:	
   325                           ; 1 bytes @ 0x0
   326                           
   327     0070                     ?_ADC_Setup:	
   328                           ; 1 bytes @ 0x0
   329                           
   330     0070                     ??_ADC_Setup:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     0070                     ?_lcd_send_cmd:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     0070                     ?_lcd_send_data:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     0070                     ?_lcd_clear:	
   340                           ; 1 bytes @ 0x0
   341                           
   342     0070                     ?_lcd_init:	
   343                           ; 1 bytes @ 0x0
   344                           
   345     0070                     ?_main:	
   346                           ; 1 bytes @ 0x0
   347                           
   348     0070                     ?_ADC_Read:	
   349                           ; 1 bytes @ 0x0
   350                           
   351     0070                     ?___lwdiv:	
   352                           ; 2 bytes @ 0x0
   353                           
   354     0070                     ?___lldiv:	
   355                           ; 2 bytes @ 0x0
   356                           
   357     0070                     I2C_Write@Data:	
   358                           ; 4 bytes @ 0x0
   359                           
   360     0070                     I2C_Multi_Send@cmd:	
   361                           ; 1 bytes @ 0x0
   362                           
   363     0070                     ADC_Read@channel:	
   364                           ; 1 bytes @ 0x0
   365                           
   366     0070                     ___lwdiv@divisor:	
   367                           ; 2 bytes @ 0x0
   368                           
   369     0070                     ___lldiv@divisor:	
   370                           ; 2 bytes @ 0x0
   371                           
   372                           
   373                           ; 4 bytes @ 0x0
   374     0070                     	ds	1
   375     0071                     ?_I2C_Multi_Send:
   376     0071                     I2C_Multi_Send@address:	
   377                           ; 1 bytes @ 0x1
   378                           
   379                           
   380                           ; 1 bytes @ 0x1
   381     0071                     	ds	1
   382     0072                     ??_ADC_Read:
   383     0072                     I2C_Multi_Send@data:	
   384                           ; 1 bytes @ 0x2
   385                           
   386     0072                     ___lwdiv@dividend:	
   387                           ; 1 bytes @ 0x2
   388                           
   389                           
   390                           ; 2 bytes @ 0x2
   391     0072                     	ds	1
   392     0073                     I2C_Multi_Send@size:
   393                           
   394                           ; 2 bytes @ 0x3
   395     0073                     	ds	1
   396     0074                     ??___lwdiv:
   397     0074                     ___lwdiv@quotient:	
   398                           ; 1 bytes @ 0x4
   399                           
   400     0074                     ___lldiv@dividend:	
   401                           ; 2 bytes @ 0x4
   402                           
   403                           
   404                           ; 4 bytes @ 0x4
   405     0074                     	ds	1
   406     0075                     ??_I2C_Multi_Send:
   407                           
   408                           ; 1 bytes @ 0x5
   409     0075                     	ds	1
   410     0076                     I2C_Multi_Send@send:
   411     0076                     ___lwdiv@counter:	
   412                           ; 1 bytes @ 0x6
   413                           
   414                           
   415                           ; 1 bytes @ 0x6
   416     0076                     	ds	1
   417     0077                     ?___lwmod:
   418     0077                     I2C_Multi_Send@n:	
   419                           ; 2 bytes @ 0x7
   420                           
   421     0077                     ___lwmod@divisor:	
   422                           ; 2 bytes @ 0x7
   423                           
   424                           
   425                           ; 2 bytes @ 0x7
   426     0077                     	ds	1
   427     0078                     ??___lldiv:
   428                           
   429                           ; 1 bytes @ 0x8
   430     0078                     	ds	1
   431     0079                     ??_lcd_send_cmd:
   432     0079                     ??_lcd_send_data:	
   433                           ; 1 bytes @ 0x9
   434                           
   435     0079                     ___lwmod@dividend:	
   436                           ; 1 bytes @ 0x9
   437                           
   438     0079                     ___lldiv@quotient:	
   439                           ; 2 bytes @ 0x9
   440                           
   441                           
   442                           ; 4 bytes @ 0x9
   443     0079                     	ds	2
   444     007B                     ??_lcd_clear:
   445     007B                     ??_lcd_put_cur:	
   446                           ; 1 bytes @ 0xB
   447                           
   448     007B                     ??_lcd_init:	
   449                           ; 1 bytes @ 0xB
   450                           
   451     007B                     ?_lcd_send_string:	
   452                           ; 1 bytes @ 0xB
   453                           
   454     007B                     ??___lwmod:	
   455                           ; 1 bytes @ 0xB
   456                           
   457     007B                     ___lwmod@counter:	
   458                           ; 1 bytes @ 0xB
   459                           
   460     007B                     lcd_clear@i:	
   461                           ; 1 bytes @ 0xB
   462                           
   463     007B                     lcd_send_string@str:	
   464                           ; 2 bytes @ 0xB
   465                           
   466                           
   467                           ; 2 bytes @ 0xB
   468     007B                     	ds	2
   469     007D                     ??_lcd_send_string:
   470     007D                     ___lldiv@counter:	
   471                           ; 1 bytes @ 0xD
   472                           
   473                           
   474                           ; 1 bytes @ 0xD
   475     007D                     	ds	1
   476                           
   477                           	psect	cstackBANK0
   478     0020                     __pcstackBANK0:
   479     0020                     ?_I2C_Master_Init:
   480     0020                     ?_sprintf:	
   481                           ; 1 bytes @ 0x0
   482                           
   483     0020                     sprintf@f:	
   484                           ; 2 bytes @ 0x0
   485                           
   486     0020                     I2C_Master_Init@c:	
   487                           ; 1 bytes @ 0x0
   488                           
   489     0020                     lcd_send_cmd@data_t:	
   490                           ; 4 bytes @ 0x0
   491                           
   492     0020                     lcd_send_data@data_t:	
   493                           ; 4 bytes @ 0x0
   494                           
   495                           
   496                           ; 4 bytes @ 0x0
   497     0020                     	ds	3
   498     0023                     ??_sprintf:
   499                           
   500                           ; 1 bytes @ 0x3
   501     0023                     	ds	1
   502     0024                     ??_I2C_Master_Init:
   503     0024                     lcd_send_cmd@cmd:	
   504                           ; 1 bytes @ 0x4
   505                           
   506     0024                     lcd_send_data@data:	
   507                           ; 1 bytes @ 0x4
   508                           
   509                           
   510                           ; 1 bytes @ 0x4
   511     0024                     	ds	1
   512     0025                     lcd_send_cmd@data_u:
   513     0025                     lcd_send_data@data_u:	
   514                           ; 1 bytes @ 0x5
   515                           
   516                           
   517                           ; 1 bytes @ 0x5
   518     0025                     	ds	1
   519     0026                     lcd_send_cmd@data_l:
   520     0026                     lcd_send_data@data_l:	
   521                           ; 1 bytes @ 0x6
   522                           
   523     0026                     sprintf@ap:	
   524                           ; 1 bytes @ 0x6
   525                           
   526                           
   527                           ; 1 bytes @ 0x6
   528     0026                     	ds	1
   529     0027                     ?_lcd_put_cur:
   530     0027                     sprintf@flag:	
   531                           ; 1 bytes @ 0x7
   532                           
   533     0027                     lcd_put_cur@row:	
   534                           ; 1 bytes @ 0x7
   535                           
   536                           
   537                           ; 2 bytes @ 0x7
   538     0027                     	ds	1
   539     0028                     sprintf@prec:
   540                           
   541                           ; 1 bytes @ 0x8
   542     0028                     	ds	1
   543     0029                     lcd_put_cur@col:
   544     0029                     sprintf@val:	
   545                           ; 2 bytes @ 0x9
   546                           
   547                           
   548                           ; 2 bytes @ 0x9
   549     0029                     	ds	2
   550     002B                     sprintf@sp:
   551                           
   552                           ; 1 bytes @ 0xB
   553     002B                     	ds	1
   554     002C                     sprintf@c:
   555                           
   556                           ; 1 bytes @ 0xC
   557     002C                     	ds	1
   558     002D                     ??_main:
   559                           
   560                           ; 1 bytes @ 0xD
   561     002D                     	ds	3
   562     0030                     main@str2:
   563                           
   564                           ; 4 bytes @ 0x10
   565     0030                     	ds	4
   566     0034                     main@str1:
   567                           
   568                           ; 4 bytes @ 0x14
   569     0034                     	ds	4
   570                           
   571                           	psect	maintext
   572     0647                     __pmaintext:	
   573 ;;
   574 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   575 ;;
   576 ;; *************** function _main *****************
   577 ;; Defined at:
   578 ;;		line 212 in file "newmain.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;  str1            4   20[BANK0 ] unsigned char [4]
   583 ;;  str2            4   16[BANK0 ] unsigned char [4]
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   588 ;; Tracked objects:
   589 ;;		On entry : B00/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   593 ;;      Params:         0       0       0       0       0
   594 ;;      Locals:         0       8       0       0       0
   595 ;;      Temps:          0       3       0       0       0
   596 ;;      Totals:         0      11       0       0       0
   597 ;;Total ram usage:       11 bytes
   598 ;; Hardware stack levels required when called: 5
   599 ;; This function calls:
   600 ;;		_ADC_Read
   601 ;;		_ADC_Setup
   602 ;;		_I2C_Master_Init
   603 ;;		_lcd_clear
   604 ;;		_lcd_init
   605 ;;		_lcd_put_cur
   606 ;;		_lcd_send_string
   607 ;;		_sprintf
   608 ;; This function is called by:
   609 ;;		Startup code after reset
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613     0647                     _main:	
   614                           ;psect for function _main
   615                           
   616     0647                     l1498:	
   617                           ;incstack = 0
   618                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   619                           
   620                           
   621                           ;newmain.c: 214:   lcd_put_cur(1,0);;newmain.c: 215: ;newmain.c: 217: 
   622     0647  30FF               	movlw	255
   623     0648  1683               	bsf	3,5	;RP0=1, select bank1
   624     0649  1303               	bcf	3,6	;RP1=0, select bank1
   625     064A  0085               	movwf	5	;volatile
   626     064B                     l1500:
   627                           
   628                           ;newmain.c: 218:   lcd_clear();
   629     064B  0186               	clrf	6	;volatile
   630     064C                     l1502:
   631                           
   632                           ;newmain.c: 219: 
   633     064C  0188               	clrf	8	;volatile
   634     064D                     l1504:
   635                           
   636                           ;newmain.c: 220:   while(1){
   637     064D  1283               	bcf	3,5	;RP0=0, select bank0
   638     064E  1303               	bcf	3,6	;RP1=0, select bank0
   639     064F  0188               	clrf	8	;volatile
   640     0650                     l1506:
   641                           
   642                           ;newmain.c: 221: 
   643     0650  0186               	clrf	6	;volatile
   644     0651                     l1508:
   645                           
   646                           ;newmain.c: 223:       _delay((unsigned long)((1)*(20000000/4000.0)));
   647     0651  3000               	movlw	0
   648     0652  00A3               	movwf	I2C_Master_Init@c+3
   649     0653  3001               	movlw	1
   650     0654  00A2               	movwf	I2C_Master_Init@c+2
   651     0655  3086               	movlw	134
   652     0656  00A1               	movwf	I2C_Master_Init@c+1
   653     0657  30A0               	movlw	160
   654     0658  00A0               	movwf	I2C_Master_Init@c
   655     0659  120A  118A  241E  120A  118A  	fcall	_I2C_Master_Init
   656     065E                     l1510:
   657                           
   658                           ;newmain.c: 225:       sprintf(str1,"%d",adc_value_1);
   659     065E  120A  118A  2323  120A  118A  	fcall	_ADC_Setup
   660     0663                     l1512:
   661                           
   662                           ;newmain.c: 226:       sprintf(str2,"%d",adc_value_2);
   663     0663  120A  118A  25B8  120A  118A  	fcall	_lcd_init
   664     0668                     l1514:
   665                           
   666                           ;newmain.c: 227:       lcd_put_cur(0,0);
   667     0668  3018               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   668     0669  00FB               	movwf	lcd_send_string@str
   669     066A  3080               	movlw	128
   670     066B  00FC               	movwf	lcd_send_string@str+1
   671     066C  120A  118A  239B  120A  118A  	fcall	_lcd_send_string
   672                           
   673                           ;newmain.c: 229:       lcd_put_cur(1,0);
   674     0671  3033               	movlw	51
   675     0672  1283               	bcf	3,5	;RP0=0, select bank0
   676     0673  1303               	bcf	3,6	;RP1=0, select bank0
   677     0674  00AF               	movwf	??_main+2
   678     0675  30BB               	movlw	187
   679     0676  00AE               	movwf	??_main+1
   680     0677  30DF               	movlw	223
   681     0678  00AD               	movwf	??_main
   682     0679                     u797:
   683     0679  0BAD               	decfsz	??_main,f
   684     067A  2E79               	goto	u797
   685     067B  0BAE               	decfsz	??_main+1,f
   686     067C  2E79               	goto	u797
   687     067D  0BAF               	decfsz	??_main+2,f
   688     067E  2E79               	goto	u797
   689     067F                     l1516:
   690                           
   691                           ;newmain.c: 231:       _delay((unsigned long)((250)*(20000000/4000.0)));
   692     067F  3001               	movlw	1
   693     0680  1283               	bcf	3,5	;RP0=0, select bank0
   694     0681  1303               	bcf	3,6	;RP1=0, select bank0
   695     0682  00A7               	movwf	lcd_put_cur@row
   696     0683  3000               	movlw	0
   697     0684  00A8               	movwf	lcd_put_cur@row+1
   698     0685  3000               	movlw	0
   699     0686  00A9               	movwf	lcd_put_cur@col
   700     0687  00AA               	movwf	lcd_put_cur@col+1
   701     0688  120A  118A  235B  120A  118A  	fcall	_lcd_put_cur
   702     068D                     l1518:
   703                           
   704                           ;newmain.c: 233:   }
   705     068D  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   706     068E  00FB               	movwf	lcd_send_string@str
   707     068F  3080               	movlw	128
   708     0690  00FC               	movwf	lcd_send_string@str+1
   709     0691  120A  118A  239B  120A  118A  	fcall	_lcd_send_string
   710     0696                     l1520:
   711     0696  120A  118A  2379  120A  118A  	fcall	_lcd_clear
   712     069B                     l1522:
   713     069B  3000               	movlw	0
   714     069C  00F0               	movwf	ADC_Read@channel
   715     069D  00F1               	movwf	ADC_Read@channel+1
   716     069E  120A  118A  23C1  120A  118A  	fcall	_ADC_Read
   717     06A3  0871               	movf	?_ADC_Read+1,w
   718     06A4  1283               	bcf	3,5	;RP0=0, select bank0
   719     06A5  1303               	bcf	3,6	;RP1=0, select bank0
   720     06A6  00BB               	movwf	_adc_value_1+1
   721     06A7  0870               	movf	?_ADC_Read,w
   722     06A8  00BA               	movwf	_adc_value_1
   723     06A9                     l1524:
   724     06A9  3007               	movlw	7
   725     06AA  1283               	bcf	3,5	;RP0=0, select bank0
   726     06AB  1303               	bcf	3,6	;RP1=0, select bank0
   727     06AC  00AE               	movwf	??_main+1
   728     06AD  307C               	movlw	124
   729     06AE  00AD               	movwf	??_main
   730     06AF                     u807:
   731     06AF  0BAD               	decfsz	??_main,f
   732     06B0  2EAF               	goto	u807
   733     06B1  0BAE               	decfsz	??_main+1,f
   734     06B2  2EAF               	goto	u807
   735     06B3  0000               	nop
   736     06B4                     l1526:
   737     06B4  3001               	movlw	1
   738     06B5  00F0               	movwf	ADC_Read@channel
   739     06B6  3000               	movlw	0
   740     06B7  00F1               	movwf	ADC_Read@channel+1
   741     06B8  120A  118A  23C1  120A  118A  	fcall	_ADC_Read
   742     06BD  0871               	movf	?_ADC_Read+1,w
   743     06BE  1283               	bcf	3,5	;RP0=0, select bank0
   744     06BF  1303               	bcf	3,6	;RP1=0, select bank0
   745     06C0  00B9               	movwf	_adc_value_2+1
   746     06C1  0870               	movf	?_ADC_Read,w
   747     06C2  00B8               	movwf	_adc_value_2
   748     06C3                     l1528:
   749     06C3  3024               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   750     06C4  00A0               	movwf	sprintf@f
   751     06C5  083B               	movf	_adc_value_1+1,w
   752     06C6  00A2               	movwf	?_sprintf+2
   753     06C7  083A               	movf	_adc_value_1,w
   754     06C8  00A1               	movwf	?_sprintf+1
   755     06C9  3034               	movlw	(low (main@str1| 0))& (0+255)
   756     06CA  120A  118A  271C  120A  118A  	fcall	_sprintf
   757     06CF                     l1530:
   758     06CF  3024               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   759     06D0  1283               	bcf	3,5	;RP0=0, select bank0
   760     06D1  1303               	bcf	3,6	;RP1=0, select bank0
   761     06D2  00A0               	movwf	sprintf@f
   762     06D3  0839               	movf	_adc_value_2+1,w
   763     06D4  00A2               	movwf	?_sprintf+2
   764     06D5  0838               	movf	_adc_value_2,w
   765     06D6  00A1               	movwf	?_sprintf+1
   766     06D7  3030               	movlw	(low (main@str2| 0))& (0+255)
   767     06D8  120A  118A  271C  120A  118A  	fcall	_sprintf
   768     06DD  3000               	movlw	0
   769     06DE  1283               	bcf	3,5	;RP0=0, select bank0
   770     06DF  1303               	bcf	3,6	;RP1=0, select bank0
   771     06E0  00A7               	movwf	lcd_put_cur@row
   772     06E1  00A8               	movwf	lcd_put_cur@row+1
   773     06E2  3000               	movlw	0
   774     06E3  00A9               	movwf	lcd_put_cur@col
   775     06E4  00AA               	movwf	lcd_put_cur@col+1
   776     06E5  120A  118A  235B  120A  118A  	fcall	_lcd_put_cur
   777     06EA                     l1532:
   778     06EA  3034               	movlw	(low (main@str1| 0))& (0+255)
   779     06EB  00FB               	movwf	lcd_send_string@str
   780     06EC  3000               	movlw	0
   781     06ED  00FC               	movwf	lcd_send_string@str+1
   782     06EE  120A  118A  239B  120A  118A  	fcall	_lcd_send_string
   783     06F3                     l1534:
   784     06F3  3001               	movlw	1
   785     06F4  1283               	bcf	3,5	;RP0=0, select bank0
   786     06F5  1303               	bcf	3,6	;RP1=0, select bank0
   787     06F6  00A7               	movwf	lcd_put_cur@row
   788     06F7  3000               	movlw	0
   789     06F8  00A8               	movwf	lcd_put_cur@row+1
   790     06F9  3000               	movlw	0
   791     06FA  00A9               	movwf	lcd_put_cur@col
   792     06FB  00AA               	movwf	lcd_put_cur@col+1
   793     06FC  120A  118A  235B  120A  118A  	fcall	_lcd_put_cur
   794     0701  3034               	movlw	(low (main@str1| 0))& (0+255)
   795     0702  00FB               	movwf	lcd_send_string@str
   796     0703  3000               	movlw	0
   797     0704  00FC               	movwf	lcd_send_string@str+1
   798     0705  120A  118A  239B  120A  118A  	fcall	_lcd_send_string
   799     070A                     l1536:
   800     070A  3007               	movlw	7
   801     070B  1283               	bcf	3,5	;RP0=0, select bank0
   802     070C  1303               	bcf	3,6	;RP1=0, select bank0
   803     070D  00AF               	movwf	??_main+2
   804     070E  3058               	movlw	88
   805     070F  00AE               	movwf	??_main+1
   806     0710  3059               	movlw	89
   807     0711  00AD               	movwf	??_main
   808     0712                     u817:
   809     0712  0BAD               	decfsz	??_main,f
   810     0713  2F12               	goto	u817
   811     0714  0BAE               	decfsz	??_main+1,f
   812     0715  2F12               	goto	u817
   813     0716  0BAF               	decfsz	??_main+2,f
   814     0717  2F12               	goto	u817
   815     0718  2E96               	goto	l1520
   816     0719  120A  118A  2800   	ljmp	start
   817     071C                     __end_of_main:
   818                           
   819                           	psect	text1
   820     071C                     __ptext1:	
   821 ;; *************** function _sprintf *****************
   822 ;; Defined at:
   823 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;  sp              1    wreg     PTR unsigned char 
   826 ;;		 -> main@str2(4), main@str1(4), 
   827 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   828 ;;		 -> STR_4(3), STR_3(3), 
   829 ;; Auto vars:     Size  Location     Type
   830 ;;  sp              1   11[BANK0 ] PTR unsigned char 
   831 ;;		 -> main@str2(4), main@str1(4), 
   832 ;;  tmpval          4    0        struct .
   833 ;;  val             2    9[BANK0 ] unsigned int 
   834 ;;  cp              2    0        PTR const unsigned char 
   835 ;;  len             2    0        unsigned int 
   836 ;;  c               1   12[BANK0 ] unsigned char 
   837 ;;  prec            1    8[BANK0 ] char 
   838 ;;  flag            1    7[BANK0 ] unsigned char 
   839 ;;  ap              1    6[BANK0 ] PTR void [1]
   840 ;;		 -> ?_sprintf(2), 
   841 ;; Return value:  Size  Location     Type
   842 ;;                  2    0[BANK0 ] int 
   843 ;; Registers used:
   844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   850 ;;      Params:         0       3       0       0       0
   851 ;;      Locals:         0       7       0       0       0
   852 ;;      Temps:          0       3       0       0       0
   853 ;;      Totals:         0      13       0       0       0
   854 ;;Total ram usage:       13 bytes
   855 ;; Hardware stack levels used: 1
   856 ;; Hardware stack levels required when called: 1
   857 ;; This function calls:
   858 ;;		___lwdiv
   859 ;;		___lwmod
   860 ;; This function is called by:
   861 ;;		_main
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865     071C                     _sprintf:	
   866                           ;psect for function _sprintf
   867                           
   868                           
   869                           ;incstack = 0
   870                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   871                           ;sprintf@sp stored from wreg
   872     071C  1283               	bcf	3,5	;RP0=0, select bank0
   873     071D  1303               	bcf	3,6	;RP1=0, select bank0
   874     071E  00AB               	movwf	sprintf@sp
   875     071F                     l1418:
   876                           
   877                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   878     071F  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   879     0720  00A6               	movwf	sprintf@ap
   880                           
   881                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   882     0721  2FE1               	goto	l1472
   883     0722                     l1420:
   884                           
   885                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   886     0722  3025               	movlw	37
   887     0723  062C               	xorwf	sprintf@c,w
   888     0724  1903               	btfsc	3,2
   889     0725  2F27               	goto	u721
   890     0726  2F28               	goto	u720
   891     0727                     u721:
   892     0727  2F32               	goto	l1426
   893     0728                     u720:
   894     0728                     l1422:
   895                           
   896                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   897     0728  082B               	movf	sprintf@sp,w
   898     0729  0084               	movwf	4
   899     072A  082C               	movf	sprintf@c,w
   900     072B  1383               	bcf	3,7	;select IRP bank0
   901     072C  0080               	movwf	0
   902     072D                     l1424:
   903     072D  3001               	movlw	1
   904     072E  00FF               	movwf	btemp+1
   905     072F  087F               	movf	btemp+1,w
   906     0730  07AB               	addwf	sprintf@sp,f
   907                           
   908                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
   909     0731  2FE1               	goto	l1472
   910     0732                     l1426:
   911                           
   912                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   913     0732  01A7               	clrf	sprintf@flag
   914     0733                     l1430:	
   915                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   916                           
   917     0733  3001               	movlw	1
   918     0734  07A0               	addwf	sprintf@f,f
   919     0735  30FF               	movlw	-1
   920     0736  0720               	addwf	sprintf@f,w
   921     0737  0084               	movwf	4
   922     0738  120A  118A  200D  120A  118A  	fcall	stringdir
   923     073D  00AC               	movwf	sprintf@c
   924     073E  00A3               	movwf	??_sprintf
   925     073F  01A4               	clrf	??_sprintf+1
   926                           
   927                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   928                           ; Switch size 1, requested type "simple"
   929                           ; Number of cases is 1, Range of values is 0 to 0
   930                           ; switch strategies available:
   931                           ; Name         Instructions Cycles
   932                           ; simple_byte            4     3 (average)
   933                           ; direct_byte           11     8 (fixed)
   934                           ; jumptable            260     6 (fixed)
   935                           ;	Chosen strategy is simple_byte
   936     0740  0824               	movf	??_sprintf+1,w
   937     0741  3A00               	xorlw	0	; case 0
   938     0742  1903               	skipnz
   939     0743  2F45               	goto	l1580
   940     0744  2FE1               	goto	l1472
   941     0745                     l1580:
   942                           
   943                           ; Switch size 1, requested type "simple"
   944                           ; Number of cases is 3, Range of values is 0 to 105
   945                           ; switch strategies available:
   946                           ; Name         Instructions Cycles
   947                           ; simple_byte           10     6 (average)
   948                           ; jumptable            260     6 (fixed)
   949                           ;	Chosen strategy is simple_byte
   950     0745  0823               	movf	??_sprintf,w
   951     0746  3A00               	xorlw	0	; case 0
   952     0747  1903               	skipnz
   953     0748  2FF1               	goto	l1474
   954     0749  3A64               	xorlw	100	; case 100
   955     074A  1903               	skipnz
   956     074B  2F50               	goto	l1432
   957     074C  3A0D               	xorlw	13	; case 105
   958     074D  1903               	skipnz
   959     074E  2F50               	goto	l1432
   960     074F  2FE1               	goto	l1472
   961     0750                     l1432:
   962                           
   963                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
   964     0750  0826               	movf	sprintf@ap,w
   965     0751  0084               	movwf	4
   966     0752  1383               	bcf	3,7	;select IRP bank0
   967     0753  0800               	movf	0,w
   968     0754  00A9               	movwf	sprintf@val
   969     0755  0A84               	incf	4,f
   970     0756  0800               	movf	0,w
   971     0757  00AA               	movwf	sprintf@val+1
   972     0758                     l1434:
   973     0758  3002               	movlw	2
   974     0759  00FF               	movwf	btemp+1
   975     075A  087F               	movf	btemp+1,w
   976     075B  07A6               	addwf	sprintf@ap,f
   977     075C                     l1436:
   978                           
   979                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
   980     075C  1FAA               	btfss	sprintf@val+1,7
   981     075D  2F5F               	goto	u731
   982     075E  2F60               	goto	u730
   983     075F                     u731:
   984     075F  2F69               	goto	l1442
   985     0760                     u730:
   986     0760                     l1438:
   987                           
   988                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
   989     0760  3003               	movlw	3
   990     0761  00FF               	movwf	btemp+1
   991     0762  087F               	movf	btemp+1,w
   992     0763  04A7               	iorwf	sprintf@flag,f
   993     0764                     l1440:
   994                           
   995                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
   996     0764  09A9               	comf	sprintf@val,f
   997     0765  09AA               	comf	sprintf@val+1,f
   998     0766  0AA9               	incf	sprintf@val,f
   999     0767  1903               	skipnz
  1000     0768  0AAA               	incf	sprintf@val+1,f
  1001     0769                     l1442:
  1002                           
  1003                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1004     0769  01AC               	clrf	sprintf@c
  1005     076A  0AAC               	incf	sprintf@c,f
  1006     076B                     l1448:
  1007                           
  1008                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1009     076B  082C               	movf	sprintf@c,w
  1010     076C  00A3               	movwf	??_sprintf
  1011     076D  0723               	addwf	??_sprintf,w
  1012     076E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1013     076F  0084               	movwf	4
  1014     0770  120A  118A  200D  120A  118A  	fcall	stringdir
  1015     0775  00A4               	movwf	??_sprintf+1
  1016     0776  120A  118A  200D  120A  118A  	fcall	stringdir
  1017     077B  00A5               	movwf	??_sprintf+2
  1018     077C  0825               	movf	??_sprintf+2,w
  1019     077D  022A               	subwf	sprintf@val+1,w
  1020     077E  1D03               	skipz
  1021     077F  2F82               	goto	u745
  1022     0780  0824               	movf	??_sprintf+1,w
  1023     0781  0229               	subwf	sprintf@val,w
  1024     0782                     u745:
  1025     0782  1803               	skipnc
  1026     0783  2F85               	goto	u741
  1027     0784  2F86               	goto	u740
  1028     0785                     u741:
  1029     0785  2F87               	goto	l1452
  1030     0786                     u740:
  1031     0786  2F91               	goto	l1456
  1032     0787                     l1452:
  1033     0787  3001               	movlw	1
  1034     0788  00FF               	movwf	btemp+1
  1035     0789  087F               	movf	btemp+1,w
  1036     078A  07AC               	addwf	sprintf@c,f
  1037     078B                     l1454:
  1038     078B  3005               	movlw	5
  1039     078C  062C               	xorwf	sprintf@c,w
  1040     078D  1D03               	btfss	3,2
  1041     078E  2F90               	goto	u751
  1042     078F  2F91               	goto	u750
  1043     0790                     u751:
  1044     0790  2F6B               	goto	l1448
  1045     0791                     u750:
  1046     0791                     l1456:
  1047                           
  1048                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1049     0791  0827               	movf	sprintf@flag,w
  1050     0792  3903               	andlw	3
  1051     0793  1903               	btfsc	3,2
  1052     0794  2F96               	goto	u761
  1053     0795  2F97               	goto	u760
  1054     0796                     u761:
  1055     0796  2FA0               	goto	l1462
  1056     0797                     u760:
  1057     0797                     l1458:
  1058                           
  1059                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1060     0797  082B               	movf	sprintf@sp,w
  1061     0798  0084               	movwf	4
  1062     0799  302D               	movlw	45
  1063     079A  1383               	bcf	3,7	;select IRP bank0
  1064     079B  0080               	movwf	0
  1065     079C                     l1460:
  1066     079C  3001               	movlw	1
  1067     079D  00FF               	movwf	btemp+1
  1068     079E  087F               	movf	btemp+1,w
  1069     079F  07AB               	addwf	sprintf@sp,f
  1070     07A0                     l1462:
  1071                           
  1072                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1073     07A0  082C               	movf	sprintf@c,w
  1074     07A1  00A8               	movwf	sprintf@prec
  1075                           
  1076                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1077     07A2  2FD8               	goto	l1470
  1078     07A3                     l1464:
  1079                           
  1080                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1081     07A3  300A               	movlw	10
  1082     07A4  00F7               	movwf	___lwmod@divisor
  1083     07A5  3000               	movlw	0
  1084     07A6  00F8               	movwf	___lwmod@divisor+1
  1085     07A7  0828               	movf	sprintf@prec,w
  1086     07A8  00A3               	movwf	??_sprintf
  1087     07A9  0723               	addwf	??_sprintf,w
  1088     07AA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1089     07AB  0084               	movwf	4
  1090     07AC  120A  118A  200D  120A  118A  	fcall	stringdir
  1091     07B1  00F0               	movwf	___lwdiv@divisor
  1092     07B2  120A  118A  200D  120A  118A  	fcall	stringdir
  1093     07B7  00F1               	movwf	___lwdiv@divisor+1
  1094     07B8  082A               	movf	sprintf@val+1,w
  1095     07B9  00F3               	movwf	___lwdiv@dividend+1
  1096     07BA  0829               	movf	sprintf@val,w
  1097     07BB  00F2               	movwf	___lwdiv@dividend
  1098     07BC  120A  118A  250E  120A  118A  	fcall	___lwdiv
  1099     07C1  0871               	movf	?___lwdiv+1,w
  1100     07C2  00FA               	movwf	___lwmod@dividend+1
  1101     07C3  0870               	movf	?___lwdiv,w
  1102     07C4  00F9               	movwf	___lwmod@dividend
  1103     07C5  120A  118A  2456  120A  118A  	fcall	___lwmod
  1104     07CA  0877               	movf	?___lwmod,w
  1105     07CB  3E30               	addlw	48
  1106     07CC  1283               	bcf	3,5	;RP0=0, select bank0
  1107     07CD  1303               	bcf	3,6	;RP1=0, select bank0
  1108     07CE  00AC               	movwf	sprintf@c
  1109     07CF                     l1466:
  1110                           
  1111                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1112     07CF  082B               	movf	sprintf@sp,w
  1113     07D0  0084               	movwf	4
  1114     07D1  082C               	movf	sprintf@c,w
  1115     07D2  1383               	bcf	3,7	;select IRP bank0
  1116     07D3  0080               	movwf	0
  1117     07D4                     l1468:
  1118     07D4  3001               	movlw	1
  1119     07D5  00FF               	movwf	btemp+1
  1120     07D6  087F               	movf	btemp+1,w
  1121     07D7  07AB               	addwf	sprintf@sp,f
  1122     07D8                     l1470:
  1123                           
  1124                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1125     07D8  30FF               	movlw	255
  1126     07D9  00FF               	movwf	btemp+1
  1127     07DA  087F               	movf	btemp+1,w
  1128     07DB  07A8               	addwf	sprintf@prec,f
  1129     07DC  0A28               	incf	sprintf@prec,w
  1130     07DD  1D03               	btfss	3,2
  1131     07DE  2FE0               	goto	u771
  1132     07DF  2FE1               	goto	u770
  1133     07E0                     u771:
  1134     07E0  2FA3               	goto	l1464
  1135     07E1                     u770:
  1136     07E1                     l1472:
  1137                           
  1138                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1139     07E1  3001               	movlw	1
  1140     07E2  07A0               	addwf	sprintf@f,f
  1141     07E3  30FF               	movlw	-1
  1142     07E4  0720               	addwf	sprintf@f,w
  1143     07E5  0084               	movwf	4
  1144     07E6  120A  118A  200D  120A  118A  	fcall	stringdir
  1145     07EB  00AC               	movwf	sprintf@c
  1146     07EC  082C               	movf	sprintf@c,w
  1147     07ED  1D03               	btfss	3,2
  1148     07EE  2FF0               	goto	u781
  1149     07EF  2FF1               	goto	u780
  1150     07F0                     u781:
  1151     07F0  2F22               	goto	l1420
  1152     07F1                     u780:
  1153     07F1                     l1474:
  1154                           
  1155                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1156     07F1  082B               	movf	sprintf@sp,w
  1157     07F2  0084               	movwf	4
  1158     07F3  1383               	bcf	3,7	;select IRP bank0
  1159     07F4  0180               	clrf	0
  1160     07F5                     l248:
  1161     07F5  0008               	return
  1162     07F6                     __end_of_sprintf:
  1163                           
  1164                           	psect	text2
  1165     0456                     __ptext2:	
  1166 ;; *************** function ___lwmod *****************
  1167 ;; Defined at:
  1168 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;  divisor         2    7[COMMON] unsigned int 
  1171 ;;  dividend        2    9[COMMON] unsigned int 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  counter         1   11[COMMON] unsigned char 
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  2    7[COMMON] unsigned int 
  1176 ;; Registers used:
  1177 ;;		wreg, status,2, status,0, btemp+1
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1183 ;;      Params:         4       0       0       0       0
  1184 ;;      Locals:         1       0       0       0       0
  1185 ;;      Temps:          0       0       0       0       0
  1186 ;;      Totals:         5       0       0       0       0
  1187 ;;Total ram usage:        5 bytes
  1188 ;; Hardware stack levels used: 1
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_sprintf
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196     0456                     ___lwmod:	
  1197                           ;psect for function ___lwmod
  1198                           
  1199     0456                     l1304:	
  1200                           ;incstack = 0
  1201                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1202                           
  1203     0456  0877               	movf	___lwmod@divisor,w
  1204     0457  0478               	iorwf	___lwmod@divisor+1,w
  1205     0458  1903               	btfsc	3,2
  1206     0459  2C5B               	goto	u601
  1207     045A  2C5C               	goto	u600
  1208     045B                     u601:
  1209     045B  2C8B               	goto	l1322
  1210     045C                     u600:
  1211     045C                     l1306:
  1212     045C  01FB               	clrf	___lwmod@counter
  1213     045D  0AFB               	incf	___lwmod@counter,f
  1214     045E  2C6A               	goto	l1312
  1215     045F                     l1308:
  1216     045F  3001               	movlw	1
  1217     0460                     u615:
  1218     0460  1003               	clrc
  1219     0461  0DF7               	rlf	___lwmod@divisor,f
  1220     0462  0DF8               	rlf	___lwmod@divisor+1,f
  1221     0463  3EFF               	addlw	-1
  1222     0464  1D03               	skipz
  1223     0465  2C60               	goto	u615
  1224     0466                     l1310:
  1225     0466  3001               	movlw	1
  1226     0467  00FF               	movwf	btemp+1
  1227     0468  087F               	movf	btemp+1,w
  1228     0469  07FB               	addwf	___lwmod@counter,f
  1229     046A                     l1312:
  1230     046A  1FF8               	btfss	___lwmod@divisor+1,7
  1231     046B  2C6D               	goto	u621
  1232     046C  2C6E               	goto	u620
  1233     046D                     u621:
  1234     046D  2C5F               	goto	l1308
  1235     046E                     u620:
  1236     046E                     l1314:
  1237     046E  0878               	movf	___lwmod@divisor+1,w
  1238     046F  027A               	subwf	___lwmod@dividend+1,w
  1239     0470  1D03               	skipz
  1240     0471  2C74               	goto	u635
  1241     0472  0877               	movf	___lwmod@divisor,w
  1242     0473  0279               	subwf	___lwmod@dividend,w
  1243     0474                     u635:
  1244     0474  1C03               	skipc
  1245     0475  2C77               	goto	u631
  1246     0476  2C78               	goto	u630
  1247     0477                     u631:
  1248     0477  2C7E               	goto	l1318
  1249     0478                     u630:
  1250     0478                     l1316:
  1251     0478  0877               	movf	___lwmod@divisor,w
  1252     0479  02F9               	subwf	___lwmod@dividend,f
  1253     047A  0878               	movf	___lwmod@divisor+1,w
  1254     047B  1C03               	skipc
  1255     047C  03FA               	decf	___lwmod@dividend+1,f
  1256     047D  02FA               	subwf	___lwmod@dividend+1,f
  1257     047E                     l1318:
  1258     047E  3001               	movlw	1
  1259     047F                     u645:
  1260     047F  1003               	clrc
  1261     0480  0CF8               	rrf	___lwmod@divisor+1,f
  1262     0481  0CF7               	rrf	___lwmod@divisor,f
  1263     0482  3EFF               	addlw	-1
  1264     0483  1D03               	skipz
  1265     0484  2C7F               	goto	u645
  1266     0485                     l1320:
  1267     0485  3001               	movlw	1
  1268     0486  02FB               	subwf	___lwmod@counter,f
  1269     0487  1D03               	btfss	3,2
  1270     0488  2C8A               	goto	u651
  1271     0489  2C8B               	goto	u650
  1272     048A                     u651:
  1273     048A  2C6E               	goto	l1314
  1274     048B                     u650:
  1275     048B                     l1322:
  1276     048B  087A               	movf	___lwmod@dividend+1,w
  1277     048C  00F8               	movwf	?___lwmod+1
  1278     048D  0879               	movf	___lwmod@dividend,w
  1279     048E  00F7               	movwf	?___lwmod
  1280     048F                     l534:
  1281     048F  0008               	return
  1282     0490                     __end_of___lwmod:
  1283                           
  1284                           	psect	text3
  1285     050E                     __ptext3:	
  1286 ;; *************** function ___lwdiv *****************
  1287 ;; Defined at:
  1288 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1289 ;; Parameters:    Size  Location     Type
  1290 ;;  divisor         2    0[COMMON] unsigned int 
  1291 ;;  dividend        2    2[COMMON] unsigned int 
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;  quotient        2    4[COMMON] unsigned int 
  1294 ;;  counter         1    6[COMMON] unsigned char 
  1295 ;; Return value:  Size  Location     Type
  1296 ;;                  2    0[COMMON] unsigned int 
  1297 ;; Registers used:
  1298 ;;		wreg, status,2, status,0, btemp+1
  1299 ;; Tracked objects:
  1300 ;;		On entry : 0/0
  1301 ;;		On exit  : 0/0
  1302 ;;		Unchanged: 0/0
  1303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1304 ;;      Params:         4       0       0       0       0
  1305 ;;      Locals:         3       0       0       0       0
  1306 ;;      Temps:          0       0       0       0       0
  1307 ;;      Totals:         7       0       0       0       0
  1308 ;;Total ram usage:        7 bytes
  1309 ;; Hardware stack levels used: 1
  1310 ;; This function calls:
  1311 ;;		Nothing
  1312 ;; This function is called by:
  1313 ;;		_sprintf
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317     050E                     ___lwdiv:	
  1318                           ;psect for function ___lwdiv
  1319                           
  1320     050E                     l1278:	
  1321                           ;incstack = 0
  1322                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1323                           
  1324     050E  01F4               	clrf	___lwdiv@quotient
  1325     050F  01F5               	clrf	___lwdiv@quotient+1
  1326     0510                     l1280:
  1327     0510  0870               	movf	___lwdiv@divisor,w
  1328     0511  0471               	iorwf	___lwdiv@divisor+1,w
  1329     0512  1903               	btfsc	3,2
  1330     0513  2D15               	goto	u531
  1331     0514  2D16               	goto	u530
  1332     0515                     u531:
  1333     0515  2D4D               	goto	l1300
  1334     0516                     u530:
  1335     0516                     l1282:
  1336     0516  01F6               	clrf	___lwdiv@counter
  1337     0517  0AF6               	incf	___lwdiv@counter,f
  1338     0518  2D24               	goto	l1288
  1339     0519                     l1284:
  1340     0519  3001               	movlw	1
  1341     051A                     u545:
  1342     051A  1003               	clrc
  1343     051B  0DF0               	rlf	___lwdiv@divisor,f
  1344     051C  0DF1               	rlf	___lwdiv@divisor+1,f
  1345     051D  3EFF               	addlw	-1
  1346     051E  1D03               	skipz
  1347     051F  2D1A               	goto	u545
  1348     0520                     l1286:
  1349     0520  3001               	movlw	1
  1350     0521  00FF               	movwf	btemp+1
  1351     0522  087F               	movf	btemp+1,w
  1352     0523  07F6               	addwf	___lwdiv@counter,f
  1353     0524                     l1288:
  1354     0524  1FF1               	btfss	___lwdiv@divisor+1,7
  1355     0525  2D27               	goto	u551
  1356     0526  2D28               	goto	u550
  1357     0527                     u551:
  1358     0527  2D19               	goto	l1284
  1359     0528                     u550:
  1360     0528                     l1290:
  1361     0528  3001               	movlw	1
  1362     0529                     u565:
  1363     0529  1003               	clrc
  1364     052A  0DF4               	rlf	___lwdiv@quotient,f
  1365     052B  0DF5               	rlf	___lwdiv@quotient+1,f
  1366     052C  3EFF               	addlw	-1
  1367     052D  1D03               	skipz
  1368     052E  2D29               	goto	u565
  1369     052F  0871               	movf	___lwdiv@divisor+1,w
  1370     0530  0273               	subwf	___lwdiv@dividend+1,w
  1371     0531  1D03               	skipz
  1372     0532  2D35               	goto	u575
  1373     0533  0870               	movf	___lwdiv@divisor,w
  1374     0534  0272               	subwf	___lwdiv@dividend,w
  1375     0535                     u575:
  1376     0535  1C03               	skipc
  1377     0536  2D38               	goto	u571
  1378     0537  2D39               	goto	u570
  1379     0538                     u571:
  1380     0538  2D40               	goto	l1296
  1381     0539                     u570:
  1382     0539                     l1292:
  1383     0539  0870               	movf	___lwdiv@divisor,w
  1384     053A  02F2               	subwf	___lwdiv@dividend,f
  1385     053B  0871               	movf	___lwdiv@divisor+1,w
  1386     053C  1C03               	skipc
  1387     053D  03F3               	decf	___lwdiv@dividend+1,f
  1388     053E  02F3               	subwf	___lwdiv@dividend+1,f
  1389     053F                     l1294:
  1390     053F  1474               	bsf	___lwdiv@quotient,0
  1391     0540                     l1296:
  1392     0540  3001               	movlw	1
  1393     0541                     u585:
  1394     0541  1003               	clrc
  1395     0542  0CF1               	rrf	___lwdiv@divisor+1,f
  1396     0543  0CF0               	rrf	___lwdiv@divisor,f
  1397     0544  3EFF               	addlw	-1
  1398     0545  1D03               	skipz
  1399     0546  2D41               	goto	u585
  1400     0547                     l1298:
  1401     0547  3001               	movlw	1
  1402     0548  02F6               	subwf	___lwdiv@counter,f
  1403     0549  1D03               	btfss	3,2
  1404     054A  2D4C               	goto	u591
  1405     054B  2D4D               	goto	u590
  1406     054C                     u591:
  1407     054C  2D28               	goto	l1290
  1408     054D                     u590:
  1409     054D                     l1300:
  1410     054D  0875               	movf	___lwdiv@quotient+1,w
  1411     054E  00F1               	movwf	?___lwdiv+1
  1412     054F  0874               	movf	___lwdiv@quotient,w
  1413     0550  00F0               	movwf	?___lwdiv
  1414     0551                     l524:
  1415     0551  0008               	return
  1416     0552                     __end_of___lwdiv:
  1417                           
  1418                           	psect	text4
  1419     039B                     __ptext4:	
  1420 ;; *************** function _lcd_send_string *****************
  1421 ;; Defined at:
  1422 ;;		line 202 in file "newmain.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;  str             2   11[COMMON] PTR unsigned char 
  1425 ;;		 -> main@str1(4), STR_2(13), STR_1(12), 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;		None
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1437 ;;      Params:         2       0       0       0       0
  1438 ;;      Locals:         0       0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0
  1440 ;;      Totals:         2       0       0       0       0
  1441 ;;Total ram usage:        2 bytes
  1442 ;; Hardware stack levels used: 1
  1443 ;; Hardware stack levels required when called: 4
  1444 ;; This function calls:
  1445 ;;		_lcd_send_data
  1446 ;; This function is called by:
  1447 ;;		_main
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451     039B                     _lcd_send_string:	
  1452                           ;psect for function _lcd_send_string
  1453                           
  1454     039B                     l1410:	
  1455                           ;incstack = 0
  1456                           ; Regs used in _lcd_send_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1457                           
  1458                           
  1459                           ;newmain.c: 202:   TRISD = 0x00;;newmain.c: 203:   PORTD = 0x00;;newmain.c: 204:   PORTB
      +                           = 0X00;
  1460     039B  2BB0               	goto	l1416
  1461     039C                     l1412:
  1462     039C  087C               	movf	lcd_send_string@str+1,w
  1463     039D  00FF               	movwf	btemp+1
  1464     039E  087B               	movf	lcd_send_string@str,w
  1465     039F  0084               	movwf	4
  1466     03A0  120A  118A  2003  120A  118A  	fcall	stringtab
  1467     03A5  120A  118A  24CF  120A  118A  	fcall	_lcd_send_data
  1468     03AA                     l1414:
  1469     03AA  3001               	movlw	1
  1470     03AB  07FB               	addwf	lcd_send_string@str,f
  1471     03AC  1803               	skipnc
  1472     03AD  0AFC               	incf	lcd_send_string@str+1,f
  1473     03AE  3000               	movlw	0
  1474     03AF  07FC               	addwf	lcd_send_string@str+1,f
  1475     03B0                     l1416:
  1476     03B0  087C               	movf	lcd_send_string@str+1,w
  1477     03B1  1283               	bcf	3,5	;RP0=0, select bank0
  1478     03B2  1303               	bcf	3,6	;RP1=0, select bank0
  1479     03B3  00FF               	movwf	btemp+1
  1480     03B4  087B               	movf	lcd_send_string@str,w
  1481     03B5  0084               	movwf	4
  1482     03B6  120A  118A  2003  120A  118A  	fcall	stringtab
  1483     03BB  3A00               	xorlw	0
  1484     03BC  1D03               	skipz
  1485     03BD  2BBF               	goto	u711
  1486     03BE  2BC0               	goto	u710
  1487     03BF                     u711:
  1488     03BF  2B9C               	goto	l1412
  1489     03C0                     u710:
  1490     03C0                     l126:
  1491     03C0  0008               	return
  1492     03C1                     __end_of_lcd_send_string:
  1493                           
  1494                           	psect	text5
  1495     035B                     __ptext5:	
  1496 ;; *************** function _lcd_put_cur *****************
  1497 ;; Defined at:
  1498 ;;		line 160 in file "newmain.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  row             2    7[BANK0 ] int 
  1501 ;;  col             2    9[BANK0 ] int 
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1513 ;;      Params:         0       4       0       0       0
  1514 ;;      Locals:         0       0       0       0       0
  1515 ;;      Temps:          0       0       0       0       0
  1516 ;;      Totals:         0       4       0       0       0
  1517 ;;Total ram usage:        4 bytes
  1518 ;; Hardware stack levels used: 1
  1519 ;; Hardware stack levels required when called: 4
  1520 ;; This function calls:
  1521 ;;		_lcd_send_cmd
  1522 ;; This function is called by:
  1523 ;;		_main
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527     035B                     _lcd_put_cur:	
  1528                           ;psect for function _lcd_put_cur
  1529                           
  1530     035B                     l1368:	
  1531                           ;incstack = 0
  1532                           ; Regs used in _lcd_put_cur: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1533                           
  1534                           
  1535                           ;newmain.c: 160: {;newmain.c: 161: ;newmain.c: 162:  _delay((unsigned long)((50)*(200000
      +                          00/4000.0)));
  1536     035B  2B63               	goto	l1374
  1537     035C                     l114:	
  1538                           ;newmain.c: 163:  lcd_send_cmd (0x30);;newmain.c: 164:  _delay((unsigned long)((5)*(2000
      +                          0000/4000.0)));
  1539                           
  1540                           
  1541                           ;newmain.c: 165:  lcd_send_cmd (0x30);
  1542     035C  17A9               	bsf	lcd_put_cur@col,7
  1543                           
  1544                           ;newmain.c: 166:  _delay((unsigned long)((1)*(20000000/4000.0)));
  1545     035D  2B72               	goto	l1376
  1546     035E                     l1370:
  1547                           
  1548                           ;newmain.c: 168:  _delay((unsigned long)((10)*(20000000/4000.0)));
  1549     035E  30C0               	movlw	192
  1550     035F  04A9               	iorwf	lcd_put_cur@col,f
  1551     0360  3000               	movlw	0
  1552     0361  04AA               	iorwf	lcd_put_cur@col+1,f
  1553                           
  1554                           ;newmain.c: 169:  lcd_send_cmd (0x20);
  1555     0362  2B72               	goto	l1376
  1556     0363                     l1374:
  1557                           
  1558                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1559                           ; Switch size 1, requested type "simple"
  1560                           ; Number of cases is 1, Range of values is 0 to 0
  1561                           ; switch strategies available:
  1562                           ; Name         Instructions Cycles
  1563                           ; simple_byte            4     3 (average)
  1564                           ; direct_byte           11     8 (fixed)
  1565                           ; jumptable            260     6 (fixed)
  1566                           ;	Chosen strategy is simple_byte
  1567     0363  1283               	bcf	3,5	;RP0=0, select bank0
  1568     0364  1303               	bcf	3,6	;RP1=0, select bank0
  1569     0365  0828               	movf	lcd_put_cur@row+1,w
  1570     0366  3A00               	xorlw	0	; case 0
  1571     0367  1903               	skipnz
  1572     0368  2B6A               	goto	l1582
  1573     0369  2B72               	goto	l1376
  1574     036A                     l1582:
  1575                           
  1576                           ; Switch size 1, requested type "simple"
  1577                           ; Number of cases is 2, Range of values is 0 to 1
  1578                           ; switch strategies available:
  1579                           ; Name         Instructions Cycles
  1580                           ; simple_byte            7     4 (average)
  1581                           ; direct_byte           14     8 (fixed)
  1582                           ; jumptable            260     6 (fixed)
  1583                           ;	Chosen strategy is simple_byte
  1584     036A  0827               	movf	lcd_put_cur@row,w
  1585     036B  3A00               	xorlw	0	; case 0
  1586     036C  1903               	skipnz
  1587     036D  2B5C               	goto	l114
  1588     036E  3A01               	xorlw	1	; case 1
  1589     036F  1903               	skipnz
  1590     0370  2B5E               	goto	l1370
  1591     0371  2B72               	goto	l1376
  1592     0372                     l1376:
  1593                           
  1594                           ;newmain.c: 172: 
  1595     0372  0829               	movf	lcd_put_cur@col,w
  1596     0373  120A  118A  2490  120A  118A  	fcall	_lcd_send_cmd
  1597     0378                     l117:
  1598     0378  0008               	return
  1599     0379                     __end_of_lcd_put_cur:
  1600                           
  1601                           	psect	text6
  1602     05B8                     __ptext6:	
  1603 ;; *************** function _lcd_init *****************
  1604 ;; Defined at:
  1605 ;;		line 176 in file "newmain.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;		None
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;		None
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      void 
  1612 ;; Registers used:
  1613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1619 ;;      Params:         0       0       0       0       0
  1620 ;;      Locals:         0       0       0       0       0
  1621 ;;      Temps:          3       0       0       0       0
  1622 ;;      Totals:         3       0       0       0       0
  1623 ;;Total ram usage:        3 bytes
  1624 ;; Hardware stack levels used: 1
  1625 ;; Hardware stack levels required when called: 4
  1626 ;; This function calls:
  1627 ;;		_lcd_send_cmd
  1628 ;; This function is called by:
  1629 ;;		_main
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633     05B8                     _lcd_init:	
  1634                           ;psect for function _lcd_init
  1635                           
  1636     05B8                     l1382:	
  1637                           ;incstack = 0
  1638                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1639                           
  1640                           
  1641                           ;newmain.c: 179:  _delay((unsigned long)((1)*(20000000/4000.0)));
  1642     05B8  3002               	movlw	2
  1643     05B9  00FD               	movwf	??_lcd_init+2
  1644     05BA  3045               	movlw	69
  1645     05BB  00FC               	movwf	??_lcd_init+1
  1646     05BC  30A9               	movlw	169
  1647     05BD  00FB               	movwf	??_lcd_init
  1648     05BE                     u827:
  1649     05BE  0BFB               	decfsz	??_lcd_init,f
  1650     05BF  2DBE               	goto	u827
  1651     05C0  0BFC               	decfsz	??_lcd_init+1,f
  1652     05C1  2DBE               	goto	u827
  1653     05C2  0BFD               	decfsz	??_lcd_init+2,f
  1654     05C3  2DBE               	goto	u827
  1655     05C4  2DC5               	nop2
  1656     05C5                     l1384:
  1657                           
  1658                           ;newmain.c: 180:  lcd_send_cmd (0x06);
  1659     05C5  3030               	movlw	48
  1660     05C6  120A  118A  2490  120A  118A  	fcall	_lcd_send_cmd
  1661     05CB                     l1386:
  1662                           
  1663                           ;newmain.c: 181:  _delay((unsigned long)((1)*(20000000/4000.0)));
  1664     05CB  3021               	movlw	33
  1665     05CC  00FC               	movwf	??_lcd_init+1
  1666     05CD  3076               	movlw	118
  1667     05CE  00FB               	movwf	??_lcd_init
  1668     05CF                     u837:
  1669     05CF  0BFB               	decfsz	??_lcd_init,f
  1670     05D0  2DCF               	goto	u837
  1671     05D1  0BFC               	decfsz	??_lcd_init+1,f
  1672     05D2  2DCF               	goto	u837
  1673     05D3  0000               	nop
  1674                           
  1675                           ;newmain.c: 182:  lcd_send_cmd (0x0C);
  1676     05D4  3030               	movlw	48
  1677     05D5  120A  118A  2490  120A  118A  	fcall	_lcd_send_cmd
  1678     05DA                     l1388:
  1679                           
  1680                           ;newmain.c: 183: }
  1681     05DA  3007               	movlw	7
  1682     05DB  00FC               	movwf	??_lcd_init+1
  1683     05DC  307D               	movlw	125
  1684     05DD  00FB               	movwf	??_lcd_init
  1685     05DE                     u847:
  1686     05DE  0BFB               	decfsz	??_lcd_init,f
  1687     05DF  2DDE               	goto	u847
  1688     05E0  0BFC               	decfsz	??_lcd_init+1,f
  1689     05E1  2DDE               	goto	u847
  1690     05E2                     l1390:
  1691                           
  1692                           ;newmain.c: 184: 
  1693     05E2  3030               	movlw	48
  1694     05E3  120A  118A  2490  120A  118A  	fcall	_lcd_send_cmd
  1695                           
  1696                           ;newmain.c: 185: void lcd_send_string (char *str)
  1697     05E8  3041               	movlw	65
  1698     05E9  00FC               	movwf	??_lcd_init+1
  1699     05EA  30EE               	movlw	238
  1700     05EB  00FB               	movwf	??_lcd_init
  1701     05EC                     u857:
  1702     05EC  0BFB               	decfsz	??_lcd_init,f
  1703     05ED  2DEC               	goto	u857
  1704     05EE  0BFC               	decfsz	??_lcd_init+1,f
  1705     05EF  2DEC               	goto	u857
  1706     05F0  0000               	nop
  1707     05F1                     l1392:
  1708                           
  1709                           ;newmain.c: 186: {
  1710     05F1  3020               	movlw	32
  1711     05F2  120A  118A  2490  120A  118A  	fcall	_lcd_send_cmd
  1712     05F7                     l1394:
  1713                           
  1714                           ;newmain.c: 187:  while (*str) lcd_send_data (*str++);
  1715     05F7  3041               	movlw	65
  1716     05F8  00FC               	movwf	??_lcd_init+1
  1717     05F9  30EE               	movlw	238
  1718     05FA  00FB               	movwf	??_lcd_init
  1719     05FB                     u867:
  1720     05FB  0BFB               	decfsz	??_lcd_init,f
  1721     05FC  2DFB               	goto	u867
  1722     05FD  0BFC               	decfsz	??_lcd_init+1,f
  1723     05FE  2DFB               	goto	u867
  1724     05FF  0000               	nop
  1725                           
  1726                           ;newmain.c: 190: 
  1727     0600  3028               	movlw	40
  1728     0601  120A  118A  2490  120A  118A  	fcall	_lcd_send_cmd
  1729     0606                     l1396:
  1730                           
  1731                           ;newmain.c: 191: uint16_t adc_value_1 = 0;
  1732     0606  3007               	movlw	7
  1733     0607  00FC               	movwf	??_lcd_init+1
  1734     0608  307D               	movlw	125
  1735     0609  00FB               	movwf	??_lcd_init
  1736     060A                     u877:
  1737     060A  0BFB               	decfsz	??_lcd_init,f
  1738     060B  2E0A               	goto	u877
  1739     060C  0BFC               	decfsz	??_lcd_init+1,f
  1740     060D  2E0A               	goto	u877
  1741     060E                     l1398:
  1742                           
  1743                           ;newmain.c: 192: uint16_t adc_value_2 = 0;
  1744     060E  3008               	movlw	8
  1745     060F  120A  118A  2490  120A  118A  	fcall	_lcd_send_cmd
  1746                           
  1747                           ;newmain.c: 193: 
  1748     0614  3007               	movlw	7
  1749     0615  00FC               	movwf	??_lcd_init+1
  1750     0616  307D               	movlw	125
  1751     0617  00FB               	movwf	??_lcd_init
  1752     0618                     u887:
  1753     0618  0BFB               	decfsz	??_lcd_init,f
  1754     0619  2E18               	goto	u887
  1755     061A  0BFC               	decfsz	??_lcd_init+1,f
  1756     061B  2E18               	goto	u887
  1757     061C                     l1400:
  1758                           
  1759                           ;newmain.c: 194: 
  1760     061C  3001               	movlw	1
  1761     061D  120A  118A  2490  120A  118A  	fcall	_lcd_send_cmd
  1762     0622                     l1402:
  1763                           
  1764                           ;newmain.c: 195: void main()
  1765     0622  3007               	movlw	7
  1766     0623  00FC               	movwf	??_lcd_init+1
  1767     0624  307D               	movlw	125
  1768     0625  00FB               	movwf	??_lcd_init
  1769     0626                     u897:
  1770     0626  0BFB               	decfsz	??_lcd_init,f
  1771     0627  2E26               	goto	u897
  1772     0628  0BFC               	decfsz	??_lcd_init+1,f
  1773     0629  2E26               	goto	u897
  1774     062A                     l1404:
  1775                           
  1776                           ;newmain.c: 196: {
  1777     062A  3007               	movlw	7
  1778     062B  00FC               	movwf	??_lcd_init+1
  1779     062C  307D               	movlw	125
  1780     062D  00FB               	movwf	??_lcd_init
  1781     062E                     u907:
  1782     062E  0BFB               	decfsz	??_lcd_init,f
  1783     062F  2E2E               	goto	u907
  1784     0630  0BFC               	decfsz	??_lcd_init+1,f
  1785     0631  2E2E               	goto	u907
  1786     0632                     l1406:
  1787                           
  1788                           ;newmain.c: 197:   char str1[4];
  1789     0632  3006               	movlw	6
  1790     0633  120A  118A  2490  120A  118A  	fcall	_lcd_send_cmd
  1791                           
  1792                           ;newmain.c: 198:   char str2[4];
  1793     0638  3007               	movlw	7
  1794     0639  00FC               	movwf	??_lcd_init+1
  1795     063A  307D               	movlw	125
  1796     063B  00FB               	movwf	??_lcd_init
  1797     063C                     u917:
  1798     063C  0BFB               	decfsz	??_lcd_init,f
  1799     063D  2E3C               	goto	u917
  1800     063E  0BFC               	decfsz	??_lcd_init+1,f
  1801     063F  2E3C               	goto	u917
  1802     0640                     l1408:
  1803                           
  1804                           ;newmain.c: 199: 
  1805     0640  300C               	movlw	12
  1806     0641  120A  118A  2490  120A  118A  	fcall	_lcd_send_cmd
  1807     0646                     l120:
  1808     0646  0008               	return
  1809     0647                     __end_of_lcd_init:
  1810                           
  1811                           	psect	text7
  1812     0379                     __ptext7:	
  1813 ;; *************** function _lcd_clear *****************
  1814 ;; Defined at:
  1815 ;;		line 151 in file "newmain.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;		None
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;  i               2   11[COMMON] int 
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1    wreg      void 
  1822 ;; Registers used:
  1823 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1829 ;;      Params:         0       0       0       0       0
  1830 ;;      Locals:         2       0       0       0       0
  1831 ;;      Temps:          0       0       0       0       0
  1832 ;;      Totals:         2       0       0       0       0
  1833 ;;Total ram usage:        2 bytes
  1834 ;; Hardware stack levels used: 1
  1835 ;; Hardware stack levels required when called: 4
  1836 ;; This function calls:
  1837 ;;		_lcd_send_cmd
  1838 ;;		_lcd_send_data
  1839 ;; This function is called by:
  1840 ;;		_main
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844     0379                     _lcd_clear:	
  1845                           ;psect for function _lcd_clear
  1846                           
  1847     0379                     l1354:	
  1848                           ;incstack = 0
  1849                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1850                           
  1851                           
  1852                           ;newmain.c: 153:     }
  1853     0379  3080               	movlw	128
  1854     037A  120A  118A  2490  120A  118A  	fcall	_lcd_send_cmd
  1855     037F                     l1356:
  1856                           
  1857                           ;newmain.c: 154: 
  1858     037F  01FB               	clrf	lcd_clear@i
  1859     0380  01FC               	clrf	lcd_clear@i+1
  1860     0381                     l1362:
  1861                           
  1862                           ;newmain.c: 155:     lcd_send_cmd (col);;newmain.c: 156: }
  1863     0381  3020               	movlw	32
  1864     0382  120A  118A  24CF  120A  118A  	fcall	_lcd_send_data
  1865     0387                     l1364:
  1866                           
  1867                           ;newmain.c: 157: 
  1868     0387  3001               	movlw	1
  1869     0388  07FB               	addwf	lcd_clear@i,f
  1870     0389  1803               	skipnc
  1871     038A  0AFC               	incf	lcd_clear@i+1,f
  1872     038B  3000               	movlw	0
  1873     038C  07FC               	addwf	lcd_clear@i+1,f
  1874     038D                     l1366:
  1875     038D  087C               	movf	lcd_clear@i+1,w
  1876     038E  3A80               	xorlw	128
  1877     038F  00FF               	movwf	btemp+1
  1878     0390  3080               	movlw	128
  1879     0391  027F               	subwf	btemp+1,w
  1880     0392  1D03               	skipz
  1881     0393  2B96               	goto	u705
  1882     0394  3046               	movlw	70
  1883     0395  027B               	subwf	lcd_clear@i,w
  1884     0396                     u705:
  1885     0396  1C03               	skipc
  1886     0397  2B99               	goto	u701
  1887     0398  2B9A               	goto	u700
  1888     0399                     u701:
  1889     0399  2B81               	goto	l1362
  1890     039A                     u700:
  1891     039A                     l110:
  1892     039A  0008               	return
  1893     039B                     __end_of_lcd_clear:
  1894                           
  1895                           	psect	text8
  1896     04CF                     __ptext8:	
  1897 ;; *************** function _lcd_send_data *****************
  1898 ;; Defined at:
  1899 ;;		line 133 in file "newmain.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;  data            1    wreg     unsigned char 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  data            1    4[BANK0 ] unsigned char 
  1904 ;;  data_t          4    0[BANK0 ] unsigned char [4]
  1905 ;;  data_l          1    6[BANK0 ] unsigned char 
  1906 ;;  data_u          1    5[BANK0 ] unsigned char 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1916 ;;      Params:         0       0       0       0       0
  1917 ;;      Locals:         0       7       0       0       0
  1918 ;;      Temps:          2       0       0       0       0
  1919 ;;      Totals:         2       7       0       0       0
  1920 ;;Total ram usage:        9 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 3
  1923 ;; This function calls:
  1924 ;;		_I2C_Multi_Send
  1925 ;;		_I2C_Start
  1926 ;;		_I2C_Stop
  1927 ;; This function is called by:
  1928 ;;		_lcd_clear
  1929 ;;		_lcd_send_string
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933     04CF                     _lcd_send_data:	
  1934                           ;psect for function _lcd_send_data
  1935                           
  1936                           
  1937                           ;incstack = 0
  1938                           ; Regs used in _lcd_send_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1939                           ;lcd_send_data@data stored from wreg
  1940     04CF  1283               	bcf	3,5	;RP0=0, select bank0
  1941     04D0  1303               	bcf	3,6	;RP1=0, select bank0
  1942     04D1  00A4               	movwf	lcd_send_data@data
  1943     04D2                     l1232:
  1944                           
  1945                           ;newmain.c: 133: ;newmain.c: 134: void lcd_clear (void);newmain.c: 135: {;newmain.c: 136
      +                          :  lcd_send_cmd (0x80);;newmain.c: 137:  for (int i=0; i<70; i++)
  1946     04D2  0824               	movf	lcd_send_data@data,w
  1947     04D3  39F0               	andlw	240
  1948     04D4  00A5               	movwf	lcd_send_data@data_u
  1949     04D5                     l1234:
  1950                           
  1951                           ;newmain.c: 138:  {
  1952     04D5  0824               	movf	lcd_send_data@data,w
  1953     04D6  00F9               	movwf	??_lcd_send_data
  1954     04D7  3003               	movlw	3
  1955     04D8                     u455:
  1956     04D8  1003               	clrc
  1957     04D9  0DF9               	rlf	??_lcd_send_data,f
  1958     04DA  3EFF               	addlw	-1
  1959     04DB  1D03               	skipz
  1960     04DC  2CD8               	goto	u455
  1961     04DD  1003               	clrc
  1962     04DE  0D79               	rlf	??_lcd_send_data,w
  1963     04DF  39F0               	andlw	240
  1964     04E0  00A6               	movwf	lcd_send_data@data_l
  1965     04E1                     l1236:
  1966                           
  1967                           ;newmain.c: 139:   lcd_send_data (' ');
  1968     04E1  0825               	movf	lcd_send_data@data_u,w
  1969     04E2  380D               	iorlw	13
  1970     04E3  00A0               	movwf	lcd_send_data@data_t
  1971     04E4                     l1238:
  1972                           
  1973                           ;newmain.c: 140:  }
  1974     04E4  0825               	movf	lcd_send_data@data_u,w
  1975     04E5  3809               	iorlw	9
  1976     04E6  00A1               	movwf	lcd_send_data@data_t+1
  1977     04E7                     l1240:
  1978                           
  1979                           ;newmain.c: 141: }
  1980     04E7  0826               	movf	lcd_send_data@data_l,w
  1981     04E8  380D               	iorlw	13
  1982     04E9  00A2               	movwf	lcd_send_data@data_t+2
  1983     04EA                     l1242:
  1984                           
  1985                           ;newmain.c: 142: 
  1986     04EA  0826               	movf	lcd_send_data@data_l,w
  1987     04EB  3809               	iorlw	9
  1988     04EC  00A3               	movwf	lcd_send_data@data_t+3
  1989     04ED                     l1244:
  1990                           
  1991                           ;newmain.c: 143: void lcd_put_cur(int row, int col)
  1992     04ED  120A  118A  232C  120A  118A  	fcall	_I2C_Start
  1993     04F2                     l1246:
  1994                           
  1995                           ;newmain.c: 144: {
  1996     04F2  3027               	movlw	39
  1997     04F3  00F1               	movwf	I2C_Multi_Send@address
  1998     04F4  3020               	movlw	(low (lcd_send_data@data_t| 0))& (0+255)
  1999     04F5  00F2               	movwf	I2C_Multi_Send@data
  2000     04F6  3004               	movlw	4
  2001     04F7  00F3               	movwf	I2C_Multi_Send@size
  2002     04F8  3000               	movlw	0
  2003     04F9  00F4               	movwf	I2C_Multi_Send@size+1
  2004     04FA  3000               	movlw	0
  2005     04FB  120A  118A  23EF  120A  118A  	fcall	_I2C_Multi_Send
  2006     0500                     l1248:
  2007                           
  2008                           ;newmain.c: 145:     switch (row)
  2009     0500  120A  118A  2335  120A  118A  	fcall	_I2C_Stop
  2010     0505                     l1250:
  2011                           
  2012                           ;newmain.c: 147:         case 0:
  2013     0505  3007               	movlw	7
  2014     0506  00FA               	movwf	??_lcd_send_data+1
  2015     0507  307D               	movlw	125
  2016     0508  00F9               	movwf	??_lcd_send_data
  2017     0509                     u927:
  2018     0509  0BF9               	decfsz	??_lcd_send_data,f
  2019     050A  2D09               	goto	u927
  2020     050B  0BFA               	decfsz	??_lcd_send_data+1,f
  2021     050C  2D09               	goto	u927
  2022     050D                     l105:
  2023     050D  0008               	return
  2024     050E                     __end_of_lcd_send_data:
  2025                           
  2026                           	psect	text9
  2027     0490                     __ptext9:	
  2028 ;; *************** function _lcd_send_cmd *****************
  2029 ;; Defined at:
  2030 ;;		line 115 in file "newmain.c"
  2031 ;; Parameters:    Size  Location     Type
  2032 ;;  cmd             1    wreg     unsigned char 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  cmd             1    4[BANK0 ] unsigned char 
  2035 ;;  data_t          4    0[BANK0 ] unsigned char [4]
  2036 ;;  data_l          1    6[BANK0 ] unsigned char 
  2037 ;;  data_u          1    5[BANK0 ] unsigned char 
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2047 ;;      Params:         0       0       0       0       0
  2048 ;;      Locals:         0       7       0       0       0
  2049 ;;      Temps:          2       0       0       0       0
  2050 ;;      Totals:         2       7       0       0       0
  2051 ;;Total ram usage:        9 bytes
  2052 ;; Hardware stack levels used: 1
  2053 ;; Hardware stack levels required when called: 3
  2054 ;; This function calls:
  2055 ;;		_I2C_Multi_Send
  2056 ;;		_I2C_Start
  2057 ;;		_I2C_Stop
  2058 ;; This function is called by:
  2059 ;;		_lcd_clear
  2060 ;;		_lcd_put_cur
  2061 ;;		_lcd_init
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065     0490                     _lcd_send_cmd:	
  2066                           ;psect for function _lcd_send_cmd
  2067                           
  2068                           
  2069                           ;incstack = 0
  2070                           ; Regs used in _lcd_send_cmd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2071                           ;lcd_send_cmd@cmd stored from wreg
  2072     0490  1283               	bcf	3,5	;RP0=0, select bank0
  2073     0491  1303               	bcf	3,6	;RP1=0, select bank0
  2074     0492  00A4               	movwf	lcd_send_cmd@cmd
  2075     0493                     l1212:
  2076                           
  2077                           ;newmain.c: 115: ;newmain.c: 116: void lcd_send_data (char data);newmain.c: 117: {;newma
      +                          in.c: 118:  char data_u, data_l;;newmain.c: 119:  uint8_t data_t[4];
  2078     0493  0824               	movf	lcd_send_cmd@cmd,w
  2079     0494  39F0               	andlw	240
  2080     0495  00A5               	movwf	lcd_send_cmd@data_u
  2081     0496                     l1214:
  2082                           
  2083                           ;newmain.c: 120:  data_u = (data&0xf0);
  2084     0496  0824               	movf	lcd_send_cmd@cmd,w
  2085     0497  00F9               	movwf	??_lcd_send_cmd
  2086     0498  3003               	movlw	3
  2087     0499                     u445:
  2088     0499  1003               	clrc
  2089     049A  0DF9               	rlf	??_lcd_send_cmd,f
  2090     049B  3EFF               	addlw	-1
  2091     049C  1D03               	skipz
  2092     049D  2C99               	goto	u445
  2093     049E  1003               	clrc
  2094     049F  0D79               	rlf	??_lcd_send_cmd,w
  2095     04A0  39F0               	andlw	240
  2096     04A1  00A6               	movwf	lcd_send_cmd@data_l
  2097     04A2                     l1216:
  2098                           
  2099                           ;newmain.c: 121:  data_l = ((data<<4)&0xf0);
  2100     04A2  0825               	movf	lcd_send_cmd@data_u,w
  2101     04A3  380C               	iorlw	12
  2102     04A4  00A0               	movwf	lcd_send_cmd@data_t
  2103     04A5                     l1218:
  2104                           
  2105                           ;newmain.c: 122:  data_t[0] = data_u|0x0D;
  2106     04A5  0825               	movf	lcd_send_cmd@data_u,w
  2107     04A6  3808               	iorlw	8
  2108     04A7  00A1               	movwf	lcd_send_cmd@data_t+1
  2109     04A8                     l1220:
  2110                           
  2111                           ;newmain.c: 123:  data_t[1] = data_u|0x09;
  2112     04A8  0826               	movf	lcd_send_cmd@data_l,w
  2113     04A9  380C               	iorlw	12
  2114     04AA  00A2               	movwf	lcd_send_cmd@data_t+2
  2115     04AB                     l1222:
  2116                           
  2117                           ;newmain.c: 124:  data_t[2] = data_l|0x0D;
  2118     04AB  0826               	movf	lcd_send_cmd@data_l,w
  2119     04AC  3808               	iorlw	8
  2120     04AD  00A3               	movwf	lcd_send_cmd@data_t+3
  2121     04AE                     l1224:
  2122                           
  2123                           ;newmain.c: 125:  data_t[3] = data_l|0x09;
  2124     04AE  120A  118A  232C  120A  118A  	fcall	_I2C_Start
  2125     04B3                     l1226:
  2126                           
  2127                           ;newmain.c: 126:  I2C_Start();
  2128     04B3  3027               	movlw	39
  2129     04B4  00F1               	movwf	I2C_Multi_Send@address
  2130     04B5  3020               	movlw	(low (lcd_send_cmd@data_t| 0))& (0+255)
  2131     04B6  00F2               	movwf	I2C_Multi_Send@data
  2132     04B7  3004               	movlw	4
  2133     04B8  00F3               	movwf	I2C_Multi_Send@size
  2134     04B9  3000               	movlw	0
  2135     04BA  00F4               	movwf	I2C_Multi_Send@size+1
  2136     04BB  3000               	movlw	0
  2137     04BC  120A  118A  23EF  120A  118A  	fcall	_I2C_Multi_Send
  2138     04C1                     l1228:
  2139                           
  2140                           ;newmain.c: 127:     I2C_Multi_Send(0,0X27,data_t,sizeof(data_t));
  2141     04C1  120A  118A  2335  120A  118A  	fcall	_I2C_Stop
  2142     04C6                     l1230:
  2143                           
  2144                           ;newmain.c: 129: 
  2145     04C6  3007               	movlw	7
  2146     04C7  00FA               	movwf	??_lcd_send_cmd+1
  2147     04C8  307D               	movlw	125
  2148     04C9  00F9               	movwf	??_lcd_send_cmd
  2149     04CA                     u937:
  2150     04CA  0BF9               	decfsz	??_lcd_send_cmd,f
  2151     04CB  2CCA               	goto	u937
  2152     04CC  0BFA               	decfsz	??_lcd_send_cmd+1,f
  2153     04CD  2CCA               	goto	u937
  2154     04CE                     l102:
  2155     04CE  0008               	return
  2156     04CF                     __end_of_lcd_send_cmd:
  2157                           
  2158                           	psect	text10
  2159     0335                     __ptext10:	
  2160 ;; *************** function _I2C_Stop *****************
  2161 ;; Defined at:
  2162 ;;		line 48 in file "newmain.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;		None
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;		None
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, status,2, status,0, pclath, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2176 ;;      Params:         0       0       0       0       0
  2177 ;;      Locals:         0       0       0       0       0
  2178 ;;      Temps:          0       0       0       0       0
  2179 ;;      Totals:         0       0       0       0       0
  2180 ;;Total ram usage:        0 bytes
  2181 ;; Hardware stack levels used: 1
  2182 ;; Hardware stack levels required when called: 1
  2183 ;; This function calls:
  2184 ;;		_I2C_IDLE
  2185 ;; This function is called by:
  2186 ;;		_lcd_send_cmd
  2187 ;;		_lcd_send_data
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191     0335                     _I2C_Stop:	
  2192                           ;psect for function _I2C_Stop
  2193                           
  2194     0335                     l1196:	
  2195                           ;incstack = 0
  2196                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  2197                           
  2198                           
  2199                           ;newmain.c: 50: {
  2200     0335  120A  118A  233E  120A  118A  	fcall	_I2C_IDLE
  2201     033A                     l1198:
  2202                           
  2203                           ;newmain.c: 51: I2C_IDLE();
  2204     033A  1683               	bsf	3,5	;RP0=1, select bank1
  2205     033B  1303               	bcf	3,6	;RP1=0, select bank1
  2206     033C  1511               	bsf	17,2	;volatile
  2207     033D                     l65:
  2208     033D  0008               	return
  2209     033E                     __end_of_I2C_Stop:
  2210                           
  2211                           	psect	text11
  2212     032C                     __ptext11:	
  2213 ;; *************** function _I2C_Start *****************
  2214 ;; Defined at:
  2215 ;;		line 42 in file "newmain.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;		None
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;		None
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0, pclath, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2229 ;;      Params:         0       0       0       0       0
  2230 ;;      Locals:         0       0       0       0       0
  2231 ;;      Temps:          0       0       0       0       0
  2232 ;;      Totals:         0       0       0       0       0
  2233 ;;Total ram usage:        0 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; Hardware stack levels required when called: 1
  2236 ;; This function calls:
  2237 ;;		_I2C_IDLE
  2238 ;; This function is called by:
  2239 ;;		_lcd_send_cmd
  2240 ;;		_lcd_send_data
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244     032C                     _I2C_Start:	
  2245                           ;psect for function _I2C_Start
  2246                           
  2247     032C                     l1192:	
  2248                           ;incstack = 0
  2249                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  2250                           
  2251                           
  2252                           ;newmain.c: 44: {
  2253     032C  120A  118A  233E  120A  118A  	fcall	_I2C_IDLE
  2254     0331                     l1194:
  2255                           
  2256                           ;newmain.c: 45:   I2C_IDLE();
  2257     0331  1683               	bsf	3,5	;RP0=1, select bank1
  2258     0332  1303               	bcf	3,6	;RP1=0, select bank1
  2259     0333  1411               	bsf	17,0	;volatile
  2260     0334                     l62:
  2261     0334  0008               	return
  2262     0335                     __end_of_I2C_Start:
  2263                           
  2264                           	psect	text12
  2265     03EF                     __ptext12:	
  2266 ;; *************** function _I2C_Multi_Send *****************
  2267 ;; Defined at:
  2268 ;;		line 89 in file "newmain.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  cmd             1    wreg     unsigned char 
  2271 ;;  address         1    1[COMMON] unsigned char 
  2272 ;;  data            1    2[COMMON] PTR unsigned char 
  2273 ;;		 -> lcd_send_data@data_t(4), lcd_send_cmd@data_t(4), 
  2274 ;;  size            2    3[COMMON] int 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  cmd             1    0[COMMON] unsigned char 
  2277 ;;  n               2    7[COMMON] int 
  2278 ;;  send            1    6[COMMON] unsigned char 
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2288 ;;      Params:         4       0       0       0       0
  2289 ;;      Locals:         3       0       0       0       0
  2290 ;;      Temps:          1       0       0       0       0
  2291 ;;      Totals:         8       0       0       0       0
  2292 ;;Total ram usage:        8 bytes
  2293 ;; Hardware stack levels used: 1
  2294 ;; Hardware stack levels required when called: 2
  2295 ;; This function calls:
  2296 ;;		_I2C_Write
  2297 ;; This function is called by:
  2298 ;;		_lcd_send_cmd
  2299 ;;		_lcd_send_data
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303     03EF                     _I2C_Multi_Send:	
  2304                           ;psect for function _I2C_Multi_Send
  2305                           
  2306     03EF                     l1200:	
  2307                           ;incstack = 0
  2308                           ; Regs used in _I2C_Multi_Send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2309                           
  2310                           
  2311                           ;newmain.c: 90:     ADCON0bits.CHS2 = 0;
  2312     03EF  0871               	movf	I2C_Multi_Send@address,w
  2313     03F0  00F5               	movwf	??_I2C_Multi_Send
  2314     03F1  0775               	addwf	??_I2C_Multi_Send,w
  2315     03F2  39FE               	andlw	254
  2316     03F3  00F6               	movwf	I2C_Multi_Send@send
  2317     03F4                     l1202:
  2318                           
  2319                           ;newmain.c: 91: 
  2320     03F4  0876               	movf	I2C_Multi_Send@send,w
  2321     03F5  120A  118A  234B  120A  118A  	fcall	_I2C_Write
  2322     03FA                     l1204:
  2323                           
  2324                           ;newmain.c: 92:     ADCON0 |= channel<<3;
  2325     03FA  01F7               	clrf	I2C_Multi_Send@n
  2326     03FB  01F8               	clrf	I2C_Multi_Send@n+1
  2327     03FC  2C0F               	goto	l1210
  2328     03FD                     l1206:
  2329                           
  2330                           ;newmain.c: 93:     GO_DONE = 1;
  2331     03FD  0877               	movf	I2C_Multi_Send@n,w
  2332     03FE  0772               	addwf	I2C_Multi_Send@data,w
  2333     03FF  00F5               	movwf	??_I2C_Multi_Send
  2334     0400  0875               	movf	??_I2C_Multi_Send,w
  2335     0401  0084               	movwf	4
  2336     0402  1383               	bcf	3,7	;select IRP bank0
  2337     0403  0800               	movf	0,w
  2338     0404  120A  118A  234B  120A  118A  	fcall	_I2C_Write
  2339     0409                     l1208:
  2340                           
  2341                           ;newmain.c: 94:     while(GO_DONE);
  2342     0409  3001               	movlw	1
  2343     040A  07F7               	addwf	I2C_Multi_Send@n,f
  2344     040B  1803               	skipnc
  2345     040C  0AF8               	incf	I2C_Multi_Send@n+1,f
  2346     040D  3000               	movlw	0
  2347     040E  07F8               	addwf	I2C_Multi_Send@n+1,f
  2348     040F                     l1210:
  2349     040F  0878               	movf	I2C_Multi_Send@n+1,w
  2350     0410  3A80               	xorlw	128
  2351     0411  00F5               	movwf	??_I2C_Multi_Send
  2352     0412  0874               	movf	I2C_Multi_Send@size+1,w
  2353     0413  3A80               	xorlw	128
  2354     0414  0275               	subwf	??_I2C_Multi_Send,w
  2355     0415  1D03               	skipz
  2356     0416  2C19               	goto	u435
  2357     0417  0873               	movf	I2C_Multi_Send@size,w
  2358     0418  0277               	subwf	I2C_Multi_Send@n,w
  2359     0419                     u435:
  2360     0419  1C03               	skipc
  2361     041A  2C1C               	goto	u431
  2362     041B  2C1D               	goto	u430
  2363     041C                     u431:
  2364     041C  2BFD               	goto	l1206
  2365     041D                     u430:
  2366     041D                     l89:
  2367     041D  0008               	return
  2368     041E                     __end_of_I2C_Multi_Send:
  2369                           
  2370                           	psect	text13
  2371     034B                     __ptext13:	
  2372 ;; *************** function _I2C_Write *****************
  2373 ;; Defined at:
  2374 ;;		line 73 in file "newmain.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  Data            1    wreg     unsigned char 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  Data            1    0[COMMON] unsigned char 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      unsigned char 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2, status,0, pclath, cstack
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2388 ;;      Params:         0       0       0       0       0
  2389 ;;      Locals:         1       0       0       0       0
  2390 ;;      Temps:          0       0       0       0       0
  2391 ;;      Totals:         1       0       0       0       0
  2392 ;;Total ram usage:        1 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; Hardware stack levels required when called: 1
  2395 ;; This function calls:
  2396 ;;		_I2C_IDLE
  2397 ;; This function is called by:
  2398 ;;		_I2C_Multi_Send
  2399 ;; This function uses a non-reentrant model
  2400 ;;
  2401                           
  2402     034B                     _I2C_Write:	
  2403                           ;psect for function _I2C_Write
  2404                           
  2405                           
  2406                           ;incstack = 0
  2407                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  2408                           ;I2C_Write@Data stored from wreg
  2409     034B  00F0               	movwf	I2C_Write@Data
  2410     034C                     l1182:
  2411                           
  2412                           ;newmain.c: 73:     uint8_t send = (uint8_t) ((address << 1) & (0b11111110));;newmain.c:
      +                           74:     I2C_Write(send);;newmain.c: 75:     for(int n = 0; n < size; n++){
  2413     034C  120A  118A  233E  120A  118A  	fcall	_I2C_IDLE
  2414     0351                     l1184:
  2415                           
  2416                           ;newmain.c: 76:         I2C_Write(data[n]);
  2417     0351  0870               	movf	I2C_Write@Data,w
  2418     0352  1283               	bcf	3,5	;RP0=0, select bank0
  2419     0353  1303               	bcf	3,6	;RP1=0, select bank0
  2420     0354  0093               	movwf	19	;volatile
  2421     0355                     l1186:
  2422                           
  2423                           ;newmain.c: 77:     }
  2424     0355  120A  118A  233E  120A  118A  	fcall	_I2C_IDLE
  2425     035A                     l1188:
  2426     035A                     l77:	
  2427                           ;newmain.c: 78: };	Return value of _I2C_Write is never used
  2428                           
  2429     035A  0008               	return
  2430     035B                     __end_of_I2C_Write:
  2431                           
  2432                           	psect	text14
  2433     033E                     __ptext14:	
  2434 ;; *************** function _I2C_IDLE *****************
  2435 ;; Defined at:
  2436 ;;		line 37 in file "newmain.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;		None
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg, status,2
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2450 ;;      Params:         0       0       0       0       0
  2451 ;;      Locals:         0       0       0       0       0
  2452 ;;      Temps:          0       0       0       0       0
  2453 ;;      Totals:         0       0       0       0       0
  2454 ;;Total ram usage:        0 bytes
  2455 ;; Hardware stack levels used: 1
  2456 ;; This function calls:
  2457 ;;		Nothing
  2458 ;; This function is called by:
  2459 ;;		_I2C_Start
  2460 ;;		_I2C_Stop
  2461 ;;		_I2C_Write
  2462 ;;		_I2C_Restart
  2463 ;;		_I2C_ACK
  2464 ;;		_I2C_NACK
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468     033E                     _I2C_IDLE:	
  2469                           ;psect for function _I2C_IDLE
  2470                           
  2471     033E                     l1178:	
  2472                           ;incstack = 0
  2473                           ; Regs used in _I2C_IDLE: [wreg+status,2]
  2474                           
  2475     033E                     l56:	
  2476                           ;newmain.c: 39: I2C_IDLE();
  2477                           
  2478     033E  1683               	bsf	3,5	;RP0=1, select bank1
  2479     033F  1303               	bcf	3,6	;RP1=0, select bank1
  2480     0340  1914               	btfsc	20,2	;volatile
  2481     0341  2B43               	goto	u411
  2482     0342  2B44               	goto	u410
  2483     0343                     u411:
  2484     0343  2B3E               	goto	l56
  2485     0344                     u410:
  2486     0344                     l1180:
  2487     0344  0811               	movf	17,w	;volatile
  2488     0345  391F               	andlw	31
  2489     0346  1D03               	btfss	3,2
  2490     0347  2B49               	goto	u421
  2491     0348  2B4A               	goto	u420
  2492     0349                     u421:
  2493     0349  2B3E               	goto	l56
  2494     034A                     u420:
  2495     034A                     l59:
  2496     034A  0008               	return
  2497     034B                     __end_of_I2C_IDLE:
  2498                           
  2499                           	psect	text15
  2500     041E                     __ptext15:	
  2501 ;; *************** function _I2C_Master_Init *****************
  2502 ;; Defined at:
  2503 ;;		line 28 in file "newmain.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  c               4    0[BANK0 ] const unsigned long 
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;		None
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  1    wreg      void 
  2510 ;; Registers used:
  2511 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2517 ;;      Params:         0       4       0       0       0
  2518 ;;      Locals:         0       0       0       0       0
  2519 ;;      Temps:          0       4       0       0       0
  2520 ;;      Totals:         0       8       0       0       0
  2521 ;;Total ram usage:        8 bytes
  2522 ;; Hardware stack levels used: 1
  2523 ;; Hardware stack levels required when called: 1
  2524 ;; This function calls:
  2525 ;;		___lldiv
  2526 ;; This function is called by:
  2527 ;;		_main
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531     041E                     _I2C_Master_Init:	
  2532                           ;psect for function _I2C_Master_Init
  2533                           
  2534     041E                     l1326:	
  2535                           ;incstack = 0
  2536                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2537                           
  2538                           
  2539                           ;newmain.c: 29: }
  2540     041E  3028               	movlw	40
  2541     041F  1283               	bcf	3,5	;RP0=0, select bank0
  2542     0420  1303               	bcf	3,6	;RP1=0, select bank0
  2543     0421  0094               	movwf	20	;volatile
  2544     0422                     l1328:
  2545                           
  2546                           ;newmain.c: 30: 
  2547     0422  1683               	bsf	3,5	;RP0=1, select bank1
  2548     0423  1303               	bcf	3,6	;RP1=0, select bank1
  2549     0424  0191               	clrf	17	;volatile
  2550     0425                     l1330:
  2551                           
  2552                           ;newmain.c: 31: void I2C_Stop()
  2553     0425  0194               	clrf	20	;volatile
  2554     0426                     l1332:
  2555                           
  2556                           ;newmain.c: 32: {
  2557     0426  1283               	bcf	3,5	;RP0=0, select bank0
  2558     0427  1303               	bcf	3,6	;RP1=0, select bank0
  2559     0428  0820               	movf	I2C_Master_Init@c,w
  2560     0429  00A4               	movwf	??_I2C_Master_Init
  2561     042A  0821               	movf	I2C_Master_Init@c+1,w
  2562     042B  00A5               	movwf	??_I2C_Master_Init+1
  2563     042C  0822               	movf	I2C_Master_Init@c+2,w
  2564     042D  00A6               	movwf	??_I2C_Master_Init+2
  2565     042E  0823               	movf	I2C_Master_Init@c+3,w
  2566     042F  00A7               	movwf	??_I2C_Master_Init+3
  2567     0430  3002               	movlw	2
  2568     0431                     u665:
  2569     0431  1003               	clrc
  2570     0432  0DA4               	rlf	??_I2C_Master_Init,f
  2571     0433  0DA5               	rlf	??_I2C_Master_Init+1,f
  2572     0434  0DA6               	rlf	??_I2C_Master_Init+2,f
  2573     0435  0DA7               	rlf	??_I2C_Master_Init+3,f
  2574     0436                     u660:
  2575     0436  3EFF               	addlw	-1
  2576     0437  1D03               	skipz
  2577     0438  2C31               	goto	u665
  2578     0439  0827               	movf	??_I2C_Master_Init+3,w
  2579     043A  00F3               	movwf	___lldiv@divisor+3
  2580     043B  0826               	movf	??_I2C_Master_Init+2,w
  2581     043C  00F2               	movwf	___lldiv@divisor+2
  2582     043D  0825               	movf	??_I2C_Master_Init+1,w
  2583     043E  00F1               	movwf	___lldiv@divisor+1
  2584     043F  0824               	movf	??_I2C_Master_Init,w
  2585     0440  00F0               	movwf	___lldiv@divisor
  2586     0441  3001               	movlw	1
  2587     0442  00F7               	movwf	___lldiv@dividend+3
  2588     0443  3031               	movlw	49
  2589     0444  00F6               	movwf	___lldiv@dividend+2
  2590     0445  302D               	movlw	45
  2591     0446  00F5               	movwf	___lldiv@dividend+1
  2592     0447  3000               	movlw	0
  2593     0448  00F4               	movwf	___lldiv@dividend
  2594     0449  120A  118A  2552  120A  118A  	fcall	___lldiv
  2595     044E  0870               	movf	?___lldiv,w
  2596     044F  3EFF               	addlw	255
  2597     0450  1683               	bsf	3,5	;RP0=1, select bank1
  2598     0451  1303               	bcf	3,6	;RP1=0, select bank1
  2599     0452  0093               	movwf	19	;volatile
  2600     0453                     l1334:
  2601                           
  2602                           ;newmain.c: 33: I2C_IDLE();
  2603     0453  1587               	bsf	7,3	;volatile
  2604     0454                     l1336:
  2605                           
  2606                           ;newmain.c: 34: SSPCON2bits.PEN = 1;
  2607     0454  1607               	bsf	7,4	;volatile
  2608     0455                     l53:
  2609     0455  0008               	return
  2610     0456                     __end_of_I2C_Master_Init:
  2611                           
  2612                           	psect	text16
  2613     0552                     __ptext16:	
  2614 ;; *************** function ___lldiv *****************
  2615 ;; Defined at:
  2616 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;  divisor         4    0[COMMON] unsigned long 
  2619 ;;  dividend        4    4[COMMON] unsigned long 
  2620 ;; Auto vars:     Size  Location     Type
  2621 ;;  quotient        4    9[COMMON] unsigned long 
  2622 ;;  counter         1   13[COMMON] unsigned char 
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  4    0[COMMON] unsigned long 
  2625 ;; Registers used:
  2626 ;;		wreg, status,2, status,0, btemp+1
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2632 ;;      Params:         8       0       0       0       0
  2633 ;;      Locals:         5       0       0       0       0
  2634 ;;      Temps:          1       0       0       0       0
  2635 ;;      Totals:        14       0       0       0       0
  2636 ;;Total ram usage:       14 bytes
  2637 ;; Hardware stack levels used: 1
  2638 ;; This function calls:
  2639 ;;		Nothing
  2640 ;; This function is called by:
  2641 ;;		_I2C_Master_Init
  2642 ;; This function uses a non-reentrant model
  2643 ;;
  2644                           
  2645     0552                     ___lldiv:	
  2646                           ;psect for function ___lldiv
  2647                           
  2648     0552                     l1252:	
  2649                           ;incstack = 0
  2650                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  2651                           
  2652     0552  3000               	movlw	0
  2653     0553  00FC               	movwf	___lldiv@quotient+3
  2654     0554  3000               	movlw	0
  2655     0555  00FB               	movwf	___lldiv@quotient+2
  2656     0556  3000               	movlw	0
  2657     0557  00FA               	movwf	___lldiv@quotient+1
  2658     0558  3000               	movlw	0
  2659     0559  00F9               	movwf	___lldiv@quotient
  2660     055A  0873               	movf	___lldiv@divisor+3,w
  2661     055B  0472               	iorwf	___lldiv@divisor+2,w
  2662     055C  0471               	iorwf	___lldiv@divisor+1,w
  2663     055D  0470               	iorwf	___lldiv@divisor,w
  2664     055E  1903               	skipnz
  2665     055F  2D61               	goto	u461
  2666     0560  2D62               	goto	u460
  2667     0561                     u461:
  2668     0561  2DAF               	goto	l1274
  2669     0562                     u460:
  2670     0562                     l1254:
  2671     0562  01FD               	clrf	___lldiv@counter
  2672     0563  0AFD               	incf	___lldiv@counter,f
  2673     0564  2D72               	goto	l1260
  2674     0565                     l1256:
  2675     0565  3001               	movlw	1
  2676     0566  00F8               	movwf	??___lldiv
  2677     0567                     u475:
  2678     0567  1003               	clrc
  2679     0568  0DF0               	rlf	___lldiv@divisor,f
  2680     0569  0DF1               	rlf	___lldiv@divisor+1,f
  2681     056A  0DF2               	rlf	___lldiv@divisor+2,f
  2682     056B  0DF3               	rlf	___lldiv@divisor+3,f
  2683     056C  0BF8               	decfsz	??___lldiv,f
  2684     056D  2D67               	goto	u475
  2685     056E                     l1258:
  2686     056E  3001               	movlw	1
  2687     056F  00FF               	movwf	btemp+1
  2688     0570  087F               	movf	btemp+1,w
  2689     0571  07FD               	addwf	___lldiv@counter,f
  2690     0572                     l1260:
  2691     0572  1FF3               	btfss	___lldiv@divisor+3,7
  2692     0573  2D75               	goto	u481
  2693     0574  2D76               	goto	u480
  2694     0575                     u481:
  2695     0575  2D65               	goto	l1256
  2696     0576                     u480:
  2697     0576                     l1262:
  2698     0576  3001               	movlw	1
  2699     0577  00F8               	movwf	??___lldiv
  2700     0578                     u495:
  2701     0578  1003               	clrc
  2702     0579  0DF9               	rlf	___lldiv@quotient,f
  2703     057A  0DFA               	rlf	___lldiv@quotient+1,f
  2704     057B  0DFB               	rlf	___lldiv@quotient+2,f
  2705     057C  0DFC               	rlf	___lldiv@quotient+3,f
  2706     057D  0BF8               	decfsz	??___lldiv,f
  2707     057E  2D78               	goto	u495
  2708     057F                     l1264:
  2709     057F  0873               	movf	___lldiv@divisor+3,w
  2710     0580  0277               	subwf	___lldiv@dividend+3,w
  2711     0581  1D03               	skipz
  2712     0582  2D8D               	goto	u505
  2713     0583  0872               	movf	___lldiv@divisor+2,w
  2714     0584  0276               	subwf	___lldiv@dividend+2,w
  2715     0585  1D03               	skipz
  2716     0586  2D8D               	goto	u505
  2717     0587  0871               	movf	___lldiv@divisor+1,w
  2718     0588  0275               	subwf	___lldiv@dividend+1,w
  2719     0589  1D03               	skipz
  2720     058A  2D8D               	goto	u505
  2721     058B  0870               	movf	___lldiv@divisor,w
  2722     058C  0274               	subwf	___lldiv@dividend,w
  2723     058D                     u505:
  2724     058D  1C03               	skipc
  2725     058E  2D90               	goto	u501
  2726     058F  2D91               	goto	u500
  2727     0590                     u501:
  2728     0590  2DA0               	goto	l1270
  2729     0591                     u500:
  2730     0591                     l1266:
  2731     0591  0870               	movf	___lldiv@divisor,w
  2732     0592  02F4               	subwf	___lldiv@dividend,f
  2733     0593  0871               	movf	___lldiv@divisor+1,w
  2734     0594  1C03               	skipc
  2735     0595  0F71               	incfsz	___lldiv@divisor+1,w
  2736     0596  02F5               	subwf	___lldiv@dividend+1,f
  2737     0597  0872               	movf	___lldiv@divisor+2,w
  2738     0598  1C03               	skipc
  2739     0599  0F72               	incfsz	___lldiv@divisor+2,w
  2740     059A  02F6               	subwf	___lldiv@dividend+2,f
  2741     059B  0873               	movf	___lldiv@divisor+3,w
  2742     059C  1C03               	skipc
  2743     059D  0F73               	incfsz	___lldiv@divisor+3,w
  2744     059E  02F7               	subwf	___lldiv@dividend+3,f
  2745     059F                     l1268:
  2746     059F  1479               	bsf	___lldiv@quotient,0
  2747     05A0                     l1270:
  2748     05A0  3001               	movlw	1
  2749     05A1                     u515:
  2750     05A1  1003               	clrc
  2751     05A2  0CF3               	rrf	___lldiv@divisor+3,f
  2752     05A3  0CF2               	rrf	___lldiv@divisor+2,f
  2753     05A4  0CF1               	rrf	___lldiv@divisor+1,f
  2754     05A5  0CF0               	rrf	___lldiv@divisor,f
  2755     05A6  3EFF               	addlw	-1
  2756     05A7  1D03               	skipz
  2757     05A8  2DA1               	goto	u515
  2758     05A9                     l1272:
  2759     05A9  3001               	movlw	1
  2760     05AA  02FD               	subwf	___lldiv@counter,f
  2761     05AB  1D03               	btfss	3,2
  2762     05AC  2DAE               	goto	u521
  2763     05AD  2DAF               	goto	u520
  2764     05AE                     u521:
  2765     05AE  2D76               	goto	l1262
  2766     05AF                     u520:
  2767     05AF                     l1274:
  2768     05AF  087C               	movf	___lldiv@quotient+3,w
  2769     05B0  00F3               	movwf	?___lldiv+3
  2770     05B1  087B               	movf	___lldiv@quotient+2,w
  2771     05B2  00F2               	movwf	?___lldiv+2
  2772     05B3  087A               	movf	___lldiv@quotient+1,w
  2773     05B4  00F1               	movwf	?___lldiv+1
  2774     05B5  0879               	movf	___lldiv@quotient,w
  2775     05B6  00F0               	movwf	?___lldiv
  2776     05B7                     l288:
  2777     05B7  0008               	return
  2778     05B8                     __end_of___lldiv:
  2779                           
  2780                           	psect	text17
  2781     0323                     __ptext17:	
  2782 ;; *************** function _ADC_Setup *****************
  2783 ;; Defined at:
  2784 ;;		line 97 in file "newmain.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;		None
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;		None
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      void 
  2791 ;; Registers used:
  2792 ;;		wreg
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2798 ;;      Params:         0       0       0       0       0
  2799 ;;      Locals:         0       0       0       0       0
  2800 ;;      Temps:          0       0       0       0       0
  2801 ;;      Totals:         0       0       0       0       0
  2802 ;;Total ram usage:        0 bytes
  2803 ;; Hardware stack levels used: 1
  2804 ;; This function calls:
  2805 ;;		Nothing
  2806 ;; This function is called by:
  2807 ;;		_main
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811     0323                     _ADC_Setup:	
  2812                           ;psect for function _ADC_Setup
  2813                           
  2814     0323                     l1338:	
  2815                           ;incstack = 0
  2816                           ; Regs used in _ADC_Setup: [wreg]
  2817                           
  2818                           
  2819                           ;newmain.c: 98: void lcd_send_cmd (char cmd)
  2820     0323  3081               	movlw	129
  2821     0324  1283               	bcf	3,5	;RP0=0, select bank0
  2822     0325  1303               	bcf	3,6	;RP1=0, select bank0
  2823     0326  009F               	movwf	31	;volatile
  2824                           
  2825                           ;newmain.c: 99: {
  2826     0327  3080               	movlw	128
  2827     0328  1683               	bsf	3,5	;RP0=1, select bank1
  2828     0329  1303               	bcf	3,6	;RP1=0, select bank1
  2829     032A  009F               	movwf	31	;volatile
  2830     032B                     l92:
  2831     032B  0008               	return
  2832     032C                     __end_of_ADC_Setup:
  2833                           
  2834                           	psect	text18
  2835     03C1                     __ptext18:	
  2836 ;; *************** function _ADC_Read *****************
  2837 ;; Defined at:
  2838 ;;		line 101 in file "newmain.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;  channel         2    0[COMMON] int 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;		None
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  2    0[COMMON] unsigned int 
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0, btemp+1
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2852 ;;      Params:         2       0       0       0       0
  2853 ;;      Locals:         0       0       0       0       0
  2854 ;;      Temps:          1       0       0       0       0
  2855 ;;      Totals:         3       0       0       0       0
  2856 ;;Total ram usage:        3 bytes
  2857 ;; Hardware stack levels used: 1
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		_main
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865     03C1                     _ADC_Read:	
  2866                           ;psect for function _ADC_Read
  2867                           
  2868     03C1                     l1340:	
  2869                           ;incstack = 0
  2870                           ; Regs used in _ADC_Read: [wreg+status,2+status,0+btemp+1]
  2871                           
  2872                           
  2873                           ;newmain.c: 102:  data_u = (cmd&0xf0);
  2874     03C1  0871               	movf	ADC_Read@channel+1,w
  2875     03C2  3A80               	xorlw	128
  2876     03C3  00FF               	movwf	btemp+1
  2877     03C4  3080               	movlw	128
  2878     03C5  027F               	subwf	btemp+1,w
  2879     03C6  1D03               	skipz
  2880     03C7  2BCA               	goto	u675
  2881     03C8  3008               	movlw	8
  2882     03C9  0270               	subwf	ADC_Read@channel,w
  2883     03CA                     u675:
  2884     03CA  1C03               	skipc
  2885     03CB  2BCD               	goto	u671
  2886     03CC  2BCE               	goto	u670
  2887     03CD                     u671:
  2888     03CD  2BD1               	goto	l95
  2889     03CE                     u670:
  2890     03CE                     l1342:
  2891                           
  2892                           ;newmain.c: 103:  data_l = ((cmd<<4)&0xf0);
  2893     03CE  01F0               	clrf	?_ADC_Read
  2894     03CF  01F1               	clrf	?_ADC_Read+1
  2895     03D0  2BEE               	goto	l96
  2896     03D1                     l95:
  2897                           
  2898                           ;newmain.c: 105:  data_t[1] = data_u|0x08;
  2899     03D1  1283               	bcf	3,5	;RP0=0, select bank0
  2900     03D2  1303               	bcf	3,6	;RP1=0, select bank0
  2901     03D3  119F               	bcf	31,3	;volatile
  2902                           
  2903                           ;newmain.c: 106:  data_t[2] = data_l|0x0C;
  2904     03D4  121F               	bcf	31,4	;volatile
  2905                           
  2906                           ;newmain.c: 107:  data_t[3] = data_l|0x08;
  2907     03D5  129F               	bcf	31,5	;volatile
  2908     03D6                     l1346:
  2909                           
  2910                           ;newmain.c: 109:     I2C_Multi_Send(0,0X27,data_t,sizeof(data_t));
  2911     03D6  0870               	movf	ADC_Read@channel,w	;volatile
  2912     03D7  00F2               	movwf	??_ADC_Read
  2913     03D8  3002               	movlw	2
  2914     03D9                     u685:
  2915     03D9  1003               	clrc
  2916     03DA  0DF2               	rlf	??_ADC_Read,f
  2917     03DB  3EFF               	addlw	-1
  2918     03DC  1D03               	skipz
  2919     03DD  2BD9               	goto	u685
  2920     03DE  1003               	clrc
  2921     03DF  0D72               	rlf	??_ADC_Read,w
  2922     03E0  00FF               	movwf	btemp+1
  2923     03E1  087F               	movf	btemp+1,w
  2924     03E2  049F               	iorwf	31,f	;volatile
  2925     03E3                     l1348:
  2926                           
  2927                           ;newmain.c: 110:     I2C_Stop();
  2928     03E3  151F               	bsf	31,2	;volatile
  2929     03E4                     l97:	
  2930                           ;newmain.c: 111: 
  2931                           
  2932     03E4  191F               	btfsc	31,2	;volatile
  2933     03E5  2BE7               	goto	u691
  2934     03E6  2BE8               	goto	u690
  2935     03E7                     u691:
  2936     03E7  2BE4               	goto	l97
  2937     03E8                     u690:
  2938     03E8                     l1350:
  2939                           
  2940                           ;newmain.c: 112:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2941     03E8  081E               	movf	30,w	;volatile
  2942     03E9  00F1               	movwf	?_ADC_Read+1
  2943     03EA  1683               	bsf	3,5	;RP0=1, select bank1
  2944     03EB  1303               	bcf	3,6	;RP1=0, select bank1
  2945     03EC  081E               	movf	30,w	;volatile
  2946     03ED  00F0               	movwf	?_ADC_Read
  2947     03EE                     l96:
  2948     03EE  0008               	return
  2949     03EF                     __end_of_ADC_Read:
  2950     007E                     btemp	set	126	;btemp
  2951     007E                     wtemp0	set	126
  2952                           
  2953                           	psect	config
  2954                           
  2955                           ;Config register CONFIG @ 0x2007
  2956                           ;	Oscillator Selection bits
  2957                           ;	FOSC = HS, HS oscillator
  2958                           ;	Watchdog Timer Enable bit
  2959                           ;	WDTE = OFF, WDT disabled
  2960                           ;	Power-up Timer Enable bit
  2961                           ;	PWRTE = OFF, PWRT disabled
  2962                           ;	Brown-out Reset Enable bit
  2963                           ;	BOREN = ON, BOR enabled
  2964                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2965                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2966                           ;	Data EEPROM Memory Code Protection bit
  2967                           ;	CPD = OFF, Data EEPROM code protection off
  2968                           ;	Flash Program Memory Write Enable bits
  2969                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2970                           ;	In-Circuit Debugger Mode bit
  2971                           ;	DEBUG = 0x1, unprogrammed default
  2972                           ;	Flash Program Memory Code Protection bit
  2973                           ;	CP = OFF, Code protection off
  2974     2007                     	org	8199
  2975     2007  3F7A               	dw	16250

Data Sizes:
    Strings     28
    Constant    10
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     24      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> main@str2(BANK0[4]), main@str1(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_send_string@str	PTR unsigned char  size(2) Largest target is 13
		 -> main@str1(BANK0[4]), STR_2(CODE[13]), STR_1(CODE[12]), 

    I2C_Multi_Send@data	PTR unsigned char  size(1) Largest target is 4
		 -> lcd_send_data@data_t(BANK0[4]), lcd_send_cmd@data_t(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_lcd_init
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_send_string->_lcd_send_data
    _lcd_put_cur->_lcd_send_cmd
    _lcd_init->_lcd_send_cmd
    _lcd_clear->_lcd_send_cmd
    _lcd_clear->_lcd_send_data
    _lcd_send_data->_I2C_Multi_Send
    _lcd_send_cmd->_I2C_Multi_Send
    _I2C_Multi_Send->_I2C_Write
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _lcd_send_string->_lcd_send_data
    _lcd_put_cur->_lcd_send_cmd
    _lcd_init->_lcd_send_cmd
    _lcd_clear->_lcd_send_cmd
    _lcd_clear->_lcd_send_data

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    7146
                                             13 BANK0     11    11      0
                           _ADC_Read
                          _ADC_Setup
                    _I2C_Master_Init
                          _lcd_clear
                           _lcd_init
                        _lcd_put_cur
                    _lcd_send_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1320
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcd_send_string                                      2     0      2    1192
                                             11 COMMON     2     0      2
                      _lcd_send_data
 ---------------------------------------------------------------------------------
 (1) _lcd_put_cur                                          4     0      4    1345
                                              7 BANK0      4     0      4
                       _lcd_send_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     843
                                             11 COMMON     3     3      0
                       _lcd_send_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            2     2      0    1732
                                             11 COMMON     2     2      0
                       _lcd_send_cmd
                      _lcd_send_data
 ---------------------------------------------------------------------------------
 (2) _lcd_send_data                                        9     9      0     843
                                              9 COMMON     2     2      0
                                              0 BANK0      7     7      0
                     _I2C_Multi_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _lcd_send_cmd                                         9     9      0     843
                                              9 COMMON     2     2      0
                                              0 BANK0      7     7      0
                     _I2C_Multi_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
                           _I2C_IDLE
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
                           _I2C_IDLE
 ---------------------------------------------------------------------------------
 (3) _I2C_Multi_Send                                       9     5      4     613
                                              1 COMMON     8     4      4
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _I2C_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_IDLE                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _ADC_Setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             3     1      2     196
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _ADC_Setup
   _I2C_Master_Init
     ___lldiv
   _lcd_clear
     _lcd_send_cmd
       _I2C_Multi_Send
         _I2C_Write
           _I2C_IDLE
       _I2C_Start
         _I2C_IDLE
       _I2C_Stop
         _I2C_IDLE
     _lcd_send_data
       _I2C_Multi_Send
       _I2C_Start
       _I2C_Stop
   _lcd_init
     _lcd_send_cmd
   _lcd_put_cur
     _lcd_send_cmd
   _lcd_send_string
     _lcd_send_data
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      1C       5       35.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2A      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Jun 07 19:18:58 2024

        I2C_Multi_Send@n 0077            ?_lcd_send_cmd 0070                        pc 0002  
           ?_lcd_put_cur 0027           ?_lcd_send_data 0070                       l53 0455  
                     l62 0334        I2C_Multi_Send@cmd 0070                       l56 033E  
                     l65 033D                       l59 034A                       l92 032B  
                     l77 035A                       l95 03D1                       l96 03EE  
                     l97 03E4                       l89 041D                       fsr 0004  
                    l102 04CE                      l110 039A                      l120 0646  
                    l105 050D                      l114 035C                      l117 0378  
                    l126 03C0                      l248 07F5                      l524 0551  
                    l534 048F                      l288 05B7       I2C_Multi_Send@data 0072  
                    u410 0344                      u411 0343                      u500 0591  
                    u420 034A                      u501 0590                      u421 0349  
                    u430 041D                      u431 041C                      u520 05AF  
                    u600 045C                      u521 05AE                      u505 058D  
                    u601 045B                      u530 0516                      u515 05A1  
                    u435 0419                      u531 0515                      u460 0562  
                    u700 039A                      u620 046E                      u461 0561  
                    u445 0499                      u701 0399                      u621 046D  
                    u710 03C0                      u550 0528                      u630 0478  
                    u455 04D8                      u711 03BF                      u551 0527  
                    u631 0477                      u615 0460                      u480 0576  
                    u720 0728                      u481 0575                      u705 0396  
                    u545 051A                      u721 0727                      u570 0539  
                    u650 048B                      u730 0760                      u475 0567  
                    u571 0538                      u651 048A                      u635 0474  
                    u731 075F                      u660 0436                      u740 0786  
                    u565 0529                      u645 047F                      u741 0785  
                    u670 03CE                      u590 054D                      u750 0791  
                    u671 03CD                      u495 0578                      u591 054C  
                    u575 0535                      u751 0790                      u807 06AF  
                    u760 0797                      u665 0431                      u585 0541  
                    u761 0796                      u745 0782                      u817 0712  
                    u690 03E8                      u770 07E1                      u691 03E7  
                    u675 03CA                      u907 062E                      u827 05BE  
                    u771 07E0                      u780 07F1                      u685 03D9  
                    u917 063C                      u837 05CF                      u781 07F0  
                    u927 0509                      u847 05DE                      u937 04CA  
                    u857 05EC                      u867 05FB                      u877 060A  
                    u797 0679                      u887 0618                      u897 0626  
     I2C_Multi_Send@send 0076       I2C_Multi_Send@size 0073                      fsr0 0004  
                    indf 0000                     l1200 03EF                     l1210 040F  
                   l1202 03F4                     l1204 03FA                     l1220 04A8  
                   l1212 0493                     l1300 054D                     l1206 03FD  
                   l1230 04C6                     l1222 04AB                     l1214 0496  
                   l1310 0466                     l1208 0409                     l1224 04AE  
                   l1216 04A2                     l1240 04E7                     l1232 04D2  
                   l1400 061C                     l1320 0485                     l1312 046A  
                   l1304 0456                     l1330 0425                     l1226 04B3  
                   l1218 04A5                     l1250 0505                     l1242 04EA  
                   l1234 04D5                     l1402 0622                     l1410 039B  
                   l1314 046E                     l1306 045C                     l1322 048B  
                   l1340 03C1                     l1260 0572                     l1252 0552  
                   l1332 0426                     l1180 0344                     l1228 04C1  
                   l1244 04ED                     l1236 04E1                     l1404 062A  
                   l1412 039C                     l1316 0478                     l1308 045F  
                   l1420 0722                     l1500 064B                     l1350 03E8  
                   l1342 03CE                     l1270 05A0                     l1262 0576  
                   l1254 0562                     l1334 0453                     l1326 041E  
                   l1182 034C                     l1246 04F2                     l1238 04E4  
                   l1406 0632                     l1414 03AA                     l1318 047E  
                   l1430 0733                     l1422 0728                     l1510 065E  
                   l1502 064C                     l1272 05A9                     l1264 057F  
                   l1256 0565                     l1336 0454                     l1328 0422  
                   l1184 0351                     l1192 032C                     l1248 0500  
                   l1408 0640                     l1416 03B0                     l1280 0510  
                   l1440 0764                     l1432 0750                     l1424 072D  
                   l1520 0696                     l1512 0663                     l1504 064D  
                   l1346 03D6                     l1338 0323                     l1266 0591  
                   l1258 056E                     l1274 05AF                     l1178 033E  
                   l1186 0355                     l1194 0331                     l1362 0381  
                   l1354 0379                     l1370 035E                     l1290 0528  
                   l1282 0516                     l1442 0769                     l1434 0758  
                   l1426 0732                     l1418 071F                     l1530 06CF  
                   l1522 069B                     l1514 0668                     l1506 0650  
                   l1348 03E3                     l1268 059F                     l1188 035A  
                   l1196 0335                     l1364 0387                     l1356 037F  
                   l1292 0539                     l1284 0519                     l1460 079C  
                   l1452 0787                     l1436 075C                     l1532 06EA  
                   l1524 06A9                     l1516 067F                     l1508 0651  
                   l1198 033A                     l1366 038D                     l1390 05E2  
                   l1382 05B8                     l1374 0363                     l1294 053F  
                   l1286 0520                     l1278 050E                     l1470 07D8  
                   l1462 07A0                     l1454 078B                     l1438 0760  
                   l1534 06F3                     l1526 06B4                     l1518 068D  
                   l1392 05F1                     l1384 05C5                     l1376 0372  
                   l1368 035B                     l1296 0540                     l1288 0524  
                   l1464 07A3                     l1456 0791                     l1448 076B  
                   l1472 07E1                     l1536 070A                     l1528 06C3  
                   l1394 05F7                     l1386 05CB                     l1298 0547  
                   l1466 07CF                     l1458 0797                     l1474 07F1  
                   l1396 0606                     l1388 05DA                     l1468 07D4  
                   l1580 0745                     l1398 060E                     l1582 036A  
                   l1498 0647                     STR_1 002A                     STR_2 001D  
                   STR_3 0036                     STR_4 0036         __end_of_I2C_IDLE 034B  
                   _main 0647                     btemp 007E         __end_of_I2C_Stop 033E  
       ?_lcd_send_string 007B         __end_of_ADC_Read 03EF                     start 0000  
         ??_lcd_send_cmd 0079         ?_I2C_Master_Init 0020                    ?_main 0070  
        __end_of___lldiv 05B8          __end_of___lwdiv 0552          __end_of___lwmod 0490  
                  _PORTB 0006                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _SSPIF 0063  
        __end_of_dpowers 001D        __end_of_I2C_Start 0335        __end_of_I2C_Write 035B  
                  pclath 000A        __end_of_ADC_Setup 032C                    status 0003  
                  wtemp0 007E          __end_of_sprintf 07F6          __initialization 07F6  
        ??_lcd_send_data 0079             __end_of_main 071C                   ??_main 002D  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E    I2C_Multi_Send@address 0071                   _SSPADD 0093  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of_lcd_init 0647  
              ??___lldiv 0078                ??___lwdiv 0074                ??___lwmod 007B  
        ADC_Read@channel 0070                ?_I2C_IDLE 0070                ?_I2C_Stop 0070  
              ?_ADC_Read 0070     __end_of_lcd_send_cmd 04CF                ??_sprintf 0023  
__end_of__initialization 07FC       lcd_send_cmd@data_l 0026       lcd_send_cmd@data_t 0020  
     lcd_send_cmd@data_u 0025           __pcstackCOMMON 0070               ??_I2C_IDLE 0070  
             ??_I2C_Stop 0070               ??_ADC_Read 0072               __pbssBANK0 0038  
             __pmaintext 0647                  _ACKSTAT 048E                  _GO_DONE 00FA  
                _SSPCON2 0091                ?_lcd_init 0070                  _SSPSTAT 0094  
             __stringtab 0003                _I2C_Start 032C                _I2C_Write 034B  
              _ADC_Setup 0323        __end_of_lcd_clear 039B                  ___lldiv 0552  
                ___lwdiv 050E                  ___lwmod 0456                  __ptext1 071C  
                __ptext2 0456                  __ptext3 050E                  __ptext4 039B  
                __ptext5 035B                  __ptext6 05B8                  __ptext7 0379  
                __ptext8 04CF                  __ptext9 0490                  _dpowers 0013  
                _sprintf 071C               ??_lcd_init 007B           lcd_put_cur@col 0029  
         lcd_put_cur@row 0027     end_of_initialization 07FC               ?_I2C_Start 0070  
             ?_I2C_Write 0070               ?_ADC_Setup 0070          ___lldiv@divisor 0070  
        ___lldiv@counter 007D         I2C_Master_Init@c 0020             _lcd_send_cmd 0490  
  __end_of_lcd_send_data 050E           _I2C_Multi_Send 03EF                _TRISCbits 0087  
             lcd_clear@i 007B       lcd_send_string@str 007B   __end_of_I2C_Multi_Send 041E  
          ??_lcd_put_cur 007B      lcd_send_data@data_l 0026      lcd_send_data@data_t 0020  
    lcd_send_data@data_u 0025              _adc_value_1 003A              _adc_value_2 0038  
      ??_lcd_send_string 007D      start_initialization 07F6        ??_I2C_Master_Init 0024  
            ??_I2C_Start 0070              ??_I2C_Write 0070              ??_ADC_Setup 0070  
        ?_I2C_Multi_Send 0071      __end_of_lcd_put_cur 0379                ___latbits 0002  
          __pcstackBANK0 0020        lcd_send_data@data 0024              sprintf@flag 0027  
            sprintf@prec 0028          lcd_send_cmd@cmd 0024         ___lwdiv@dividend 0072  
               ?___lldiv 0070                 ?___lwdiv 0070                 ?___lwmod 0077  
              _lcd_clear 0379                __pstrings 0003                 _I2C_IDLE 033E  
               _I2C_Stop 0335                 _ADC_Read 03C1         ___lwdiv@quotient 0074  
               ?_sprintf 0020              _lcd_put_cur 035B               ?_lcd_clear 0070  
             _ADCON0bits 001F              __stringbase 0012            I2C_Write@Data 0070  
        _lcd_send_string 039B       __end_of__stringtab 0013               sprintf@val 0029  
        _I2C_Master_Init 041E          ___lwdiv@divisor 0070          ___lwdiv@counter 0076  
               __ptext10 0335                 __ptext11 032C                 __ptext12 03EF  
               __ptext13 034B                 __ptext14 033E                 __ptext15 041E  
               __ptext16 0552                 __ptext17 0323                 __ptext18 03C1  
               _lcd_init 05B8         ??_I2C_Multi_Send 0075              ??_lcd_clear 007B  
               main@str1 0034                 main@str2 0030                sprintf@ap 0026  
              sprintf@sp 002B         ___lwmod@dividend 0079         ___lldiv@dividend 0074  
__end_of_lcd_send_string 03C1                stringcode 000D  __end_of_I2C_Master_Init 0456  
          _lcd_send_data 04CF                 sprintf@c 002C                 sprintf@f 0020  
       ___lldiv@quotient 0079          ___lwmod@divisor 0077          ___lwmod@counter 007B  
               stringdir 000D                 stringtab 0003              _SSPCON2bits 0091  
