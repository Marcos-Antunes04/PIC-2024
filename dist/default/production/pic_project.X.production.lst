

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Jun 12 11:42:28 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30     0000                     
    31                           ; Generated 22/03/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65     0000                     	;# 
    66     0001                     	;# 
    67     0002                     	;# 
    68     0003                     	;# 
    69     0004                     	;# 
    70     0005                     	;# 
    71     0006                     	;# 
    72     0007                     	;# 
    73     0008                     	;# 
    74     0009                     	;# 
    75     000A                     	;# 
    76     000B                     	;# 
    77     000C                     	;# 
    78     000D                     	;# 
    79     000E                     	;# 
    80     000E                     	;# 
    81     000F                     	;# 
    82     0010                     	;# 
    83     0011                     	;# 
    84     0012                     	;# 
    85     0013                     	;# 
    86     0014                     	;# 
    87     0015                     	;# 
    88     0015                     	;# 
    89     0016                     	;# 
    90     0017                     	;# 
    91     0018                     	;# 
    92     0019                     	;# 
    93     001A                     	;# 
    94     001B                     	;# 
    95     001B                     	;# 
    96     001C                     	;# 
    97     001D                     	;# 
    98     001E                     	;# 
    99     001F                     	;# 
   100     0081                     	;# 
   101     0085                     	;# 
   102     0086                     	;# 
   103     0087                     	;# 
   104     0088                     	;# 
   105     0089                     	;# 
   106     008C                     	;# 
   107     008D                     	;# 
   108     008E                     	;# 
   109     0091                     	;# 
   110     0092                     	;# 
   111     0093                     	;# 
   112     0094                     	;# 
   113     0098                     	;# 
   114     0099                     	;# 
   115     009C                     	;# 
   116     009D                     	;# 
   117     009E                     	;# 
   118     009F                     	;# 
   119     010C                     	;# 
   120     010D                     	;# 
   121     010E                     	;# 
   122     010F                     	;# 
   123     018C                     	;# 
   124     018D                     	;# 
   125     0000                     	;# 
   126     0001                     	;# 
   127     0002                     	;# 
   128     0003                     	;# 
   129     0004                     	;# 
   130     0005                     	;# 
   131     0006                     	;# 
   132     0007                     	;# 
   133     0008                     	;# 
   134     0009                     	;# 
   135     000A                     	;# 
   136     000B                     	;# 
   137     000C                     	;# 
   138     000D                     	;# 
   139     000E                     	;# 
   140     000E                     	;# 
   141     000F                     	;# 
   142     0010                     	;# 
   143     0011                     	;# 
   144     0012                     	;# 
   145     0013                     	;# 
   146     0014                     	;# 
   147     0015                     	;# 
   148     0015                     	;# 
   149     0016                     	;# 
   150     0017                     	;# 
   151     0018                     	;# 
   152     0019                     	;# 
   153     001A                     	;# 
   154     001B                     	;# 
   155     001B                     	;# 
   156     001C                     	;# 
   157     001D                     	;# 
   158     001E                     	;# 
   159     001F                     	;# 
   160     0081                     	;# 
   161     0085                     	;# 
   162     0086                     	;# 
   163     0087                     	;# 
   164     0088                     	;# 
   165     0089                     	;# 
   166     008C                     	;# 
   167     008D                     	;# 
   168     008E                     	;# 
   169     0091                     	;# 
   170     0092                     	;# 
   171     0093                     	;# 
   172     0094                     	;# 
   173     0098                     	;# 
   174     0099                     	;# 
   175     009C                     	;# 
   176     009D                     	;# 
   177     009E                     	;# 
   178     009F                     	;# 
   179     010C                     	;# 
   180     010D                     	;# 
   181     010E                     	;# 
   182     010F                     	;# 
   183     018C                     	;# 
   184     018D                     	;# 
   185                           
   186                           	psect	strings
   187     0003                     __pstrings:
   188     0003                     stringtab:
   189     0003                     __stringtab:
   190                           
   191                           ;	String table - string pointers are 1 byte each
   192     0003  1BFF               	btfsc	btemp+1,7
   193     0004  280D               	ljmp	stringcode
   194     0005  1383               	bcf	3,7
   195     0006  187F               	btfsc	btemp+1,0
   196     0007  1783               	bsf	3,7
   197     0008  0800               	movf	0,w
   198     0009  0A84               	incf	4,f
   199     000A  1903               	skipnz
   200     000B  0AFF               	incf	btemp+1,f
   201     000C  0008               	return
   202     000D                     stringcode:
   203     000D                     stringdir:
   204     000D  3000               	movlw	high stringdir
   205     000E  008A               	movwf	10
   206     000F  0804               	movf	4,w
   207     0010  0A84               	incf	4,f
   208     0011  0782               	addwf	2,f
   209     0012                     __stringbase:
   210     0012  3400               	retlw	0
   211     0013                     __end_of__stringtab:
   212     0013                     _dpowers:
   213     0013  3401               	retlw	1
   214     0014  3400               	retlw	0
   215     0015  340A               	retlw	10
   216     0016  3400               	retlw	0
   217     0017  3464               	retlw	100
   218     0018  3400               	retlw	0
   219     0019  34E8               	retlw	232
   220     001A  3403               	retlw	3
   221     001B  3410               	retlw	16
   222     001C  3427               	retlw	39
   223     001D                     __end_of_dpowers:
   224     0008                     _PORTD	set	8
   225     001E                     _ADRESH	set	30
   226     001F                     _ADCON0bits	set	31
   227     001F                     _ADCON0	set	31
   228     0013                     _SSPBUF	set	19
   229     0014                     _SSPCON	set	20
   230     0006                     _PORTB	set	6
   231     00FA                     _GO_DONE	set	250
   232     0063                     _SSPIF	set	99
   233     0088                     _TRISD	set	136
   234     0086                     _TRISB	set	134
   235     0085                     _TRISA	set	133
   236     009E                     _ADRESL	set	158
   237     009F                     _ADCON1	set	159
   238     0091                     _SSPCON2bits	set	145
   239     0087                     _TRISCbits	set	135
   240     0093                     _SSPADD	set	147
   241     0094                     _SSPSTAT	set	148
   242     0091                     _SSPCON2	set	145
   243     048E                     _ACKSTAT	set	1166
   244     001D                     STR_1:
   245     001D  3441               	retlw	65	;'A'
   246     001E  3443               	retlw	67	;'C'
   247     001F  3445               	retlw	69	;'E'
   248     0020  344C               	retlw	76	;'L'
   249     0021  3445               	retlw	69	;'E'
   250     0022  3452               	retlw	82	;'R'
   251     0023  344F               	retlw	79	;'O'
   252     0024  344D               	retlw	77	;'M'
   253     0025  3445               	retlw	69	;'E'
   254     0026  3454               	retlw	84	;'T'
   255     0027  3452               	retlw	82	;'R'
   256     0028  344F               	retlw	79	;'O'
   257     0029  3400               	retlw	0
   258     002A                     STR_3:
   259     002A  3441               	retlw	65	;'A'
   260     002B  346E               	retlw	110	;'n'
   261     002C  3464               	retlw	100	;'d'
   262     002D  3420               	retlw	32	;' '
   263     002E  344D               	retlw	77	;'M'
   264     002F  3461               	retlw	97	;'a'
   265     0030  3474               	retlw	116	;'t'
   266     0031  347A               	retlw	122	;'z'
   267     0032  3400               	retlw	0
   268     0033                     STR_2:
   269     0033  3441               	retlw	65	;'A'
   270     0034  346E               	retlw	110	;'n'
   271     0035  3474               	retlw	116	;'t'
   272     0036  3475               	retlw	117	;'u'
   273     0037  346E               	retlw	110	;'n'
   274     0038  3465               	retlw	101	;'e'
   275     0039  3473               	retlw	115	;'s'
   276     003A  3400               	retlw	0
   277     003B                     STR_4:
   278     003B  3425               	retlw	37	;'%'
   279     003C  3464               	retlw	100	;'d'
   280     003D  3400               	retlw	0
   281     003B                     
   282                           	psect	cinit
   283     07F6                     start_initialization:	
   284                           ; #config settings
   285                           
   286     07F6                     __initialization:
   287                           
   288                           ; Clear objects allocated to BANK0
   289     07F6  1283               	bcf	3,5	;RP0=0, select bank0
   290     07F7  1303               	bcf	3,6	;RP1=0, select bank0
   291     07F8  01B8               	clrf	__pbssBANK0& (0+127)
   292     07F9  01B9               	clrf	(__pbssBANK0+1)& (0+127)
   293     07FA  01BA               	clrf	(__pbssBANK0+2)& (0+127)
   294     07FB  01BB               	clrf	(__pbssBANK0+3)& (0+127)
   295     07FC                     end_of_initialization:	
   296                           ;End of C runtime variable initialization code
   297                           
   298     07FC                     __end_of__initialization:
   299     07FC  0183               	clrf	3
   300     07FD  120A  118A  2EF6   	ljmp	_main	;jump to C main() function
   301                           
   302                           	psect	bssBANK0
   303     0038                     __pbssBANK0:
   304     0038                     _adc_value_2:
   305     0038                     	ds	2
   306     003A                     _adc_value_1:
   307     003A                     	ds	2
   308                           
   309                           	psect	cstackCOMMON
   310     0070                     __pcstackCOMMON:
   311     0070                     ?_I2C_IDLE:
   312     0070                     ??_I2C_IDLE:	
   313                           ; 1 bytes @ 0x0
   314                           
   315     0070                     ?_I2C_Start:	
   316                           ; 1 bytes @ 0x0
   317                           
   318     0070                     ??_I2C_Start:	
   319                           ; 1 bytes @ 0x0
   320                           
   321     0070                     ?_I2C_Stop:	
   322                           ; 1 bytes @ 0x0
   323                           
   324     0070                     ??_I2C_Stop:	
   325                           ; 1 bytes @ 0x0
   326                           
   327     0070                     ?_I2C_Write:	
   328                           ; 1 bytes @ 0x0
   329                           
   330     0070                     ??_I2C_Write:	
   331                           ; 1 bytes @ 0x0
   332                           
   333     0070                     ?_ADC_Setup:	
   334                           ; 1 bytes @ 0x0
   335                           
   336     0070                     ??_ADC_Setup:	
   337                           ; 1 bytes @ 0x0
   338                           
   339     0070                     ?_lcd_send_cmd:	
   340                           ; 1 bytes @ 0x0
   341                           
   342     0070                     ?_lcd_send_data:	
   343                           ; 1 bytes @ 0x0
   344                           
   345     0070                     ?_lcd_clear:	
   346                           ; 1 bytes @ 0x0
   347                           
   348     0070                     ?_lcd_init:	
   349                           ; 1 bytes @ 0x0
   350                           
   351     0070                     ?_main:	
   352                           ; 1 bytes @ 0x0
   353                           
   354     0070                     ?_ADC_Read:	
   355                           ; 1 bytes @ 0x0
   356                           
   357     0070                     ?___lwdiv:	
   358                           ; 2 bytes @ 0x0
   359                           
   360     0070                     ?___lldiv:	
   361                           ; 2 bytes @ 0x0
   362                           
   363     0070                     I2C_Write@Data:	
   364                           ; 4 bytes @ 0x0
   365                           
   366     0070                     I2C_Multi_Send@cmd:	
   367                           ; 1 bytes @ 0x0
   368                           
   369     0070                     ADC_Read@channel:	
   370                           ; 1 bytes @ 0x0
   371                           
   372     0070                     ___lwdiv@divisor:	
   373                           ; 2 bytes @ 0x0
   374                           
   375     0070                     ___lldiv@divisor:	
   376                           ; 2 bytes @ 0x0
   377                           
   378                           
   379                           ; 4 bytes @ 0x0
   380     0070                     	ds	1
   381     0071                     ?_I2C_Multi_Send:
   382     0071                     I2C_Multi_Send@address:	
   383                           ; 1 bytes @ 0x1
   384                           
   385                           
   386                           ; 1 bytes @ 0x1
   387     0071                     	ds	1
   388     0072                     ??_ADC_Read:
   389     0072                     I2C_Multi_Send@data:	
   390                           ; 1 bytes @ 0x2
   391                           
   392     0072                     ___lwdiv@dividend:	
   393                           ; 1 bytes @ 0x2
   394                           
   395                           
   396                           ; 2 bytes @ 0x2
   397     0072                     	ds	1
   398     0073                     I2C_Multi_Send@size:
   399                           
   400                           ; 2 bytes @ 0x3
   401     0073                     	ds	1
   402     0074                     ??___lwdiv:
   403     0074                     ___lwdiv@quotient:	
   404                           ; 1 bytes @ 0x4
   405                           
   406     0074                     ___lldiv@dividend:	
   407                           ; 2 bytes @ 0x4
   408                           
   409                           
   410                           ; 4 bytes @ 0x4
   411     0074                     	ds	1
   412     0075                     ??_I2C_Multi_Send:
   413                           
   414                           ; 1 bytes @ 0x5
   415     0075                     	ds	1
   416     0076                     I2C_Multi_Send@send:
   417     0076                     ___lwdiv@counter:	
   418                           ; 1 bytes @ 0x6
   419                           
   420                           
   421                           ; 1 bytes @ 0x6
   422     0076                     	ds	1
   423     0077                     ?___lwmod:
   424     0077                     I2C_Multi_Send@n:	
   425                           ; 2 bytes @ 0x7
   426                           
   427     0077                     ___lwmod@divisor:	
   428                           ; 2 bytes @ 0x7
   429                           
   430                           
   431                           ; 2 bytes @ 0x7
   432     0077                     	ds	1
   433     0078                     ??___lldiv:
   434                           
   435                           ; 1 bytes @ 0x8
   436     0078                     	ds	1
   437     0079                     ??_lcd_send_cmd:
   438     0079                     ??_lcd_send_data:	
   439                           ; 1 bytes @ 0x9
   440                           
   441     0079                     ___lwmod@dividend:	
   442                           ; 1 bytes @ 0x9
   443                           
   444     0079                     ___lldiv@quotient:	
   445                           ; 2 bytes @ 0x9
   446                           
   447                           
   448                           ; 4 bytes @ 0x9
   449     0079                     	ds	2
   450     007B                     ??_lcd_clear:
   451     007B                     ??_lcd_put_cur:	
   452                           ; 1 bytes @ 0xB
   453                           
   454     007B                     ??_lcd_init:	
   455                           ; 1 bytes @ 0xB
   456                           
   457     007B                     ?_lcd_send_string:	
   458                           ; 1 bytes @ 0xB
   459                           
   460     007B                     ??___lwmod:	
   461                           ; 1 bytes @ 0xB
   462                           
   463     007B                     ___lwmod@counter:	
   464                           ; 1 bytes @ 0xB
   465                           
   466     007B                     lcd_clear@i:	
   467                           ; 1 bytes @ 0xB
   468                           
   469     007B                     lcd_send_string@str:	
   470                           ; 2 bytes @ 0xB
   471                           
   472                           
   473                           ; 2 bytes @ 0xB
   474     007B                     	ds	2
   475     007D                     ??_lcd_send_string:
   476     007D                     ___lldiv@counter:	
   477                           ; 1 bytes @ 0xD
   478                           
   479                           
   480                           ; 1 bytes @ 0xD
   481     007D                     	ds	1
   482                           
   483                           	psect	cstackBANK0
   484     0020                     __pcstackBANK0:
   485     0020                     ?_I2C_Master_Init:
   486     0020                     ?_sprintf:	
   487                           ; 1 bytes @ 0x0
   488                           
   489     0020                     sprintf@f:	
   490                           ; 2 bytes @ 0x0
   491                           
   492     0020                     I2C_Master_Init@c:	
   493                           ; 1 bytes @ 0x0
   494                           
   495     0020                     lcd_send_cmd@data_t:	
   496                           ; 4 bytes @ 0x0
   497                           
   498     0020                     lcd_send_data@data_t:	
   499                           ; 4 bytes @ 0x0
   500                           
   501                           
   502                           ; 4 bytes @ 0x0
   503     0020                     	ds	3
   504     0023                     ??_sprintf:
   505                           
   506                           ; 1 bytes @ 0x3
   507     0023                     	ds	1
   508     0024                     ??_I2C_Master_Init:
   509     0024                     lcd_send_cmd@cmd:	
   510                           ; 1 bytes @ 0x4
   511                           
   512     0024                     lcd_send_data@data:	
   513                           ; 1 bytes @ 0x4
   514                           
   515                           
   516                           ; 1 bytes @ 0x4
   517     0024                     	ds	1
   518     0025                     lcd_send_cmd@data_u:
   519     0025                     lcd_send_data@data_u:	
   520                           ; 1 bytes @ 0x5
   521                           
   522                           
   523                           ; 1 bytes @ 0x5
   524     0025                     	ds	1
   525     0026                     lcd_send_cmd@data_l:
   526     0026                     lcd_send_data@data_l:	
   527                           ; 1 bytes @ 0x6
   528                           
   529     0026                     sprintf@ap:	
   530                           ; 1 bytes @ 0x6
   531                           
   532                           
   533                           ; 1 bytes @ 0x6
   534     0026                     	ds	1
   535     0027                     ?_lcd_put_cur:
   536     0027                     sprintf@flag:	
   537                           ; 1 bytes @ 0x7
   538                           
   539     0027                     lcd_put_cur@row:	
   540                           ; 1 bytes @ 0x7
   541                           
   542                           
   543                           ; 2 bytes @ 0x7
   544     0027                     	ds	1
   545     0028                     sprintf@prec:
   546                           
   547                           ; 1 bytes @ 0x8
   548     0028                     	ds	1
   549     0029                     lcd_put_cur@col:
   550     0029                     sprintf@val:	
   551                           ; 2 bytes @ 0x9
   552                           
   553                           
   554                           ; 2 bytes @ 0x9
   555     0029                     	ds	2
   556     002B                     sprintf@sp:
   557                           
   558                           ; 1 bytes @ 0xB
   559     002B                     	ds	1
   560     002C                     sprintf@c:
   561                           
   562                           ; 1 bytes @ 0xC
   563     002C                     	ds	1
   564     002D                     ??_main:
   565                           
   566                           ; 1 bytes @ 0xD
   567     002D                     	ds	3
   568     0030                     main@str1:
   569                           
   570                           ; 4 bytes @ 0x10
   571     0030                     	ds	4
   572     0034                     main@str2:
   573                           
   574                           ; 4 bytes @ 0x14
   575     0034                     	ds	4
   576                           
   577                           	psect	maintext
   578     06F6                     __pmaintext:	
   579 ;;
   580 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   581 ;;
   582 ;; *************** function _main *****************
   583 ;; Defined at:
   584 ;;		line 220 in file "newmain.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;  str2            4   20[BANK0 ] unsigned char [4]
   589 ;;  str1            4   16[BANK0 ] unsigned char [4]
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : B00/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   599 ;;      Params:         0       0       0       0       0
   600 ;;      Locals:         0       8       0       0       0
   601 ;;      Temps:          0       3       0       0       0
   602 ;;      Totals:         0      11       0       0       0
   603 ;;Total ram usage:       11 bytes
   604 ;; Hardware stack levels required when called: 5
   605 ;; This function calls:
   606 ;;		_ADC_Read
   607 ;;		_ADC_Setup
   608 ;;		_I2C_Master_Init
   609 ;;		_lcd_clear
   610 ;;		_lcd_init
   611 ;;		_lcd_put_cur
   612 ;;		_lcd_send_string
   613 ;;		_sprintf
   614 ;; This function is called by:
   615 ;;		Startup code after reset
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619     06F6                     _main:	
   620                           ;psect for function _main
   621                           
   622     06F6                     l1511:	
   623                           ;incstack = 0
   624                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   625                           
   626                           
   627                           ;newmain.c: 222:   lcd_put_cur(1,0);;newmain.c: 223:   lcd_send_string("And Matz");;newm
      +                          ain.c: 225: 
   628     06F6  30FF               	movlw	255
   629     06F7  1683               	bsf	3,5	;RP0=1, select bank1
   630     06F8  1303               	bcf	3,6	;RP1=0, select bank1
   631     06F9  0085               	movwf	5	;volatile
   632     06FA                     l1513:
   633                           
   634                           ;newmain.c: 226:   while(1){
   635     06FA  0186               	clrf	6	;volatile
   636     06FB                     l1515:
   637                           
   638                           ;newmain.c: 227: 
   639     06FB  0188               	clrf	8	;volatile
   640     06FC                     l1517:
   641                           
   642                           ;newmain.c: 228:       lcd_clear();
   643     06FC  1283               	bcf	3,5	;RP0=0, select bank0
   644     06FD  1303               	bcf	3,6	;RP1=0, select bank0
   645     06FE  0188               	clrf	8	;volatile
   646     06FF                     l1519:
   647                           
   648                           ;newmain.c: 229:       adc_value_1 = ADC_Read(0);
   649     06FF  0186               	clrf	6	;volatile
   650     0700                     l1521:
   651                           
   652                           ;newmain.c: 231: 
   653     0700  3000               	movlw	0
   654     0701  00A3               	movwf	I2C_Master_Init@c+3
   655     0702  3001               	movlw	1
   656     0703  00A2               	movwf	I2C_Master_Init@c+2
   657     0704  3086               	movlw	134
   658     0705  00A1               	movwf	I2C_Master_Init@c+1
   659     0706  30A0               	movlw	160
   660     0707  00A0               	movwf	I2C_Master_Init@c
   661     0708  120A  118A  23F2  120A  118A  	fcall	_I2C_Master_Init
   662     070D                     l1523:
   663                           
   664                           ;newmain.c: 233:       sprintf(str2,"%d",adc_value_2);
   665     070D  120A  118A  22F7  120A  118A  	fcall	_ADC_Setup
   666     0712                     l1525:
   667                           
   668                           ;newmain.c: 234:       lcd_put_cur(0,0);
   669     0712  120A  118A  258D  120A  118A  	fcall	_lcd_init
   670     0717                     l1527:
   671                           
   672                           ;newmain.c: 235:       lcd_send_string(str1);
   673     0717  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   674     0718  00FB               	movwf	lcd_send_string@str
   675     0719  3080               	movlw	128
   676     071A  00FC               	movwf	lcd_send_string@str+1
   677     071B  120A  118A  236F  120A  118A  	fcall	_lcd_send_string
   678                           
   679                           ;newmain.c: 236:       _delay((unsigned long)((1)*(20000000/4000.0)));
   680     0720  3027               	movlw	39
   681     0721  1283               	bcf	3,5	;RP0=0, select bank0
   682     0722  1303               	bcf	3,6	;RP1=0, select bank0
   683     0723  00AF               	movwf	??_main+2
   684     0724  300D               	movlw	13
   685     0725  00AE               	movwf	??_main+1
   686     0726  3025               	movlw	37
   687     0727  00AD               	movwf	??_main
   688     0728                     u807:
   689     0728  0BAD               	decfsz	??_main,f
   690     0729  2F28               	goto	u807
   691     072A  0BAE               	decfsz	??_main+1,f
   692     072B  2F28               	goto	u807
   693     072C  0BAF               	decfsz	??_main+2,f
   694     072D  2F28               	goto	u807
   695     072E  2F2F               	nop2
   696     072F                     l1529:
   697                           
   698                           ;newmain.c: 237:       lcd_put_cur(1,0);
   699     072F  120A  118A  234D  120A  118A  	fcall	_lcd_clear
   700     0734                     l1531:
   701                           
   702                           ;newmain.c: 238:       lcd_send_string(str2);
   703     0734  3000               	movlw	0
   704     0735  1283               	bcf	3,5	;RP0=0, select bank0
   705     0736  1303               	bcf	3,6	;RP1=0, select bank0
   706     0737  00A7               	movwf	lcd_put_cur@row
   707     0738  00A8               	movwf	lcd_put_cur@row+1
   708     0739  3000               	movlw	0
   709     073A  00A9               	movwf	lcd_put_cur@col
   710     073B  00AA               	movwf	lcd_put_cur@col+1
   711     073C  120A  118A  232F  120A  118A  	fcall	_lcd_put_cur
   712     0741                     l1533:
   713                           
   714                           ;newmain.c: 239:       _delay((unsigned long)((200)*(20000000/4000.0)));
   715     0741  3021               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   716     0742  00FB               	movwf	lcd_send_string@str
   717     0743  3080               	movlw	128
   718     0744  00FC               	movwf	lcd_send_string@str+1
   719     0745  120A  118A  236F  120A  118A  	fcall	_lcd_send_string
   720     074A                     l1535:
   721                           
   722                           ;newmain.c: 240:   }
   723     074A  3001               	movlw	1
   724     074B  1283               	bcf	3,5	;RP0=0, select bank0
   725     074C  1303               	bcf	3,6	;RP1=0, select bank0
   726     074D  00A7               	movwf	lcd_put_cur@row
   727     074E  3000               	movlw	0
   728     074F  00A8               	movwf	lcd_put_cur@row+1
   729     0750  3000               	movlw	0
   730     0751  00A9               	movwf	lcd_put_cur@col
   731     0752  00AA               	movwf	lcd_put_cur@col+1
   732     0753  120A  118A  232F  120A  118A  	fcall	_lcd_put_cur
   733     0758                     l1537:
   734                           
   735                           ;newmain.c: 241: }
   736     0758  3018               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   737     0759  00FB               	movwf	lcd_send_string@str
   738     075A  3080               	movlw	128
   739     075B  00FC               	movwf	lcd_send_string@str+1
   740     075C  120A  118A  236F  120A  118A  	fcall	_lcd_send_string
   741     0761                     l1539:
   742     0761  3027               	movlw	39
   743     0762  1283               	bcf	3,5	;RP0=0, select bank0
   744     0763  1303               	bcf	3,6	;RP1=0, select bank0
   745     0764  00AF               	movwf	??_main+2
   746     0765  300D               	movlw	13
   747     0766  00AE               	movwf	??_main+1
   748     0767  3025               	movlw	37
   749     0768  00AD               	movwf	??_main
   750     0769                     u817:
   751     0769  0BAD               	decfsz	??_main,f
   752     076A  2F69               	goto	u817
   753     076B  0BAE               	decfsz	??_main+1,f
   754     076C  2F69               	goto	u817
   755     076D  0BAF               	decfsz	??_main+2,f
   756     076E  2F69               	goto	u817
   757     076F  2F70               	nop2
   758     0770                     l138:
   759     0770  120A  118A  234D  120A  118A  	fcall	_lcd_clear
   760     0775                     l1541:
   761     0775  3000               	movlw	0
   762     0776  00F0               	movwf	ADC_Read@channel
   763     0777  00F1               	movwf	ADC_Read@channel+1
   764     0778  120A  118A  2395  120A  118A  	fcall	_ADC_Read
   765     077D  0871               	movf	?_ADC_Read+1,w
   766     077E  1283               	bcf	3,5	;RP0=0, select bank0
   767     077F  1303               	bcf	3,6	;RP1=0, select bank0
   768     0780  00BB               	movwf	_adc_value_1+1
   769     0781  0870               	movf	?_ADC_Read,w
   770     0782  00BA               	movwf	_adc_value_1
   771     0783                     l1543:
   772     0783  3001               	movlw	1
   773     0784  00F0               	movwf	ADC_Read@channel
   774     0785  3000               	movlw	0
   775     0786  00F1               	movwf	ADC_Read@channel+1
   776     0787  120A  118A  2395  120A  118A  	fcall	_ADC_Read
   777     078C  0871               	movf	?_ADC_Read+1,w
   778     078D  1283               	bcf	3,5	;RP0=0, select bank0
   779     078E  1303               	bcf	3,6	;RP1=0, select bank0
   780     078F  00B9               	movwf	_adc_value_2+1
   781     0790  0870               	movf	?_ADC_Read,w
   782     0791  00B8               	movwf	_adc_value_2
   783     0792  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   784     0793  00A0               	movwf	sprintf@f
   785     0794  083B               	movf	_adc_value_1+1,w
   786     0795  00A2               	movwf	?_sprintf+2
   787     0796  083A               	movf	_adc_value_1,w
   788     0797  00A1               	movwf	?_sprintf+1
   789     0798  3030               	movlw	(low (main@str1| 0))& (0+255)
   790     0799  120A  118A  261C  120A  118A  	fcall	_sprintf
   791     079E  3029               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   792     079F  1283               	bcf	3,5	;RP0=0, select bank0
   793     07A0  1303               	bcf	3,6	;RP1=0, select bank0
   794     07A1  00A0               	movwf	sprintf@f
   795     07A2  0839               	movf	_adc_value_2+1,w
   796     07A3  00A2               	movwf	?_sprintf+2
   797     07A4  0838               	movf	_adc_value_2,w
   798     07A5  00A1               	movwf	?_sprintf+1
   799     07A6  3034               	movlw	(low (main@str2| 0))& (0+255)
   800     07A7  120A  118A  261C  120A  118A  	fcall	_sprintf
   801     07AC                     l1545:
   802     07AC  3000               	movlw	0
   803     07AD  1283               	bcf	3,5	;RP0=0, select bank0
   804     07AE  1303               	bcf	3,6	;RP1=0, select bank0
   805     07AF  00A7               	movwf	lcd_put_cur@row
   806     07B0  00A8               	movwf	lcd_put_cur@row+1
   807     07B1  3000               	movlw	0
   808     07B2  00A9               	movwf	lcd_put_cur@col
   809     07B3  00AA               	movwf	lcd_put_cur@col+1
   810     07B4  120A  118A  232F  120A  118A  	fcall	_lcd_put_cur
   811     07B9                     l1547:
   812     07B9  3030               	movlw	(low (main@str1| 0))& (0+255)
   813     07BA  00FB               	movwf	lcd_send_string@str
   814     07BB  3000               	movlw	0
   815     07BC  00FC               	movwf	lcd_send_string@str+1
   816     07BD  120A  118A  236F  120A  118A  	fcall	_lcd_send_string
   817     07C2                     l1549:
   818     07C2  3007               	movlw	7
   819     07C3  1283               	bcf	3,5	;RP0=0, select bank0
   820     07C4  1303               	bcf	3,6	;RP1=0, select bank0
   821     07C5  00AE               	movwf	??_main+1
   822     07C6  307C               	movlw	124
   823     07C7  00AD               	movwf	??_main
   824     07C8                     u827:
   825     07C8  0BAD               	decfsz	??_main,f
   826     07C9  2FC8               	goto	u827
   827     07CA  0BAE               	decfsz	??_main+1,f
   828     07CB  2FC8               	goto	u827
   829     07CC  0000               	nop
   830     07CD                     l1551:
   831     07CD  3001               	movlw	1
   832     07CE  1283               	bcf	3,5	;RP0=0, select bank0
   833     07CF  1303               	bcf	3,6	;RP1=0, select bank0
   834     07D0  00A7               	movwf	lcd_put_cur@row
   835     07D1  3000               	movlw	0
   836     07D2  00A8               	movwf	lcd_put_cur@row+1
   837     07D3  3000               	movlw	0
   838     07D4  00A9               	movwf	lcd_put_cur@col
   839     07D5  00AA               	movwf	lcd_put_cur@col+1
   840     07D6  120A  118A  232F  120A  118A  	fcall	_lcd_put_cur
   841     07DB                     l1553:
   842     07DB  3034               	movlw	(low (main@str2| 0))& (0+255)
   843     07DC  00FB               	movwf	lcd_send_string@str
   844     07DD  3000               	movlw	0
   845     07DE  00FC               	movwf	lcd_send_string@str+1
   846     07DF  120A  118A  236F  120A  118A  	fcall	_lcd_send_string
   847     07E4                     l1555:
   848     07E4  3006               	movlw	6
   849     07E5  1283               	bcf	3,5	;RP0=0, select bank0
   850     07E6  1303               	bcf	3,6	;RP1=0, select bank0
   851     07E7  00AF               	movwf	??_main+2
   852     07E8  3013               	movlw	19
   853     07E9  00AE               	movwf	??_main+1
   854     07EA  30AD               	movlw	173
   855     07EB  00AD               	movwf	??_main
   856     07EC                     u837:
   857     07EC  0BAD               	decfsz	??_main,f
   858     07ED  2FEC               	goto	u837
   859     07EE  0BAE               	decfsz	??_main+1,f
   860     07EF  2FEC               	goto	u837
   861     07F0  0BAF               	decfsz	??_main+2,f
   862     07F1  2FEC               	goto	u837
   863     07F2  2F70               	goto	l138
   864     07F3  120A  118A  2800   	ljmp	start
   865     07F6                     __end_of_main:
   866                           
   867                           	psect	text1
   868     061C                     __ptext1:	
   869 ;; *************** function _sprintf *****************
   870 ;; Defined at:
   871 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;  sp              1    wreg     PTR unsigned char 
   874 ;;		 -> main@str2(4), main@str1(4), 
   875 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   876 ;;		 -> STR_5(3), STR_4(3), 
   877 ;; Auto vars:     Size  Location     Type
   878 ;;  sp              1   11[BANK0 ] PTR unsigned char 
   879 ;;		 -> main@str2(4), main@str1(4), 
   880 ;;  tmpval          4    0        struct .
   881 ;;  val             2    9[BANK0 ] unsigned int 
   882 ;;  cp              2    0        PTR const unsigned char 
   883 ;;  len             2    0        unsigned int 
   884 ;;  c               1   12[BANK0 ] unsigned char 
   885 ;;  prec            1    8[BANK0 ] char 
   886 ;;  flag            1    7[BANK0 ] unsigned char 
   887 ;;  ap              1    6[BANK0 ] PTR void [1]
   888 ;;		 -> ?_sprintf(2), 
   889 ;; Return value:  Size  Location     Type
   890 ;;                  2    0[BANK0 ] int 
   891 ;; Registers used:
   892 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   898 ;;      Params:         0       3       0       0       0
   899 ;;      Locals:         0       7       0       0       0
   900 ;;      Temps:          0       3       0       0       0
   901 ;;      Totals:         0      13       0       0       0
   902 ;;Total ram usage:       13 bytes
   903 ;; Hardware stack levels used: 1
   904 ;; Hardware stack levels required when called: 1
   905 ;; This function calls:
   906 ;;		___lwdiv
   907 ;;		___lwmod
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913     061C                     _sprintf:	
   914                           ;psect for function _sprintf
   915                           
   916                           
   917                           ;incstack = 0
   918                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   919                           ;sprintf@sp stored from wreg
   920     061C  1283               	bcf	3,5	;RP0=0, select bank0
   921     061D  1303               	bcf	3,6	;RP1=0, select bank0
   922     061E  00AB               	movwf	sprintf@sp
   923     061F                     l1431:
   924                           
   925                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   926     061F  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   927     0620  00A6               	movwf	sprintf@ap
   928                           
   929                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   930     0621  2EE1               	goto	l1485
   931     0622                     l1433:
   932                           
   933                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   934     0622  3025               	movlw	37
   935     0623  062C               	xorwf	sprintf@c,w
   936     0624  1903               	btfsc	3,2
   937     0625  2E27               	goto	u731
   938     0626  2E28               	goto	u730
   939     0627                     u731:
   940     0627  2E32               	goto	l1439
   941     0628                     u730:
   942     0628                     l1435:
   943                           
   944                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   945     0628  082B               	movf	sprintf@sp,w
   946     0629  0084               	movwf	4
   947     062A  082C               	movf	sprintf@c,w
   948     062B  1383               	bcf	3,7	;select IRP bank0
   949     062C  0080               	movwf	0
   950     062D                     l1437:
   951     062D  3001               	movlw	1
   952     062E  00FF               	movwf	btemp+1
   953     062F  087F               	movf	btemp+1,w
   954     0630  07AB               	addwf	sprintf@sp,f
   955                           
   956                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
   957     0631  2EE1               	goto	l1485
   958     0632                     l1439:
   959                           
   960                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   961     0632  01A7               	clrf	sprintf@flag
   962     0633                     l1443:	
   963                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
   964                           
   965     0633  3001               	movlw	1
   966     0634  07A0               	addwf	sprintf@f,f
   967     0635  30FF               	movlw	-1
   968     0636  0720               	addwf	sprintf@f,w
   969     0637  0084               	movwf	4
   970     0638  120A  118A  200D  120A  118A  	fcall	stringdir
   971     063D  00AC               	movwf	sprintf@c
   972     063E  00A3               	movwf	??_sprintf
   973     063F  01A4               	clrf	??_sprintf+1
   974                           
   975                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   976                           ; Switch size 1, requested type "simple"
   977                           ; Number of cases is 1, Range of values is 0 to 0
   978                           ; switch strategies available:
   979                           ; Name         Instructions Cycles
   980                           ; simple_byte            4     3 (average)
   981                           ; direct_byte           11     8 (fixed)
   982                           ; jumptable            260     6 (fixed)
   983                           ;	Chosen strategy is simple_byte
   984     0640  0824               	movf	??_sprintf+1,w
   985     0641  3A00               	xorlw	0	; case 0
   986     0642  1903               	skipnz
   987     0643  2E45               	goto	l1597
   988     0644  2EE1               	goto	l1485
   989     0645                     l1597:
   990                           
   991                           ; Switch size 1, requested type "simple"
   992                           ; Number of cases is 3, Range of values is 0 to 105
   993                           ; switch strategies available:
   994                           ; Name         Instructions Cycles
   995                           ; simple_byte           10     6 (average)
   996                           ; jumptable            260     6 (fixed)
   997                           ;	Chosen strategy is simple_byte
   998     0645  0823               	movf	??_sprintf,w
   999     0646  3A00               	xorlw	0	; case 0
  1000     0647  1903               	skipnz
  1001     0648  2EF1               	goto	l1487
  1002     0649  3A64               	xorlw	100	; case 100
  1003     064A  1903               	skipnz
  1004     064B  2E50               	goto	l1445
  1005     064C  3A0D               	xorlw	13	; case 105
  1006     064D  1903               	skipnz
  1007     064E  2E50               	goto	l1445
  1008     064F  2EE1               	goto	l1485
  1009     0650                     l1445:
  1010                           
  1011                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1012     0650  0826               	movf	sprintf@ap,w
  1013     0651  0084               	movwf	4
  1014     0652  1383               	bcf	3,7	;select IRP bank0
  1015     0653  0800               	movf	0,w
  1016     0654  00A9               	movwf	sprintf@val
  1017     0655  0A84               	incf	4,f
  1018     0656  0800               	movf	0,w
  1019     0657  00AA               	movwf	sprintf@val+1
  1020     0658                     l1447:
  1021     0658  3002               	movlw	2
  1022     0659  00FF               	movwf	btemp+1
  1023     065A  087F               	movf	btemp+1,w
  1024     065B  07A6               	addwf	sprintf@ap,f
  1025     065C                     l1449:
  1026                           
  1027                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1028     065C  1FAA               	btfss	sprintf@val+1,7
  1029     065D  2E5F               	goto	u741
  1030     065E  2E60               	goto	u740
  1031     065F                     u741:
  1032     065F  2E69               	goto	l1455
  1033     0660                     u740:
  1034     0660                     l1451:
  1035                           
  1036                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1037     0660  3003               	movlw	3
  1038     0661  00FF               	movwf	btemp+1
  1039     0662  087F               	movf	btemp+1,w
  1040     0663  04A7               	iorwf	sprintf@flag,f
  1041     0664                     l1453:
  1042                           
  1043                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1044     0664  09A9               	comf	sprintf@val,f
  1045     0665  09AA               	comf	sprintf@val+1,f
  1046     0666  0AA9               	incf	sprintf@val,f
  1047     0667  1903               	skipnz
  1048     0668  0AAA               	incf	sprintf@val+1,f
  1049     0669                     l1455:
  1050                           
  1051                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1052     0669  01AC               	clrf	sprintf@c
  1053     066A  0AAC               	incf	sprintf@c,f
  1054     066B                     l1461:
  1055                           
  1056                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1057     066B  082C               	movf	sprintf@c,w
  1058     066C  00A3               	movwf	??_sprintf
  1059     066D  0723               	addwf	??_sprintf,w
  1060     066E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1061     066F  0084               	movwf	4
  1062     0670  120A  118A  200D  120A  118A  	fcall	stringdir
  1063     0675  00A4               	movwf	??_sprintf+1
  1064     0676  120A  118A  200D  120A  118A  	fcall	stringdir
  1065     067B  00A5               	movwf	??_sprintf+2
  1066     067C  0825               	movf	??_sprintf+2,w
  1067     067D  022A               	subwf	sprintf@val+1,w
  1068     067E  1D03               	skipz
  1069     067F  2E82               	goto	u755
  1070     0680  0824               	movf	??_sprintf+1,w
  1071     0681  0229               	subwf	sprintf@val,w
  1072     0682                     u755:
  1073     0682  1803               	skipnc
  1074     0683  2E85               	goto	u751
  1075     0684  2E86               	goto	u750
  1076     0685                     u751:
  1077     0685  2E87               	goto	l1465
  1078     0686                     u750:
  1079     0686  2E91               	goto	l1469
  1080     0687                     l1465:
  1081     0687  3001               	movlw	1
  1082     0688  00FF               	movwf	btemp+1
  1083     0689  087F               	movf	btemp+1,w
  1084     068A  07AC               	addwf	sprintf@c,f
  1085     068B                     l1467:
  1086     068B  3005               	movlw	5
  1087     068C  062C               	xorwf	sprintf@c,w
  1088     068D  1D03               	btfss	3,2
  1089     068E  2E90               	goto	u761
  1090     068F  2E91               	goto	u760
  1091     0690                     u761:
  1092     0690  2E6B               	goto	l1461
  1093     0691                     u760:
  1094     0691                     l1469:
  1095                           
  1096                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1097     0691  0827               	movf	sprintf@flag,w
  1098     0692  3903               	andlw	3
  1099     0693  1903               	btfsc	3,2
  1100     0694  2E96               	goto	u771
  1101     0695  2E97               	goto	u770
  1102     0696                     u771:
  1103     0696  2EA0               	goto	l1475
  1104     0697                     u770:
  1105     0697                     l1471:
  1106                           
  1107                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1108     0697  082B               	movf	sprintf@sp,w
  1109     0698  0084               	movwf	4
  1110     0699  302D               	movlw	45
  1111     069A  1383               	bcf	3,7	;select IRP bank0
  1112     069B  0080               	movwf	0
  1113     069C                     l1473:
  1114     069C  3001               	movlw	1
  1115     069D  00FF               	movwf	btemp+1
  1116     069E  087F               	movf	btemp+1,w
  1117     069F  07AB               	addwf	sprintf@sp,f
  1118     06A0                     l1475:
  1119                           
  1120                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1121     06A0  082C               	movf	sprintf@c,w
  1122     06A1  00A8               	movwf	sprintf@prec
  1123                           
  1124                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1125     06A2  2ED8               	goto	l1483
  1126     06A3                     l1477:
  1127                           
  1128                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1129     06A3  300A               	movlw	10
  1130     06A4  00F7               	movwf	___lwmod@divisor
  1131     06A5  3000               	movlw	0
  1132     06A6  00F8               	movwf	___lwmod@divisor+1
  1133     06A7  0828               	movf	sprintf@prec,w
  1134     06A8  00A3               	movwf	??_sprintf
  1135     06A9  0723               	addwf	??_sprintf,w
  1136     06AA  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1137     06AB  0084               	movwf	4
  1138     06AC  120A  118A  200D  120A  118A  	fcall	stringdir
  1139     06B1  00F0               	movwf	___lwdiv@divisor
  1140     06B2  120A  118A  200D  120A  118A  	fcall	stringdir
  1141     06B7  00F1               	movwf	___lwdiv@divisor+1
  1142     06B8  082A               	movf	sprintf@val+1,w
  1143     06B9  00F3               	movwf	___lwdiv@dividend+1
  1144     06BA  0829               	movf	sprintf@val,w
  1145     06BB  00F2               	movwf	___lwdiv@dividend
  1146     06BC  120A  118A  24E3  120A  118A  	fcall	___lwdiv
  1147     06C1  0871               	movf	?___lwdiv+1,w
  1148     06C2  00FA               	movwf	___lwmod@dividend+1
  1149     06C3  0870               	movf	?___lwdiv,w
  1150     06C4  00F9               	movwf	___lwmod@dividend
  1151     06C5  120A  118A  242A  120A  118A  	fcall	___lwmod
  1152     06CA  0877               	movf	?___lwmod,w
  1153     06CB  3E30               	addlw	48
  1154     06CC  1283               	bcf	3,5	;RP0=0, select bank0
  1155     06CD  1303               	bcf	3,6	;RP1=0, select bank0
  1156     06CE  00AC               	movwf	sprintf@c
  1157     06CF                     l1479:
  1158                           
  1159                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1160     06CF  082B               	movf	sprintf@sp,w
  1161     06D0  0084               	movwf	4
  1162     06D1  082C               	movf	sprintf@c,w
  1163     06D2  1383               	bcf	3,7	;select IRP bank0
  1164     06D3  0080               	movwf	0
  1165     06D4                     l1481:
  1166     06D4  3001               	movlw	1
  1167     06D5  00FF               	movwf	btemp+1
  1168     06D6  087F               	movf	btemp+1,w
  1169     06D7  07AB               	addwf	sprintf@sp,f
  1170     06D8                     l1483:
  1171                           
  1172                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1173     06D8  30FF               	movlw	255
  1174     06D9  00FF               	movwf	btemp+1
  1175     06DA  087F               	movf	btemp+1,w
  1176     06DB  07A8               	addwf	sprintf@prec,f
  1177     06DC  0A28               	incf	sprintf@prec,w
  1178     06DD  1D03               	btfss	3,2
  1179     06DE  2EE0               	goto	u781
  1180     06DF  2EE1               	goto	u780
  1181     06E0                     u781:
  1182     06E0  2EA3               	goto	l1477
  1183     06E1                     u780:
  1184     06E1                     l1485:
  1185                           
  1186                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1187     06E1  3001               	movlw	1
  1188     06E2  07A0               	addwf	sprintf@f,f
  1189     06E3  30FF               	movlw	-1
  1190     06E4  0720               	addwf	sprintf@f,w
  1191     06E5  0084               	movwf	4
  1192     06E6  120A  118A  200D  120A  118A  	fcall	stringdir
  1193     06EB  00AC               	movwf	sprintf@c
  1194     06EC  082C               	movf	sprintf@c,w
  1195     06ED  1D03               	btfss	3,2
  1196     06EE  2EF0               	goto	u791
  1197     06EF  2EF1               	goto	u790
  1198     06F0                     u791:
  1199     06F0  2E22               	goto	l1433
  1200     06F1                     u790:
  1201     06F1                     l1487:
  1202                           
  1203                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1204     06F1  082B               	movf	sprintf@sp,w
  1205     06F2  0084               	movwf	4
  1206     06F3  1383               	bcf	3,7	;select IRP bank0
  1207     06F4  0180               	clrf	0
  1208     06F5                     l251:
  1209     06F5  0008               	return
  1210     06F6                     __end_of_sprintf:
  1211                           
  1212                           	psect	text2
  1213     042A                     __ptext2:	
  1214 ;; *************** function ___lwmod *****************
  1215 ;; Defined at:
  1216 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;  divisor         2    7[COMMON] unsigned int 
  1219 ;;  dividend        2    9[COMMON] unsigned int 
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;  counter         1   11[COMMON] unsigned char 
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  2    7[COMMON] unsigned int 
  1224 ;; Registers used:
  1225 ;;		wreg, status,2, status,0, btemp+1
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1231 ;;      Params:         4       0       0       0       0
  1232 ;;      Locals:         1       0       0       0       0
  1233 ;;      Temps:          0       0       0       0       0
  1234 ;;      Totals:         5       0       0       0       0
  1235 ;;Total ram usage:        5 bytes
  1236 ;; Hardware stack levels used: 1
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		_sprintf
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244     042A                     ___lwmod:	
  1245                           ;psect for function ___lwmod
  1246                           
  1247     042A                     l1317:	
  1248                           ;incstack = 0
  1249                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1250                           
  1251     042A  0877               	movf	___lwmod@divisor,w
  1252     042B  0478               	iorwf	___lwmod@divisor+1,w
  1253     042C  1903               	btfsc	3,2
  1254     042D  2C2F               	goto	u611
  1255     042E  2C30               	goto	u610
  1256     042F                     u611:
  1257     042F  2C5F               	goto	l1335
  1258     0430                     u610:
  1259     0430                     l1319:
  1260     0430  01FB               	clrf	___lwmod@counter
  1261     0431  0AFB               	incf	___lwmod@counter,f
  1262     0432  2C3E               	goto	l1325
  1263     0433                     l1321:
  1264     0433  3001               	movlw	1
  1265     0434                     u625:
  1266     0434  1003               	clrc
  1267     0435  0DF7               	rlf	___lwmod@divisor,f
  1268     0436  0DF8               	rlf	___lwmod@divisor+1,f
  1269     0437  3EFF               	addlw	-1
  1270     0438  1D03               	skipz
  1271     0439  2C34               	goto	u625
  1272     043A                     l1323:
  1273     043A  3001               	movlw	1
  1274     043B  00FF               	movwf	btemp+1
  1275     043C  087F               	movf	btemp+1,w
  1276     043D  07FB               	addwf	___lwmod@counter,f
  1277     043E                     l1325:
  1278     043E  1FF8               	btfss	___lwmod@divisor+1,7
  1279     043F  2C41               	goto	u631
  1280     0440  2C42               	goto	u630
  1281     0441                     u631:
  1282     0441  2C33               	goto	l1321
  1283     0442                     u630:
  1284     0442                     l1327:
  1285     0442  0878               	movf	___lwmod@divisor+1,w
  1286     0443  027A               	subwf	___lwmod@dividend+1,w
  1287     0444  1D03               	skipz
  1288     0445  2C48               	goto	u645
  1289     0446  0877               	movf	___lwmod@divisor,w
  1290     0447  0279               	subwf	___lwmod@dividend,w
  1291     0448                     u645:
  1292     0448  1C03               	skipc
  1293     0449  2C4B               	goto	u641
  1294     044A  2C4C               	goto	u640
  1295     044B                     u641:
  1296     044B  2C52               	goto	l1331
  1297     044C                     u640:
  1298     044C                     l1329:
  1299     044C  0877               	movf	___lwmod@divisor,w
  1300     044D  02F9               	subwf	___lwmod@dividend,f
  1301     044E  0878               	movf	___lwmod@divisor+1,w
  1302     044F  1C03               	skipc
  1303     0450  03FA               	decf	___lwmod@dividend+1,f
  1304     0451  02FA               	subwf	___lwmod@dividend+1,f
  1305     0452                     l1331:
  1306     0452  3001               	movlw	1
  1307     0453                     u655:
  1308     0453  1003               	clrc
  1309     0454  0CF8               	rrf	___lwmod@divisor+1,f
  1310     0455  0CF7               	rrf	___lwmod@divisor,f
  1311     0456  3EFF               	addlw	-1
  1312     0457  1D03               	skipz
  1313     0458  2C53               	goto	u655
  1314     0459                     l1333:
  1315     0459  3001               	movlw	1
  1316     045A  02FB               	subwf	___lwmod@counter,f
  1317     045B  1D03               	btfss	3,2
  1318     045C  2C5E               	goto	u661
  1319     045D  2C5F               	goto	u660
  1320     045E                     u661:
  1321     045E  2C42               	goto	l1327
  1322     045F                     u660:
  1323     045F                     l1335:
  1324     045F  087A               	movf	___lwmod@dividend+1,w
  1325     0460  00F8               	movwf	?___lwmod+1
  1326     0461  0879               	movf	___lwmod@dividend,w
  1327     0462  00F7               	movwf	?___lwmod
  1328     0463                     l537:
  1329     0463  0008               	return
  1330     0464                     __end_of___lwmod:
  1331                           
  1332                           	psect	text3
  1333     04E3                     __ptext3:	
  1334 ;; *************** function ___lwdiv *****************
  1335 ;; Defined at:
  1336 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  divisor         2    0[COMMON] unsigned int 
  1339 ;;  dividend        2    2[COMMON] unsigned int 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  quotient        2    4[COMMON] unsigned int 
  1342 ;;  counter         1    6[COMMON] unsigned char 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  2    0[COMMON] unsigned int 
  1345 ;; Registers used:
  1346 ;;		wreg, status,2, status,0, btemp+1
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1352 ;;      Params:         4       0       0       0       0
  1353 ;;      Locals:         3       0       0       0       0
  1354 ;;      Temps:          0       0       0       0       0
  1355 ;;      Totals:         7       0       0       0       0
  1356 ;;Total ram usage:        7 bytes
  1357 ;; Hardware stack levels used: 1
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_sprintf
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365     04E3                     ___lwdiv:	
  1366                           ;psect for function ___lwdiv
  1367                           
  1368     04E3                     l1291:	
  1369                           ;incstack = 0
  1370                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1371                           
  1372     04E3  01F4               	clrf	___lwdiv@quotient
  1373     04E4  01F5               	clrf	___lwdiv@quotient+1
  1374     04E5                     l1293:
  1375     04E5  0870               	movf	___lwdiv@divisor,w
  1376     04E6  0471               	iorwf	___lwdiv@divisor+1,w
  1377     04E7  1903               	btfsc	3,2
  1378     04E8  2CEA               	goto	u541
  1379     04E9  2CEB               	goto	u540
  1380     04EA                     u541:
  1381     04EA  2D22               	goto	l1313
  1382     04EB                     u540:
  1383     04EB                     l1295:
  1384     04EB  01F6               	clrf	___lwdiv@counter
  1385     04EC  0AF6               	incf	___lwdiv@counter,f
  1386     04ED  2CF9               	goto	l1301
  1387     04EE                     l1297:
  1388     04EE  3001               	movlw	1
  1389     04EF                     u555:
  1390     04EF  1003               	clrc
  1391     04F0  0DF0               	rlf	___lwdiv@divisor,f
  1392     04F1  0DF1               	rlf	___lwdiv@divisor+1,f
  1393     04F2  3EFF               	addlw	-1
  1394     04F3  1D03               	skipz
  1395     04F4  2CEF               	goto	u555
  1396     04F5                     l1299:
  1397     04F5  3001               	movlw	1
  1398     04F6  00FF               	movwf	btemp+1
  1399     04F7  087F               	movf	btemp+1,w
  1400     04F8  07F6               	addwf	___lwdiv@counter,f
  1401     04F9                     l1301:
  1402     04F9  1FF1               	btfss	___lwdiv@divisor+1,7
  1403     04FA  2CFC               	goto	u561
  1404     04FB  2CFD               	goto	u560
  1405     04FC                     u561:
  1406     04FC  2CEE               	goto	l1297
  1407     04FD                     u560:
  1408     04FD                     l1303:
  1409     04FD  3001               	movlw	1
  1410     04FE                     u575:
  1411     04FE  1003               	clrc
  1412     04FF  0DF4               	rlf	___lwdiv@quotient,f
  1413     0500  0DF5               	rlf	___lwdiv@quotient+1,f
  1414     0501  3EFF               	addlw	-1
  1415     0502  1D03               	skipz
  1416     0503  2CFE               	goto	u575
  1417     0504  0871               	movf	___lwdiv@divisor+1,w
  1418     0505  0273               	subwf	___lwdiv@dividend+1,w
  1419     0506  1D03               	skipz
  1420     0507  2D0A               	goto	u585
  1421     0508  0870               	movf	___lwdiv@divisor,w
  1422     0509  0272               	subwf	___lwdiv@dividend,w
  1423     050A                     u585:
  1424     050A  1C03               	skipc
  1425     050B  2D0D               	goto	u581
  1426     050C  2D0E               	goto	u580
  1427     050D                     u581:
  1428     050D  2D15               	goto	l1309
  1429     050E                     u580:
  1430     050E                     l1305:
  1431     050E  0870               	movf	___lwdiv@divisor,w
  1432     050F  02F2               	subwf	___lwdiv@dividend,f
  1433     0510  0871               	movf	___lwdiv@divisor+1,w
  1434     0511  1C03               	skipc
  1435     0512  03F3               	decf	___lwdiv@dividend+1,f
  1436     0513  02F3               	subwf	___lwdiv@dividend+1,f
  1437     0514                     l1307:
  1438     0514  1474               	bsf	___lwdiv@quotient,0
  1439     0515                     l1309:
  1440     0515  3001               	movlw	1
  1441     0516                     u595:
  1442     0516  1003               	clrc
  1443     0517  0CF1               	rrf	___lwdiv@divisor+1,f
  1444     0518  0CF0               	rrf	___lwdiv@divisor,f
  1445     0519  3EFF               	addlw	-1
  1446     051A  1D03               	skipz
  1447     051B  2D16               	goto	u595
  1448     051C                     l1311:
  1449     051C  3001               	movlw	1
  1450     051D  02F6               	subwf	___lwdiv@counter,f
  1451     051E  1D03               	btfss	3,2
  1452     051F  2D21               	goto	u601
  1453     0520  2D22               	goto	u600
  1454     0521                     u601:
  1455     0521  2CFD               	goto	l1303
  1456     0522                     u600:
  1457     0522                     l1313:
  1458     0522  0875               	movf	___lwdiv@quotient+1,w
  1459     0523  00F1               	movwf	?___lwdiv+1
  1460     0524  0874               	movf	___lwdiv@quotient,w
  1461     0525  00F0               	movwf	?___lwdiv
  1462     0526                     l527:
  1463     0526  0008               	return
  1464     0527                     __end_of___lwdiv:
  1465                           
  1466                           	psect	text4
  1467     036F                     __ptext4:	
  1468 ;; *************** function _lcd_send_string *****************
  1469 ;; Defined at:
  1470 ;;		line 203 in file "newmain.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  str             2   11[COMMON] PTR unsigned char 
  1473 ;;		 -> main@str2(4), main@str1(4), STR_3(9), STR_2(8), 
  1474 ;;		 -> STR_1(13), 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         2       0       0       0       0
  1487 ;;      Locals:         0       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0
  1489 ;;      Totals:         2       0       0       0       0
  1490 ;;Total ram usage:        2 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; Hardware stack levels required when called: 4
  1493 ;; This function calls:
  1494 ;;		_lcd_send_data
  1495 ;; This function is called by:
  1496 ;;		_main
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500     036F                     _lcd_send_string:	
  1501                           ;psect for function _lcd_send_string
  1502                           
  1503     036F                     l1423:	
  1504                           ;incstack = 0
  1505                           ; Regs used in _lcd_send_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1506                           
  1507                           
  1508                           ;newmain.c: 203: {;newmain.c: 204:   char str1[4];;newmain.c: 205:   char str2[4];
  1509     036F  2B84               	goto	l1429
  1510     0370                     l1425:
  1511     0370  087C               	movf	lcd_send_string@str+1,w
  1512     0371  00FF               	movwf	btemp+1
  1513     0372  087B               	movf	lcd_send_string@str,w
  1514     0373  0084               	movwf	4
  1515     0374  120A  118A  2003  120A  118A  	fcall	stringtab
  1516     0379  120A  118A  2464  120A  118A  	fcall	_lcd_send_data
  1517     037E                     l1427:
  1518     037E  3001               	movlw	1
  1519     037F  07FB               	addwf	lcd_send_string@str,f
  1520     0380  1803               	skipnc
  1521     0381  0AFC               	incf	lcd_send_string@str+1,f
  1522     0382  3000               	movlw	0
  1523     0383  07FC               	addwf	lcd_send_string@str+1,f
  1524     0384                     l1429:
  1525     0384  087C               	movf	lcd_send_string@str+1,w
  1526     0385  1283               	bcf	3,5	;RP0=0, select bank0
  1527     0386  1303               	bcf	3,6	;RP1=0, select bank0
  1528     0387  00FF               	movwf	btemp+1
  1529     0388  087B               	movf	lcd_send_string@str,w
  1530     0389  0084               	movwf	4
  1531     038A  120A  118A  2003  120A  118A  	fcall	stringtab
  1532     038F  3A00               	xorlw	0
  1533     0390  1D03               	skipz
  1534     0391  2B93               	goto	u721
  1535     0392  2B94               	goto	u720
  1536     0393                     u721:
  1537     0393  2B70               	goto	l1425
  1538     0394                     u720:
  1539     0394                     l126:
  1540     0394  0008               	return
  1541     0395                     __end_of_lcd_send_string:
  1542                           
  1543                           	psect	text5
  1544     032F                     __ptext5:	
  1545 ;; *************** function _lcd_put_cur *****************
  1546 ;; Defined at:
  1547 ;;		line 161 in file "newmain.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  row             2    7[BANK0 ] int 
  1550 ;;  col             2    9[BANK0 ] int 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;		None
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1562 ;;      Params:         0       4       0       0       0
  1563 ;;      Locals:         0       0       0       0       0
  1564 ;;      Temps:          0       0       0       0       0
  1565 ;;      Totals:         0       4       0       0       0
  1566 ;;Total ram usage:        4 bytes
  1567 ;; Hardware stack levels used: 1
  1568 ;; Hardware stack levels required when called: 4
  1569 ;; This function calls:
  1570 ;;		_lcd_send_cmd
  1571 ;; This function is called by:
  1572 ;;		_main
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576     032F                     _lcd_put_cur:	
  1577                           ;psect for function _lcd_put_cur
  1578                           
  1579     032F                     l1381:	
  1580                           ;incstack = 0
  1581                           ; Regs used in _lcd_put_cur: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1582                           
  1583                           
  1584                           ;newmain.c: 161: ;newmain.c: 162:  _delay((unsigned long)((50)*(20000000/4000.0)));;newm
      +                          ain.c: 163:  lcd_send_cmd (0x30);
  1585     032F  2B37               	goto	l1387
  1586     0330                     l114:	
  1587                           ;newmain.c: 164:  _delay((unsigned long)((5)*(20000000/4000.0)));;newmain.c: 165:  lcd_s
      +                          end_cmd (0x30);
  1588                           
  1589                           
  1590                           ;newmain.c: 166:  _delay((unsigned long)((1)*(20000000/4000.0)));
  1591     0330  17A9               	bsf	lcd_put_cur@col,7
  1592                           
  1593                           ;newmain.c: 167:  lcd_send_cmd (0x30);
  1594     0331  2B46               	goto	l1389
  1595     0332                     l1383:
  1596                           
  1597                           ;newmain.c: 169:  lcd_send_cmd (0x20);
  1598     0332  30C0               	movlw	192
  1599     0333  04A9               	iorwf	lcd_put_cur@col,f
  1600     0334  3000               	movlw	0
  1601     0335  04AA               	iorwf	lcd_put_cur@col+1,f
  1602                           
  1603                           ;newmain.c: 170:  _delay((unsigned long)((10)*(20000000/4000.0)));
  1604     0336  2B46               	goto	l1389
  1605     0337                     l1387:
  1606                           
  1607                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1608                           ; Switch size 1, requested type "simple"
  1609                           ; Number of cases is 1, Range of values is 0 to 0
  1610                           ; switch strategies available:
  1611                           ; Name         Instructions Cycles
  1612                           ; simple_byte            4     3 (average)
  1613                           ; direct_byte           11     8 (fixed)
  1614                           ; jumptable            260     6 (fixed)
  1615                           ;	Chosen strategy is simple_byte
  1616     0337  1283               	bcf	3,5	;RP0=0, select bank0
  1617     0338  1303               	bcf	3,6	;RP1=0, select bank0
  1618     0339  0828               	movf	lcd_put_cur@row+1,w
  1619     033A  3A00               	xorlw	0	; case 0
  1620     033B  1903               	skipnz
  1621     033C  2B3E               	goto	l1599
  1622     033D  2B46               	goto	l1389
  1623     033E                     l1599:
  1624                           
  1625                           ; Switch size 1, requested type "simple"
  1626                           ; Number of cases is 2, Range of values is 0 to 1
  1627                           ; switch strategies available:
  1628                           ; Name         Instructions Cycles
  1629                           ; simple_byte            7     4 (average)
  1630                           ; direct_byte           14     8 (fixed)
  1631                           ; jumptable            260     6 (fixed)
  1632                           ;	Chosen strategy is simple_byte
  1633     033E  0827               	movf	lcd_put_cur@row,w
  1634     033F  3A00               	xorlw	0	; case 0
  1635     0340  1903               	skipnz
  1636     0341  2B30               	goto	l114
  1637     0342  3A01               	xorlw	1	; case 1
  1638     0343  1903               	skipnz
  1639     0344  2B32               	goto	l1383
  1640     0345  2B46               	goto	l1389
  1641     0346                     l1389:
  1642                           
  1643                           ;newmain.c: 173:  lcd_send_cmd (0x28);
  1644     0346  0829               	movf	lcd_put_cur@col,w
  1645     0347  120A  118A  24A3  120A  118A  	fcall	_lcd_send_cmd
  1646     034C                     l117:
  1647     034C  0008               	return
  1648     034D                     __end_of_lcd_put_cur:
  1649                           
  1650                           	psect	text6
  1651     058D                     __ptext6:	
  1652 ;; *************** function _lcd_init *****************
  1653 ;; Defined at:
  1654 ;;		line 177 in file "newmain.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1668 ;;      Params:         0       0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0
  1670 ;;      Temps:          3       0       0       0       0
  1671 ;;      Totals:         3       0       0       0       0
  1672 ;;Total ram usage:        3 bytes
  1673 ;; Hardware stack levels used: 1
  1674 ;; Hardware stack levels required when called: 4
  1675 ;; This function calls:
  1676 ;;		_lcd_send_cmd
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682     058D                     _lcd_init:	
  1683                           ;psect for function _lcd_init
  1684                           
  1685     058D                     l1395:	
  1686                           ;incstack = 0
  1687                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1688                           
  1689                           
  1690                           ;newmain.c: 180:  lcd_send_cmd (0x06);
  1691     058D  3002               	movlw	2
  1692     058E  00FD               	movwf	??_lcd_init+2
  1693     058F  3045               	movlw	69
  1694     0590  00FC               	movwf	??_lcd_init+1
  1695     0591  30A9               	movlw	169
  1696     0592  00FB               	movwf	??_lcd_init
  1697     0593                     u847:
  1698     0593  0BFB               	decfsz	??_lcd_init,f
  1699     0594  2D93               	goto	u847
  1700     0595  0BFC               	decfsz	??_lcd_init+1,f
  1701     0596  2D93               	goto	u847
  1702     0597  0BFD               	decfsz	??_lcd_init+2,f
  1703     0598  2D93               	goto	u847
  1704     0599  2D9A               	nop2
  1705     059A                     l1397:
  1706                           
  1707                           ;newmain.c: 181:  _delay((unsigned long)((1)*(20000000/4000.0)));
  1708     059A  3030               	movlw	48
  1709     059B  120A  118A  24A3  120A  118A  	fcall	_lcd_send_cmd
  1710     05A0                     l1399:
  1711                           
  1712                           ;newmain.c: 182:  lcd_send_cmd (0x0C);
  1713     05A0  3021               	movlw	33
  1714     05A1  00FC               	movwf	??_lcd_init+1
  1715     05A2  3076               	movlw	118
  1716     05A3  00FB               	movwf	??_lcd_init
  1717     05A4                     u857:
  1718     05A4  0BFB               	decfsz	??_lcd_init,f
  1719     05A5  2DA4               	goto	u857
  1720     05A6  0BFC               	decfsz	??_lcd_init+1,f
  1721     05A7  2DA4               	goto	u857
  1722     05A8  0000               	nop
  1723                           
  1724                           ;newmain.c: 183: }
  1725     05A9  3030               	movlw	48
  1726     05AA  120A  118A  24A3  120A  118A  	fcall	_lcd_send_cmd
  1727     05AF                     l1401:
  1728                           
  1729                           ;newmain.c: 184: 
  1730     05AF  3007               	movlw	7
  1731     05B0  00FC               	movwf	??_lcd_init+1
  1732     05B1  307D               	movlw	125
  1733     05B2  00FB               	movwf	??_lcd_init
  1734     05B3                     u867:
  1735     05B3  0BFB               	decfsz	??_lcd_init,f
  1736     05B4  2DB3               	goto	u867
  1737     05B5  0BFC               	decfsz	??_lcd_init+1,f
  1738     05B6  2DB3               	goto	u867
  1739     05B7                     l1403:
  1740                           
  1741                           ;newmain.c: 185: void lcd_send_string (char *str)
  1742     05B7  3030               	movlw	48
  1743     05B8  120A  118A  24A3  120A  118A  	fcall	_lcd_send_cmd
  1744                           
  1745                           ;newmain.c: 186: {
  1746     05BD  3041               	movlw	65
  1747     05BE  00FC               	movwf	??_lcd_init+1
  1748     05BF  30EE               	movlw	238
  1749     05C0  00FB               	movwf	??_lcd_init
  1750     05C1                     u877:
  1751     05C1  0BFB               	decfsz	??_lcd_init,f
  1752     05C2  2DC1               	goto	u877
  1753     05C3  0BFC               	decfsz	??_lcd_init+1,f
  1754     05C4  2DC1               	goto	u877
  1755     05C5  0000               	nop
  1756     05C6                     l1405:
  1757                           
  1758                           ;newmain.c: 187:  while (*str) lcd_send_data (*str++);
  1759     05C6  3020               	movlw	32
  1760     05C7  120A  118A  24A3  120A  118A  	fcall	_lcd_send_cmd
  1761     05CC                     l1407:
  1762                           
  1763                           ;newmain.c: 188: }
  1764     05CC  3041               	movlw	65
  1765     05CD  00FC               	movwf	??_lcd_init+1
  1766     05CE  30EE               	movlw	238
  1767     05CF  00FB               	movwf	??_lcd_init
  1768     05D0                     u887:
  1769     05D0  0BFB               	decfsz	??_lcd_init,f
  1770     05D1  2DD0               	goto	u887
  1771     05D2  0BFC               	decfsz	??_lcd_init+1,f
  1772     05D3  2DD0               	goto	u887
  1773     05D4  0000               	nop
  1774                           
  1775                           ;newmain.c: 191: float GetVoltage(uint16_t adc_read){
  1776     05D5  3028               	movlw	40
  1777     05D6  120A  118A  24A3  120A  118A  	fcall	_lcd_send_cmd
  1778     05DB                     l1409:
  1779                           
  1780                           ;newmain.c: 192:     float conversion = 0.0f;
  1781     05DB  3007               	movlw	7
  1782     05DC  00FC               	movwf	??_lcd_init+1
  1783     05DD  307D               	movlw	125
  1784     05DE  00FB               	movwf	??_lcd_init
  1785     05DF                     u897:
  1786     05DF  0BFB               	decfsz	??_lcd_init,f
  1787     05E0  2DDF               	goto	u897
  1788     05E1  0BFC               	decfsz	??_lcd_init+1,f
  1789     05E2  2DDF               	goto	u897
  1790     05E3                     l1411:
  1791                           
  1792                           ;newmain.c: 193:     conversion = (float) (adc_read * 5 / 1024);
  1793     05E3  3008               	movlw	8
  1794     05E4  120A  118A  24A3  120A  118A  	fcall	_lcd_send_cmd
  1795                           
  1796                           ;newmain.c: 194:     return conversion;
  1797     05E9  3007               	movlw	7
  1798     05EA  00FC               	movwf	??_lcd_init+1
  1799     05EB  307D               	movlw	125
  1800     05EC  00FB               	movwf	??_lcd_init
  1801     05ED                     u907:
  1802     05ED  0BFB               	decfsz	??_lcd_init,f
  1803     05EE  2DED               	goto	u907
  1804     05EF  0BFC               	decfsz	??_lcd_init+1,f
  1805     05F0  2DED               	goto	u907
  1806     05F1                     l1413:
  1807                           
  1808                           ;newmain.c: 195: }
  1809     05F1  3001               	movlw	1
  1810     05F2  120A  118A  24A3  120A  118A  	fcall	_lcd_send_cmd
  1811     05F7                     l1415:
  1812                           
  1813                           ;newmain.c: 196: 
  1814     05F7  3007               	movlw	7
  1815     05F8  00FC               	movwf	??_lcd_init+1
  1816     05F9  307D               	movlw	125
  1817     05FA  00FB               	movwf	??_lcd_init
  1818     05FB                     u917:
  1819     05FB  0BFB               	decfsz	??_lcd_init,f
  1820     05FC  2DFB               	goto	u917
  1821     05FD  0BFC               	decfsz	??_lcd_init+1,f
  1822     05FE  2DFB               	goto	u917
  1823     05FF                     l1417:
  1824                           
  1825                           ;newmain.c: 197: 
  1826     05FF  3007               	movlw	7
  1827     0600  00FC               	movwf	??_lcd_init+1
  1828     0601  307D               	movlw	125
  1829     0602  00FB               	movwf	??_lcd_init
  1830     0603                     u927:
  1831     0603  0BFB               	decfsz	??_lcd_init,f
  1832     0604  2E03               	goto	u927
  1833     0605  0BFC               	decfsz	??_lcd_init+1,f
  1834     0606  2E03               	goto	u927
  1835     0607                     l1419:
  1836                           
  1837                           ;newmain.c: 198: uint16_t adc_value_1 = 0;
  1838     0607  3006               	movlw	6
  1839     0608  120A  118A  24A3  120A  118A  	fcall	_lcd_send_cmd
  1840                           
  1841                           ;newmain.c: 199: uint16_t adc_value_2 = 0;
  1842     060D  3007               	movlw	7
  1843     060E  00FC               	movwf	??_lcd_init+1
  1844     060F  307D               	movlw	125
  1845     0610  00FB               	movwf	??_lcd_init
  1846     0611                     u937:
  1847     0611  0BFB               	decfsz	??_lcd_init,f
  1848     0612  2E11               	goto	u937
  1849     0613  0BFC               	decfsz	??_lcd_init+1,f
  1850     0614  2E11               	goto	u937
  1851     0615                     l1421:
  1852                           
  1853                           ;newmain.c: 200: 
  1854     0615  300C               	movlw	12
  1855     0616  120A  118A  24A3  120A  118A  	fcall	_lcd_send_cmd
  1856     061B                     l120:
  1857     061B  0008               	return
  1858     061C                     __end_of_lcd_init:
  1859                           
  1860                           	psect	text7
  1861     034D                     __ptext7:	
  1862 ;; *************** function _lcd_clear *****************
  1863 ;; Defined at:
  1864 ;;		line 152 in file "newmain.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;		None
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;  i               2   11[COMMON] int 
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  1    wreg      void 
  1871 ;; Registers used:
  1872 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1878 ;;      Params:         0       0       0       0       0
  1879 ;;      Locals:         2       0       0       0       0
  1880 ;;      Temps:          0       0       0       0       0
  1881 ;;      Totals:         2       0       0       0       0
  1882 ;;Total ram usage:        2 bytes
  1883 ;; Hardware stack levels used: 1
  1884 ;; Hardware stack levels required when called: 4
  1885 ;; This function calls:
  1886 ;;		_lcd_send_cmd
  1887 ;;		_lcd_send_data
  1888 ;; This function is called by:
  1889 ;;		_main
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893     034D                     _lcd_clear:	
  1894                           ;psect for function _lcd_clear
  1895                           
  1896     034D                     l1367:	
  1897                           ;incstack = 0
  1898                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1899                           
  1900                           
  1901                           ;newmain.c: 154: 
  1902     034D  3080               	movlw	128
  1903     034E  120A  118A  24A3  120A  118A  	fcall	_lcd_send_cmd
  1904     0353                     l1369:
  1905                           
  1906                           ;newmain.c: 155:     lcd_send_cmd (col);
  1907     0353  01FB               	clrf	lcd_clear@i
  1908     0354  01FC               	clrf	lcd_clear@i+1
  1909     0355                     l1375:
  1910                           
  1911                           ;newmain.c: 156: };newmain.c: 157: 
  1912     0355  3020               	movlw	32
  1913     0356  120A  118A  2464  120A  118A  	fcall	_lcd_send_data
  1914     035B                     l1377:
  1915                           
  1916                           ;newmain.c: 158: 
  1917     035B  3001               	movlw	1
  1918     035C  07FB               	addwf	lcd_clear@i,f
  1919     035D  1803               	skipnc
  1920     035E  0AFC               	incf	lcd_clear@i+1,f
  1921     035F  3000               	movlw	0
  1922     0360  07FC               	addwf	lcd_clear@i+1,f
  1923     0361                     l1379:
  1924     0361  087C               	movf	lcd_clear@i+1,w
  1925     0362  3A80               	xorlw	128
  1926     0363  00FF               	movwf	btemp+1
  1927     0364  3080               	movlw	128
  1928     0365  027F               	subwf	btemp+1,w
  1929     0366  1D03               	skipz
  1930     0367  2B6A               	goto	u715
  1931     0368  3046               	movlw	70
  1932     0369  027B               	subwf	lcd_clear@i,w
  1933     036A                     u715:
  1934     036A  1C03               	skipc
  1935     036B  2B6D               	goto	u711
  1936     036C  2B6E               	goto	u710
  1937     036D                     u711:
  1938     036D  2B55               	goto	l1375
  1939     036E                     u710:
  1940     036E                     l110:
  1941     036E  0008               	return
  1942     036F                     __end_of_lcd_clear:
  1943                           
  1944                           	psect	text8
  1945     0464                     __ptext8:	
  1946 ;; *************** function _lcd_send_data *****************
  1947 ;; Defined at:
  1948 ;;		line 134 in file "newmain.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  data            1    wreg     unsigned char 
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;  data            1    4[BANK0 ] unsigned char 
  1953 ;;  data_t          4    0[BANK0 ] unsigned char [4]
  1954 ;;  data_l          1    6[BANK0 ] unsigned char 
  1955 ;;  data_u          1    5[BANK0 ] unsigned char 
  1956 ;; Return value:  Size  Location     Type
  1957 ;;                  1    wreg      void 
  1958 ;; Registers used:
  1959 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1960 ;; Tracked objects:
  1961 ;;		On entry : 0/0
  1962 ;;		On exit  : 0/0
  1963 ;;		Unchanged: 0/0
  1964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1965 ;;      Params:         0       0       0       0       0
  1966 ;;      Locals:         0       7       0       0       0
  1967 ;;      Temps:          2       0       0       0       0
  1968 ;;      Totals:         2       7       0       0       0
  1969 ;;Total ram usage:        9 bytes
  1970 ;; Hardware stack levels used: 1
  1971 ;; Hardware stack levels required when called: 3
  1972 ;; This function calls:
  1973 ;;		_I2C_Multi_Send
  1974 ;;		_I2C_Start
  1975 ;;		_I2C_Stop
  1976 ;; This function is called by:
  1977 ;;		_lcd_clear
  1978 ;;		_lcd_send_string
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982     0464                     _lcd_send_data:	
  1983                           ;psect for function _lcd_send_data
  1984                           
  1985                           
  1986                           ;incstack = 0
  1987                           ; Regs used in _lcd_send_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1988                           ;lcd_send_data@data stored from wreg
  1989     0464  1283               	bcf	3,5	;RP0=0, select bank0
  1990     0465  1303               	bcf	3,6	;RP1=0, select bank0
  1991     0466  00A4               	movwf	lcd_send_data@data
  1992     0467                     l1245:
  1993                           
  1994                           ;newmain.c: 134: void lcd_clear (void);newmain.c: 135: {;newmain.c: 136:  lcd_send_cmd (
      +                          0x80);;newmain.c: 137:  for (int i=0; i<70; i++);newmain.c: 138:  {
  1995     0467  0824               	movf	lcd_send_data@data,w
  1996     0468  39F0               	andlw	240
  1997     0469  00A5               	movwf	lcd_send_data@data_u
  1998     046A                     l1247:
  1999                           
  2000                           ;newmain.c: 139:   lcd_send_data (' ');
  2001     046A  0824               	movf	lcd_send_data@data,w
  2002     046B  00F9               	movwf	??_lcd_send_data
  2003     046C  3003               	movlw	3
  2004     046D                     u465:
  2005     046D  1003               	clrc
  2006     046E  0DF9               	rlf	??_lcd_send_data,f
  2007     046F  3EFF               	addlw	-1
  2008     0470  1D03               	skipz
  2009     0471  2C6D               	goto	u465
  2010     0472  1003               	clrc
  2011     0473  0D79               	rlf	??_lcd_send_data,w
  2012     0474  39F0               	andlw	240
  2013     0475  00A6               	movwf	lcd_send_data@data_l
  2014     0476                     l1249:
  2015                           
  2016                           ;newmain.c: 140:  }
  2017     0476  0825               	movf	lcd_send_data@data_u,w
  2018     0477  380D               	iorlw	13
  2019     0478  00A0               	movwf	lcd_send_data@data_t
  2020     0479                     l1251:
  2021                           
  2022                           ;newmain.c: 141: }
  2023     0479  0825               	movf	lcd_send_data@data_u,w
  2024     047A  3809               	iorlw	9
  2025     047B  00A1               	movwf	lcd_send_data@data_t+1
  2026     047C                     l1253:
  2027                           
  2028                           ;newmain.c: 142: 
  2029     047C  0826               	movf	lcd_send_data@data_l,w
  2030     047D  380D               	iorlw	13
  2031     047E  00A2               	movwf	lcd_send_data@data_t+2
  2032     047F                     l1255:
  2033                           
  2034                           ;newmain.c: 143: void lcd_put_cur(int row, int col)
  2035     047F  0826               	movf	lcd_send_data@data_l,w
  2036     0480  3809               	iorlw	9
  2037     0481  00A3               	movwf	lcd_send_data@data_t+3
  2038     0482                     l1257:
  2039                           
  2040                           ;newmain.c: 144: {
  2041     0482  120A  118A  2300  120A  118A  	fcall	_I2C_Start
  2042     0487                     l1259:
  2043                           
  2044                           ;newmain.c: 145:     switch (row)
  2045     0487  3027               	movlw	39
  2046     0488  00F1               	movwf	I2C_Multi_Send@address
  2047     0489  3020               	movlw	(low (lcd_send_data@data_t| 0))& (0+255)
  2048     048A  00F2               	movwf	I2C_Multi_Send@data
  2049     048B  3004               	movlw	4
  2050     048C  00F3               	movwf	I2C_Multi_Send@size
  2051     048D  3000               	movlw	0
  2052     048E  00F4               	movwf	I2C_Multi_Send@size+1
  2053     048F  3000               	movlw	0
  2054     0490  120A  118A  23C3  120A  118A  	fcall	_I2C_Multi_Send
  2055     0495                     l1261:
  2056                           
  2057                           ;newmain.c: 146:     {
  2058     0495  120A  118A  2309  120A  118A  	fcall	_I2C_Stop
  2059     049A                     l1263:
  2060                           
  2061                           ;newmain.c: 148:             col |= 0x80;
  2062     049A  3007               	movlw	7
  2063     049B  00FA               	movwf	??_lcd_send_data+1
  2064     049C  307D               	movlw	125
  2065     049D  00F9               	movwf	??_lcd_send_data
  2066     049E                     u947:
  2067     049E  0BF9               	decfsz	??_lcd_send_data,f
  2068     049F  2C9E               	goto	u947
  2069     04A0  0BFA               	decfsz	??_lcd_send_data+1,f
  2070     04A1  2C9E               	goto	u947
  2071     04A2                     l105:
  2072     04A2  0008               	return
  2073     04A3                     __end_of_lcd_send_data:
  2074                           
  2075                           	psect	text9
  2076     04A3                     __ptext9:	
  2077 ;; *************** function _lcd_send_cmd *****************
  2078 ;; Defined at:
  2079 ;;		line 116 in file "newmain.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  cmd             1    wreg     unsigned char 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;  cmd             1    4[BANK0 ] unsigned char 
  2084 ;;  data_t          4    0[BANK0 ] unsigned char [4]
  2085 ;;  data_l          1    6[BANK0 ] unsigned char 
  2086 ;;  data_u          1    5[BANK0 ] unsigned char 
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      void 
  2089 ;; Registers used:
  2090 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2096 ;;      Params:         0       0       0       0       0
  2097 ;;      Locals:         0       7       0       0       0
  2098 ;;      Temps:          2       0       0       0       0
  2099 ;;      Totals:         2       7       0       0       0
  2100 ;;Total ram usage:        9 bytes
  2101 ;; Hardware stack levels used: 1
  2102 ;; Hardware stack levels required when called: 3
  2103 ;; This function calls:
  2104 ;;		_I2C_Multi_Send
  2105 ;;		_I2C_Start
  2106 ;;		_I2C_Stop
  2107 ;; This function is called by:
  2108 ;;		_lcd_clear
  2109 ;;		_lcd_put_cur
  2110 ;;		_lcd_init
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114     04A3                     _lcd_send_cmd:	
  2115                           ;psect for function _lcd_send_cmd
  2116                           
  2117                           
  2118                           ;incstack = 0
  2119                           ; Regs used in _lcd_send_cmd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2120                           ;lcd_send_cmd@cmd stored from wreg
  2121     04A3  1283               	bcf	3,5	;RP0=0, select bank0
  2122     04A4  1303               	bcf	3,6	;RP1=0, select bank0
  2123     04A5  00A4               	movwf	lcd_send_cmd@cmd
  2124     04A6                     l1225:
  2125                           
  2126                           ;newmain.c: 116: void lcd_send_data (char data);newmain.c: 117: {;newmain.c: 118:  char 
      +                          data_u, data_l;;newmain.c: 119:  uint8_t data_t[4];;newmain.c: 120:  data_u = (data&0xf0
      +                          );
  2127     04A6  0824               	movf	lcd_send_cmd@cmd,w
  2128     04A7  39F0               	andlw	240
  2129     04A8  00A5               	movwf	lcd_send_cmd@data_u
  2130     04A9                     l1227:
  2131                           
  2132                           ;newmain.c: 121:  data_l = ((data<<4)&0xf0);
  2133     04A9  0824               	movf	lcd_send_cmd@cmd,w
  2134     04AA  00F9               	movwf	??_lcd_send_cmd
  2135     04AB  3003               	movlw	3
  2136     04AC                     u455:
  2137     04AC  1003               	clrc
  2138     04AD  0DF9               	rlf	??_lcd_send_cmd,f
  2139     04AE  3EFF               	addlw	-1
  2140     04AF  1D03               	skipz
  2141     04B0  2CAC               	goto	u455
  2142     04B1  1003               	clrc
  2143     04B2  0D79               	rlf	??_lcd_send_cmd,w
  2144     04B3  39F0               	andlw	240
  2145     04B4  00A6               	movwf	lcd_send_cmd@data_l
  2146     04B5                     l1229:
  2147                           
  2148                           ;newmain.c: 122:  data_t[0] = data_u|0x0D;
  2149     04B5  0825               	movf	lcd_send_cmd@data_u,w
  2150     04B6  380C               	iorlw	12
  2151     04B7  00A0               	movwf	lcd_send_cmd@data_t
  2152     04B8                     l1231:
  2153                           
  2154                           ;newmain.c: 123:  data_t[1] = data_u|0x09;
  2155     04B8  0825               	movf	lcd_send_cmd@data_u,w
  2156     04B9  3808               	iorlw	8
  2157     04BA  00A1               	movwf	lcd_send_cmd@data_t+1
  2158     04BB                     l1233:
  2159                           
  2160                           ;newmain.c: 124:  data_t[2] = data_l|0x0D;
  2161     04BB  0826               	movf	lcd_send_cmd@data_l,w
  2162     04BC  380C               	iorlw	12
  2163     04BD  00A2               	movwf	lcd_send_cmd@data_t+2
  2164     04BE                     l1235:
  2165                           
  2166                           ;newmain.c: 125:  data_t[3] = data_l|0x09;
  2167     04BE  0826               	movf	lcd_send_cmd@data_l,w
  2168     04BF  3808               	iorlw	8
  2169     04C0  00A3               	movwf	lcd_send_cmd@data_t+3
  2170     04C1                     l1237:
  2171                           
  2172                           ;newmain.c: 126:  I2C_Start();
  2173     04C1  120A  118A  2300  120A  118A  	fcall	_I2C_Start
  2174     04C6                     l1239:
  2175                           
  2176                           ;newmain.c: 127:     I2C_Multi_Send(0,0X27,data_t,sizeof(data_t));
  2177     04C6  3027               	movlw	39
  2178     04C7  00F1               	movwf	I2C_Multi_Send@address
  2179     04C8  3020               	movlw	(low (lcd_send_cmd@data_t| 0))& (0+255)
  2180     04C9  00F2               	movwf	I2C_Multi_Send@data
  2181     04CA  3004               	movlw	4
  2182     04CB  00F3               	movwf	I2C_Multi_Send@size
  2183     04CC  3000               	movlw	0
  2184     04CD  00F4               	movwf	I2C_Multi_Send@size+1
  2185     04CE  3000               	movlw	0
  2186     04CF  120A  118A  23C3  120A  118A  	fcall	_I2C_Multi_Send
  2187     04D4                     l1241:
  2188                           
  2189                           ;newmain.c: 128:     I2C_Stop();
  2190     04D4  120A  118A  2309  120A  118A  	fcall	_I2C_Stop
  2191     04D9                     l1243:
  2192                           
  2193                           ;newmain.c: 130:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2194     04D9  3021               	movlw	33
  2195     04DA  00FA               	movwf	??_lcd_send_cmd+1
  2196     04DB  3076               	movlw	118
  2197     04DC  00F9               	movwf	??_lcd_send_cmd
  2198     04DD                     u957:
  2199     04DD  0BF9               	decfsz	??_lcd_send_cmd,f
  2200     04DE  2CDD               	goto	u957
  2201     04DF  0BFA               	decfsz	??_lcd_send_cmd+1,f
  2202     04E0  2CDD               	goto	u957
  2203     04E1  0000               	nop
  2204     04E2                     l102:
  2205     04E2  0008               	return
  2206     04E3                     __end_of_lcd_send_cmd:
  2207                           
  2208                           	psect	text10
  2209     0309                     __ptext10:	
  2210 ;; *************** function _I2C_Stop *****************
  2211 ;; Defined at:
  2212 ;;		line 49 in file "newmain.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, status,2, status,0, pclath, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2226 ;;      Params:         0       0       0       0       0
  2227 ;;      Locals:         0       0       0       0       0
  2228 ;;      Temps:          0       0       0       0       0
  2229 ;;      Totals:         0       0       0       0       0
  2230 ;;Total ram usage:        0 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 1
  2233 ;; This function calls:
  2234 ;;		_I2C_IDLE
  2235 ;; This function is called by:
  2236 ;;		_lcd_send_cmd
  2237 ;;		_lcd_send_data
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241     0309                     _I2C_Stop:	
  2242                           ;psect for function _I2C_Stop
  2243                           
  2244     0309                     l1209:	
  2245                           ;incstack = 0
  2246                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  2247                           
  2248                           
  2249                           ;newmain.c: 51: I2C_IDLE();
  2250     0309  120A  118A  2312  120A  118A  	fcall	_I2C_IDLE
  2251     030E                     l1211:
  2252                           
  2253                           ;newmain.c: 52: SSPCON2bits.ACKDT = 1;
  2254     030E  1683               	bsf	3,5	;RP0=1, select bank1
  2255     030F  1303               	bcf	3,6	;RP1=0, select bank1
  2256     0310  1511               	bsf	17,2	;volatile
  2257     0311                     l65:
  2258     0311  0008               	return
  2259     0312                     __end_of_I2C_Stop:
  2260                           
  2261                           	psect	text11
  2262     0300                     __ptext11:	
  2263 ;; *************** function _I2C_Start *****************
  2264 ;; Defined at:
  2265 ;;		line 43 in file "newmain.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;		None
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;		None
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  1    wreg      void 
  2272 ;; Registers used:
  2273 ;;		wreg, status,2, status,0, pclath, cstack
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2279 ;;      Params:         0       0       0       0       0
  2280 ;;      Locals:         0       0       0       0       0
  2281 ;;      Temps:          0       0       0       0       0
  2282 ;;      Totals:         0       0       0       0       0
  2283 ;;Total ram usage:        0 bytes
  2284 ;; Hardware stack levels used: 1
  2285 ;; Hardware stack levels required when called: 1
  2286 ;; This function calls:
  2287 ;;		_I2C_IDLE
  2288 ;; This function is called by:
  2289 ;;		_lcd_send_cmd
  2290 ;;		_lcd_send_data
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           
  2294     0300                     _I2C_Start:	
  2295                           ;psect for function _I2C_Start
  2296                           
  2297     0300                     l1205:	
  2298                           ;incstack = 0
  2299                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  2300                           
  2301                           
  2302                           ;newmain.c: 45:   I2C_IDLE();
  2303     0300  120A  118A  2312  120A  118A  	fcall	_I2C_IDLE
  2304     0305                     l1207:
  2305                           
  2306                           ;newmain.c: 46:   SSPCON2bits.ACKDT = 0;
  2307     0305  1683               	bsf	3,5	;RP0=1, select bank1
  2308     0306  1303               	bcf	3,6	;RP1=0, select bank1
  2309     0307  1411               	bsf	17,0	;volatile
  2310     0308                     l62:
  2311     0308  0008               	return
  2312     0309                     __end_of_I2C_Start:
  2313                           
  2314                           	psect	text12
  2315     03C3                     __ptext12:	
  2316 ;; *************** function _I2C_Multi_Send *****************
  2317 ;; Defined at:
  2318 ;;		line 90 in file "newmain.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;  cmd             1    wreg     unsigned char 
  2321 ;;  address         1    1[COMMON] unsigned char 
  2322 ;;  data            1    2[COMMON] PTR unsigned char 
  2323 ;;		 -> lcd_send_data@data_t(4), lcd_send_cmd@data_t(4), 
  2324 ;;  size            2    3[COMMON] int 
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;  cmd             1    0[COMMON] unsigned char 
  2327 ;;  n               2    7[COMMON] int 
  2328 ;;  send            1    6[COMMON] unsigned char 
  2329 ;; Return value:  Size  Location     Type
  2330 ;;                  1    wreg      void 
  2331 ;; Registers used:
  2332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2333 ;; Tracked objects:
  2334 ;;		On entry : 0/0
  2335 ;;		On exit  : 0/0
  2336 ;;		Unchanged: 0/0
  2337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2338 ;;      Params:         4       0       0       0       0
  2339 ;;      Locals:         3       0       0       0       0
  2340 ;;      Temps:          1       0       0       0       0
  2341 ;;      Totals:         8       0       0       0       0
  2342 ;;Total ram usage:        8 bytes
  2343 ;; Hardware stack levels used: 1
  2344 ;; Hardware stack levels required when called: 2
  2345 ;; This function calls:
  2346 ;;		_I2C_Write
  2347 ;; This function is called by:
  2348 ;;		_lcd_send_cmd
  2349 ;;		_lcd_send_data
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353     03C3                     _I2C_Multi_Send:	
  2354                           ;psect for function _I2C_Multi_Send
  2355                           
  2356     03C3                     l1213:	
  2357                           ;incstack = 0
  2358                           ; Regs used in _I2C_Multi_Send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2359                           
  2360                           
  2361                           ;newmain.c: 91: 
  2362     03C3  0871               	movf	I2C_Multi_Send@address,w
  2363     03C4  00F5               	movwf	??_I2C_Multi_Send
  2364     03C5  0775               	addwf	??_I2C_Multi_Send,w
  2365     03C6  39FE               	andlw	254
  2366     03C7  00F6               	movwf	I2C_Multi_Send@send
  2367     03C8                     l1215:
  2368                           
  2369                           ;newmain.c: 92:     ADCON0 |= channel<<3;
  2370     03C8  0876               	movf	I2C_Multi_Send@send,w
  2371     03C9  120A  118A  231F  120A  118A  	fcall	_I2C_Write
  2372     03CE                     l1217:
  2373                           
  2374                           ;newmain.c: 93:     GO_DONE = 1;
  2375     03CE  01F7               	clrf	I2C_Multi_Send@n
  2376     03CF  01F8               	clrf	I2C_Multi_Send@n+1
  2377     03D0  2BE3               	goto	l1223
  2378     03D1                     l1219:
  2379                           
  2380                           ;newmain.c: 94:     while(GO_DONE);
  2381     03D1  0877               	movf	I2C_Multi_Send@n,w
  2382     03D2  0772               	addwf	I2C_Multi_Send@data,w
  2383     03D3  00F5               	movwf	??_I2C_Multi_Send
  2384     03D4  0875               	movf	??_I2C_Multi_Send,w
  2385     03D5  0084               	movwf	4
  2386     03D6  1383               	bcf	3,7	;select IRP bank0
  2387     03D7  0800               	movf	0,w
  2388     03D8  120A  118A  231F  120A  118A  	fcall	_I2C_Write
  2389     03DD                     l1221:
  2390                           
  2391                           ;newmain.c: 95:     return (uint16_t)((ADRESH << 8) + ADRESL);
  2392     03DD  3001               	movlw	1
  2393     03DE  07F7               	addwf	I2C_Multi_Send@n,f
  2394     03DF  1803               	skipnc
  2395     03E0  0AF8               	incf	I2C_Multi_Send@n+1,f
  2396     03E1  3000               	movlw	0
  2397     03E2  07F8               	addwf	I2C_Multi_Send@n+1,f
  2398     03E3                     l1223:
  2399     03E3  0878               	movf	I2C_Multi_Send@n+1,w
  2400     03E4  3A80               	xorlw	128
  2401     03E5  00F5               	movwf	??_I2C_Multi_Send
  2402     03E6  0874               	movf	I2C_Multi_Send@size+1,w
  2403     03E7  3A80               	xorlw	128
  2404     03E8  0275               	subwf	??_I2C_Multi_Send,w
  2405     03E9  1D03               	skipz
  2406     03EA  2BED               	goto	u445
  2407     03EB  0873               	movf	I2C_Multi_Send@size,w
  2408     03EC  0277               	subwf	I2C_Multi_Send@n,w
  2409     03ED                     u445:
  2410     03ED  1C03               	skipc
  2411     03EE  2BF0               	goto	u441
  2412     03EF  2BF1               	goto	u440
  2413     03F0                     u441:
  2414     03F0  2BD1               	goto	l1219
  2415     03F1                     u440:
  2416     03F1                     l89:
  2417     03F1  0008               	return
  2418     03F2                     __end_of_I2C_Multi_Send:
  2419                           
  2420                           	psect	text13
  2421     031F                     __ptext13:	
  2422 ;; *************** function _I2C_Write *****************
  2423 ;; Defined at:
  2424 ;;		line 74 in file "newmain.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  Data            1    wreg     unsigned char 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;  Data            1    0[COMMON] unsigned char 
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      unsigned char 
  2431 ;; Registers used:
  2432 ;;		wreg, status,2, status,0, pclath, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2438 ;;      Params:         0       0       0       0       0
  2439 ;;      Locals:         1       0       0       0       0
  2440 ;;      Temps:          0       0       0       0       0
  2441 ;;      Totals:         1       0       0       0       0
  2442 ;;Total ram usage:        1 bytes
  2443 ;; Hardware stack levels used: 1
  2444 ;; Hardware stack levels required when called: 1
  2445 ;; This function calls:
  2446 ;;		_I2C_IDLE
  2447 ;; This function is called by:
  2448 ;;		_I2C_Multi_Send
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452     031F                     _I2C_Write:	
  2453                           ;psect for function _I2C_Write
  2454                           
  2455                           
  2456                           ;incstack = 0
  2457                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  2458                           ;I2C_Write@Data stored from wreg
  2459     031F  00F0               	movwf	I2C_Write@Data
  2460     0320                     l1195:
  2461                           
  2462                           ;newmain.c: 74:     I2C_Write(send);;newmain.c: 75:     for(int n = 0; n < size; n++){;n
      +                          ewmain.c: 76:         I2C_Write(data[n]);
  2463     0320  120A  118A  2312  120A  118A  	fcall	_I2C_IDLE
  2464     0325                     l1197:
  2465                           
  2466                           ;newmain.c: 77:     }
  2467     0325  0870               	movf	I2C_Write@Data,w
  2468     0326  1283               	bcf	3,5	;RP0=0, select bank0
  2469     0327  1303               	bcf	3,6	;RP1=0, select bank0
  2470     0328  0093               	movwf	19	;volatile
  2471     0329                     l1199:
  2472                           
  2473                           ;newmain.c: 78: }
  2474     0329  120A  118A  2312  120A  118A  	fcall	_I2C_IDLE
  2475     032E                     l1201:
  2476     032E                     l77:	
  2477                           ;newmain.c: 79: ;	Return value of _I2C_Write is never used
  2478                           
  2479     032E  0008               	return
  2480     032F                     __end_of_I2C_Write:
  2481                           
  2482                           	psect	text14
  2483     0312                     __ptext14:	
  2484 ;; *************** function _I2C_IDLE *****************
  2485 ;; Defined at:
  2486 ;;		line 38 in file "newmain.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;		None
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;		None
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  1    wreg      void 
  2493 ;; Registers used:
  2494 ;;		wreg, status,2
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2500 ;;      Params:         0       0       0       0       0
  2501 ;;      Locals:         0       0       0       0       0
  2502 ;;      Temps:          0       0       0       0       0
  2503 ;;      Totals:         0       0       0       0       0
  2504 ;;Total ram usage:        0 bytes
  2505 ;; Hardware stack levels used: 1
  2506 ;; This function calls:
  2507 ;;		Nothing
  2508 ;; This function is called by:
  2509 ;;		_I2C_Start
  2510 ;;		_I2C_Stop
  2511 ;;		_I2C_Write
  2512 ;;		_I2C_Restart
  2513 ;;		_I2C_ACK
  2514 ;;		_I2C_NACK
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518     0312                     _I2C_IDLE:	
  2519                           ;psect for function _I2C_IDLE
  2520                           
  2521     0312                     l1191:	
  2522                           ;incstack = 0
  2523                           ; Regs used in _I2C_IDLE: [wreg+status,2]
  2524                           
  2525     0312                     l56:	
  2526                           ;newmain.c: 40: SSPCON2bits.RSEN = 1;
  2527                           
  2528     0312  1683               	bsf	3,5	;RP0=1, select bank1
  2529     0313  1303               	bcf	3,6	;RP1=0, select bank1
  2530     0314  1914               	btfsc	20,2	;volatile
  2531     0315  2B17               	goto	u421
  2532     0316  2B18               	goto	u420
  2533     0317                     u421:
  2534     0317  2B12               	goto	l56
  2535     0318                     u420:
  2536     0318                     l1193:
  2537     0318  0811               	movf	17,w	;volatile
  2538     0319  391F               	andlw	31
  2539     031A  1D03               	btfss	3,2
  2540     031B  2B1D               	goto	u431
  2541     031C  2B1E               	goto	u430
  2542     031D                     u431:
  2543     031D  2B12               	goto	l56
  2544     031E                     u430:
  2545     031E                     l59:
  2546     031E  0008               	return
  2547     031F                     __end_of_I2C_IDLE:
  2548                           
  2549                           	psect	text15
  2550     03F2                     __ptext15:	
  2551 ;; *************** function _I2C_Master_Init *****************
  2552 ;; Defined at:
  2553 ;;		line 29 in file "newmain.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  c               4    0[BANK0 ] const unsigned long 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;		None
  2558 ;; Return value:  Size  Location     Type
  2559 ;;                  1    wreg      void 
  2560 ;; Registers used:
  2561 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2562 ;; Tracked objects:
  2563 ;;		On entry : 0/0
  2564 ;;		On exit  : 0/0
  2565 ;;		Unchanged: 0/0
  2566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2567 ;;      Params:         0       4       0       0       0
  2568 ;;      Locals:         0       0       0       0       0
  2569 ;;      Temps:          0       4       0       0       0
  2570 ;;      Totals:         0       8       0       0       0
  2571 ;;Total ram usage:        8 bytes
  2572 ;; Hardware stack levels used: 1
  2573 ;; Hardware stack levels required when called: 1
  2574 ;; This function calls:
  2575 ;;		___lldiv
  2576 ;; This function is called by:
  2577 ;;		_main
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581     03F2                     _I2C_Master_Init:	
  2582                           ;psect for function _I2C_Master_Init
  2583                           
  2584     03F2                     l1339:	
  2585                           ;incstack = 0
  2586                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2587                           
  2588                           
  2589                           ;newmain.c: 30: 
  2590     03F2  3028               	movlw	40
  2591     03F3  1283               	bcf	3,5	;RP0=0, select bank0
  2592     03F4  1303               	bcf	3,6	;RP1=0, select bank0
  2593     03F5  0094               	movwf	20	;volatile
  2594     03F6                     l1341:
  2595                           
  2596                           ;newmain.c: 31: void I2C_Stop()
  2597     03F6  1683               	bsf	3,5	;RP0=1, select bank1
  2598     03F7  1303               	bcf	3,6	;RP1=0, select bank1
  2599     03F8  0191               	clrf	17	;volatile
  2600     03F9                     l1343:
  2601                           
  2602                           ;newmain.c: 32: {
  2603     03F9  0194               	clrf	20	;volatile
  2604     03FA                     l1345:
  2605                           
  2606                           ;newmain.c: 33: I2C_IDLE();
  2607     03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2608     03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2609     03FC  0820               	movf	I2C_Master_Init@c,w
  2610     03FD  00A4               	movwf	??_I2C_Master_Init
  2611     03FE  0821               	movf	I2C_Master_Init@c+1,w
  2612     03FF  00A5               	movwf	??_I2C_Master_Init+1
  2613     0400  0822               	movf	I2C_Master_Init@c+2,w
  2614     0401  00A6               	movwf	??_I2C_Master_Init+2
  2615     0402  0823               	movf	I2C_Master_Init@c+3,w
  2616     0403  00A7               	movwf	??_I2C_Master_Init+3
  2617     0404  3002               	movlw	2
  2618     0405                     u675:
  2619     0405  1003               	clrc
  2620     0406  0DA4               	rlf	??_I2C_Master_Init,f
  2621     0407  0DA5               	rlf	??_I2C_Master_Init+1,f
  2622     0408  0DA6               	rlf	??_I2C_Master_Init+2,f
  2623     0409  0DA7               	rlf	??_I2C_Master_Init+3,f
  2624     040A                     u670:
  2625     040A  3EFF               	addlw	-1
  2626     040B  1D03               	skipz
  2627     040C  2C05               	goto	u675
  2628     040D  0827               	movf	??_I2C_Master_Init+3,w
  2629     040E  00F3               	movwf	___lldiv@divisor+3
  2630     040F  0826               	movf	??_I2C_Master_Init+2,w
  2631     0410  00F2               	movwf	___lldiv@divisor+2
  2632     0411  0825               	movf	??_I2C_Master_Init+1,w
  2633     0412  00F1               	movwf	___lldiv@divisor+1
  2634     0413  0824               	movf	??_I2C_Master_Init,w
  2635     0414  00F0               	movwf	___lldiv@divisor
  2636     0415  3001               	movlw	1
  2637     0416  00F7               	movwf	___lldiv@dividend+3
  2638     0417  3031               	movlw	49
  2639     0418  00F6               	movwf	___lldiv@dividend+2
  2640     0419  302D               	movlw	45
  2641     041A  00F5               	movwf	___lldiv@dividend+1
  2642     041B  3000               	movlw	0
  2643     041C  00F4               	movwf	___lldiv@dividend
  2644     041D  120A  118A  2527  120A  118A  	fcall	___lldiv
  2645     0422  0870               	movf	?___lldiv,w
  2646     0423  3EFF               	addlw	255
  2647     0424  1683               	bsf	3,5	;RP0=1, select bank1
  2648     0425  1303               	bcf	3,6	;RP1=0, select bank1
  2649     0426  0093               	movwf	19	;volatile
  2650     0427                     l1347:
  2651                           
  2652                           ;newmain.c: 34: SSPCON2bits.PEN = 1;
  2653     0427  1587               	bsf	7,3	;volatile
  2654     0428                     l1349:
  2655                           
  2656                           ;newmain.c: 35: }
  2657     0428  1607               	bsf	7,4	;volatile
  2658     0429                     l53:
  2659     0429  0008               	return
  2660     042A                     __end_of_I2C_Master_Init:
  2661                           
  2662                           	psect	text16
  2663     0527                     __ptext16:	
  2664 ;; *************** function ___lldiv *****************
  2665 ;; Defined at:
  2666 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;  divisor         4    0[COMMON] unsigned long 
  2669 ;;  dividend        4    4[COMMON] unsigned long 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  quotient        4    9[COMMON] unsigned long 
  2672 ;;  counter         1   13[COMMON] unsigned char 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  4    0[COMMON] unsigned long 
  2675 ;; Registers used:
  2676 ;;		wreg, status,2, status,0, btemp+1
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2682 ;;      Params:         8       0       0       0       0
  2683 ;;      Locals:         5       0       0       0       0
  2684 ;;      Temps:          1       0       0       0       0
  2685 ;;      Totals:        14       0       0       0       0
  2686 ;;Total ram usage:       14 bytes
  2687 ;; Hardware stack levels used: 1
  2688 ;; This function calls:
  2689 ;;		Nothing
  2690 ;; This function is called by:
  2691 ;;		_I2C_Master_Init
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695     0527                     ___lldiv:	
  2696                           ;psect for function ___lldiv
  2697                           
  2698     0527                     l1265:	
  2699                           ;incstack = 0
  2700                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  2701                           
  2702     0527  3000               	movlw	0
  2703     0528  00FC               	movwf	___lldiv@quotient+3
  2704     0529  3000               	movlw	0
  2705     052A  00FB               	movwf	___lldiv@quotient+2
  2706     052B  3000               	movlw	0
  2707     052C  00FA               	movwf	___lldiv@quotient+1
  2708     052D  3000               	movlw	0
  2709     052E  00F9               	movwf	___lldiv@quotient
  2710     052F  0873               	movf	___lldiv@divisor+3,w
  2711     0530  0472               	iorwf	___lldiv@divisor+2,w
  2712     0531  0471               	iorwf	___lldiv@divisor+1,w
  2713     0532  0470               	iorwf	___lldiv@divisor,w
  2714     0533  1903               	skipnz
  2715     0534  2D36               	goto	u471
  2716     0535  2D37               	goto	u470
  2717     0536                     u471:
  2718     0536  2D84               	goto	l1287
  2719     0537                     u470:
  2720     0537                     l1267:
  2721     0537  01FD               	clrf	___lldiv@counter
  2722     0538  0AFD               	incf	___lldiv@counter,f
  2723     0539  2D47               	goto	l1273
  2724     053A                     l1269:
  2725     053A  3001               	movlw	1
  2726     053B  00F8               	movwf	??___lldiv
  2727     053C                     u485:
  2728     053C  1003               	clrc
  2729     053D  0DF0               	rlf	___lldiv@divisor,f
  2730     053E  0DF1               	rlf	___lldiv@divisor+1,f
  2731     053F  0DF2               	rlf	___lldiv@divisor+2,f
  2732     0540  0DF3               	rlf	___lldiv@divisor+3,f
  2733     0541  0BF8               	decfsz	??___lldiv,f
  2734     0542  2D3C               	goto	u485
  2735     0543                     l1271:
  2736     0543  3001               	movlw	1
  2737     0544  00FF               	movwf	btemp+1
  2738     0545  087F               	movf	btemp+1,w
  2739     0546  07FD               	addwf	___lldiv@counter,f
  2740     0547                     l1273:
  2741     0547  1FF3               	btfss	___lldiv@divisor+3,7
  2742     0548  2D4A               	goto	u491
  2743     0549  2D4B               	goto	u490
  2744     054A                     u491:
  2745     054A  2D3A               	goto	l1269
  2746     054B                     u490:
  2747     054B                     l1275:
  2748     054B  3001               	movlw	1
  2749     054C  00F8               	movwf	??___lldiv
  2750     054D                     u505:
  2751     054D  1003               	clrc
  2752     054E  0DF9               	rlf	___lldiv@quotient,f
  2753     054F  0DFA               	rlf	___lldiv@quotient+1,f
  2754     0550  0DFB               	rlf	___lldiv@quotient+2,f
  2755     0551  0DFC               	rlf	___lldiv@quotient+3,f
  2756     0552  0BF8               	decfsz	??___lldiv,f
  2757     0553  2D4D               	goto	u505
  2758     0554                     l1277:
  2759     0554  0873               	movf	___lldiv@divisor+3,w
  2760     0555  0277               	subwf	___lldiv@dividend+3,w
  2761     0556  1D03               	skipz
  2762     0557  2D62               	goto	u515
  2763     0558  0872               	movf	___lldiv@divisor+2,w
  2764     0559  0276               	subwf	___lldiv@dividend+2,w
  2765     055A  1D03               	skipz
  2766     055B  2D62               	goto	u515
  2767     055C  0871               	movf	___lldiv@divisor+1,w
  2768     055D  0275               	subwf	___lldiv@dividend+1,w
  2769     055E  1D03               	skipz
  2770     055F  2D62               	goto	u515
  2771     0560  0870               	movf	___lldiv@divisor,w
  2772     0561  0274               	subwf	___lldiv@dividend,w
  2773     0562                     u515:
  2774     0562  1C03               	skipc
  2775     0563  2D65               	goto	u511
  2776     0564  2D66               	goto	u510
  2777     0565                     u511:
  2778     0565  2D75               	goto	l1283
  2779     0566                     u510:
  2780     0566                     l1279:
  2781     0566  0870               	movf	___lldiv@divisor,w
  2782     0567  02F4               	subwf	___lldiv@dividend,f
  2783     0568  0871               	movf	___lldiv@divisor+1,w
  2784     0569  1C03               	skipc
  2785     056A  0F71               	incfsz	___lldiv@divisor+1,w
  2786     056B  02F5               	subwf	___lldiv@dividend+1,f
  2787     056C  0872               	movf	___lldiv@divisor+2,w
  2788     056D  1C03               	skipc
  2789     056E  0F72               	incfsz	___lldiv@divisor+2,w
  2790     056F  02F6               	subwf	___lldiv@dividend+2,f
  2791     0570  0873               	movf	___lldiv@divisor+3,w
  2792     0571  1C03               	skipc
  2793     0572  0F73               	incfsz	___lldiv@divisor+3,w
  2794     0573  02F7               	subwf	___lldiv@dividend+3,f
  2795     0574                     l1281:
  2796     0574  1479               	bsf	___lldiv@quotient,0
  2797     0575                     l1283:
  2798     0575  3001               	movlw	1
  2799     0576                     u525:
  2800     0576  1003               	clrc
  2801     0577  0CF3               	rrf	___lldiv@divisor+3,f
  2802     0578  0CF2               	rrf	___lldiv@divisor+2,f
  2803     0579  0CF1               	rrf	___lldiv@divisor+1,f
  2804     057A  0CF0               	rrf	___lldiv@divisor,f
  2805     057B  3EFF               	addlw	-1
  2806     057C  1D03               	skipz
  2807     057D  2D76               	goto	u525
  2808     057E                     l1285:
  2809     057E  3001               	movlw	1
  2810     057F  02FD               	subwf	___lldiv@counter,f
  2811     0580  1D03               	btfss	3,2
  2812     0581  2D83               	goto	u531
  2813     0582  2D84               	goto	u530
  2814     0583                     u531:
  2815     0583  2D4B               	goto	l1275
  2816     0584                     u530:
  2817     0584                     l1287:
  2818     0584  087C               	movf	___lldiv@quotient+3,w
  2819     0585  00F3               	movwf	?___lldiv+3
  2820     0586  087B               	movf	___lldiv@quotient+2,w
  2821     0587  00F2               	movwf	?___lldiv+2
  2822     0588  087A               	movf	___lldiv@quotient+1,w
  2823     0589  00F1               	movwf	?___lldiv+1
  2824     058A  0879               	movf	___lldiv@quotient,w
  2825     058B  00F0               	movwf	?___lldiv
  2826     058C                     l291:
  2827     058C  0008               	return
  2828     058D                     __end_of___lldiv:
  2829                           
  2830                           	psect	text17
  2831     02F7                     __ptext17:	
  2832 ;; *************** function _ADC_Setup *****************
  2833 ;; Defined at:
  2834 ;;		line 98 in file "newmain.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;		None
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;		None
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      void 
  2841 ;; Registers used:
  2842 ;;		wreg
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2848 ;;      Params:         0       0       0       0       0
  2849 ;;      Locals:         0       0       0       0       0
  2850 ;;      Temps:          0       0       0       0       0
  2851 ;;      Totals:         0       0       0       0       0
  2852 ;;Total ram usage:        0 bytes
  2853 ;; Hardware stack levels used: 1
  2854 ;; This function calls:
  2855 ;;		Nothing
  2856 ;; This function is called by:
  2857 ;;		_main
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861     02F7                     _ADC_Setup:	
  2862                           ;psect for function _ADC_Setup
  2863                           
  2864     02F7                     l1351:	
  2865                           ;incstack = 0
  2866                           ; Regs used in _ADC_Setup: [wreg]
  2867                           
  2868                           
  2869                           ;newmain.c: 99: {
  2870     02F7  3081               	movlw	129
  2871     02F8  1283               	bcf	3,5	;RP0=0, select bank0
  2872     02F9  1303               	bcf	3,6	;RP1=0, select bank0
  2873     02FA  009F               	movwf	31	;volatile
  2874                           
  2875                           ;newmain.c: 100:   char data_u, data_l;
  2876     02FB  3080               	movlw	128
  2877     02FC  1683               	bsf	3,5	;RP0=1, select bank1
  2878     02FD  1303               	bcf	3,6	;RP1=0, select bank1
  2879     02FE  009F               	movwf	31	;volatile
  2880     02FF                     l92:
  2881     02FF  0008               	return
  2882     0300                     __end_of_ADC_Setup:
  2883                           
  2884                           	psect	text18
  2885     0395                     __ptext18:	
  2886 ;; *************** function _ADC_Read *****************
  2887 ;; Defined at:
  2888 ;;		line 102 in file "newmain.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;  channel         2    0[COMMON] int 
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  2    0[COMMON] unsigned int 
  2895 ;; Registers used:
  2896 ;;		wreg, status,2, status,0, btemp+1
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2902 ;;      Params:         2       0       0       0       0
  2903 ;;      Locals:         0       0       0       0       0
  2904 ;;      Temps:          1       0       0       0       0
  2905 ;;      Totals:         3       0       0       0       0
  2906 ;;Total ram usage:        3 bytes
  2907 ;; Hardware stack levels used: 1
  2908 ;; This function calls:
  2909 ;;		Nothing
  2910 ;; This function is called by:
  2911 ;;		_main
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915     0395                     _ADC_Read:	
  2916                           ;psect for function _ADC_Read
  2917                           
  2918     0395                     l1353:	
  2919                           ;incstack = 0
  2920                           ; Regs used in _ADC_Read: [wreg+status,2+status,0+btemp+1]
  2921                           
  2922                           
  2923                           ;newmain.c: 103:  data_l = ((cmd<<4)&0xf0);
  2924     0395  0871               	movf	ADC_Read@channel+1,w
  2925     0396  3A80               	xorlw	128
  2926     0397  00FF               	movwf	btemp+1
  2927     0398  3080               	movlw	128
  2928     0399  027F               	subwf	btemp+1,w
  2929     039A  1D03               	skipz
  2930     039B  2B9E               	goto	u685
  2931     039C  3008               	movlw	8
  2932     039D  0270               	subwf	ADC_Read@channel,w
  2933     039E                     u685:
  2934     039E  1C03               	skipc
  2935     039F  2BA1               	goto	u681
  2936     03A0  2BA2               	goto	u680
  2937     03A1                     u681:
  2938     03A1  2BA5               	goto	l95
  2939     03A2                     u680:
  2940     03A2                     l1355:
  2941                           
  2942                           ;newmain.c: 104:  data_t[0] = data_u|0x0C;
  2943     03A2  01F0               	clrf	?_ADC_Read
  2944     03A3  01F1               	clrf	?_ADC_Read+1
  2945     03A4  2BC2               	goto	l96
  2946     03A5                     l95:
  2947                           
  2948                           ;newmain.c: 106:  data_t[2] = data_l|0x0C;
  2949     03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2950     03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2951     03A7  119F               	bcf	31,3	;volatile
  2952                           
  2953                           ;newmain.c: 107:  data_t[3] = data_l|0x08;
  2954     03A8  121F               	bcf	31,4	;volatile
  2955                           
  2956                           ;newmain.c: 108:     I2C_Start();
  2957     03A9  129F               	bcf	31,5	;volatile
  2958     03AA                     l1359:
  2959                           
  2960                           ;newmain.c: 110:     I2C_Stop();
  2961     03AA  0870               	movf	ADC_Read@channel,w	;volatile
  2962     03AB  00F2               	movwf	??_ADC_Read
  2963     03AC  3002               	movlw	2
  2964     03AD                     u695:
  2965     03AD  1003               	clrc
  2966     03AE  0DF2               	rlf	??_ADC_Read,f
  2967     03AF  3EFF               	addlw	-1
  2968     03B0  1D03               	skipz
  2969     03B1  2BAD               	goto	u695
  2970     03B2  1003               	clrc
  2971     03B3  0D72               	rlf	??_ADC_Read,w
  2972     03B4  00FF               	movwf	btemp+1
  2973     03B5  087F               	movf	btemp+1,w
  2974     03B6  049F               	iorwf	31,f	;volatile
  2975     03B7                     l1361:
  2976                           
  2977                           ;newmain.c: 111: 
  2978     03B7  151F               	bsf	31,2	;volatile
  2979     03B8                     l97:	
  2980                           ;newmain.c: 112:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2981                           
  2982     03B8  191F               	btfsc	31,2	;volatile
  2983     03B9  2BBB               	goto	u701
  2984     03BA  2BBC               	goto	u700
  2985     03BB                     u701:
  2986     03BB  2BB8               	goto	l97
  2987     03BC                     u700:
  2988     03BC                     l1363:
  2989                           
  2990                           ;newmain.c: 113: 
  2991     03BC  081E               	movf	30,w	;volatile
  2992     03BD  00F1               	movwf	?_ADC_Read+1
  2993     03BE  1683               	bsf	3,5	;RP0=1, select bank1
  2994     03BF  1303               	bcf	3,6	;RP1=0, select bank1
  2995     03C0  081E               	movf	30,w	;volatile
  2996     03C1  00F0               	movwf	?_ADC_Read
  2997     03C2                     l96:
  2998     03C2  0008               	return
  2999     03C3                     __end_of_ADC_Read:
  3000     007E                     btemp	set	126	;btemp
  3001     007E                     wtemp0	set	126
  3002                           
  3003                           	psect	config
  3004                           
  3005                           ;Config register CONFIG @ 0x2007
  3006                           ;	Oscillator Selection bits
  3007                           ;	FOSC = HS, HS oscillator
  3008                           ;	Watchdog Timer Enable bit
  3009                           ;	WDTE = OFF, WDT disabled
  3010                           ;	Power-up Timer Enable bit
  3011                           ;	PWRTE = OFF, PWRT disabled
  3012                           ;	Brown-out Reset Enable bit
  3013                           ;	BOREN = ON, BOR enabled
  3014                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3015                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3016                           ;	Data EEPROM Memory Code Protection bit
  3017                           ;	CPD = OFF, Data EEPROM code protection off
  3018                           ;	Flash Program Memory Write Enable bits
  3019                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3020                           ;	In-Circuit Debugger Mode bit
  3021                           ;	DEBUG = 0x1, unprogrammed default
  3022                           ;	Flash Program Memory Code Protection bit
  3023                           ;	CP = OFF, Code protection off
  3024     2007                     	org	8199
  3025     2007  3F7A               	dw	16250

Data Sizes:
    Strings     33
    Constant    10
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     24      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_5(CODE[3]), STR_4(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> main@str2(BANK0[4]), main@str1(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_send_string@str	PTR unsigned char  size(2) Largest target is 13
		 -> main@str2(BANK0[4]), main@str1(BANK0[4]), STR_3(CODE[9]), STR_2(CODE[8]), 
		 -> STR_1(CODE[13]), 

    I2C_Multi_Send@data	PTR unsigned char  size(1) Largest target is 4
		 -> lcd_send_data@data_t(BANK0[4]), lcd_send_cmd@data_t(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_lcd_init
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_send_string->_lcd_send_data
    _lcd_put_cur->_lcd_send_cmd
    _lcd_init->_lcd_send_cmd
    _lcd_clear->_lcd_send_cmd
    _lcd_clear->_lcd_send_data
    _lcd_send_data->_I2C_Multi_Send
    _lcd_send_cmd->_I2C_Multi_Send
    _I2C_Multi_Send->_I2C_Write
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _lcd_send_string->_lcd_send_data
    _lcd_put_cur->_lcd_send_cmd
    _lcd_init->_lcd_send_cmd
    _lcd_clear->_lcd_send_cmd
    _lcd_clear->_lcd_send_data

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    7376
                                             13 BANK0     11    11      0
                           _ADC_Read
                          _ADC_Setup
                    _I2C_Master_Init
                          _lcd_clear
                           _lcd_init
                        _lcd_put_cur
                    _lcd_send_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1320
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _lcd_send_string                                      2     0      2    1268
                                             11 COMMON     2     0      2
                      _lcd_send_data
 ---------------------------------------------------------------------------------
 (1) _lcd_put_cur                                          4     0      4    1497
                                              7 BANK0      4     0      4
                       _lcd_send_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     843
                                             11 COMMON     3     3      0
                       _lcd_send_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            2     2      0    1732
                                             11 COMMON     2     2      0
                       _lcd_send_cmd
                      _lcd_send_data
 ---------------------------------------------------------------------------------
 (2) _lcd_send_data                                        9     9      0     843
                                              9 COMMON     2     2      0
                                              0 BANK0      7     7      0
                     _I2C_Multi_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _lcd_send_cmd                                         9     9      0     843
                                              9 COMMON     2     2      0
                                              0 BANK0      7     7      0
                     _I2C_Multi_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
                           _I2C_IDLE
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
                           _I2C_IDLE
 ---------------------------------------------------------------------------------
 (3) _I2C_Multi_Send                                       9     5      4     613
                                              1 COMMON     8     4      4
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _I2C_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_IDLE                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _ADC_Setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             3     1      2     196
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _ADC_Setup
   _I2C_Master_Init
     ___lldiv
   _lcd_clear
     _lcd_send_cmd
       _I2C_Multi_Send
         _I2C_Write
           _I2C_IDLE
       _I2C_Start
         _I2C_IDLE
       _I2C_Stop
         _I2C_IDLE
     _lcd_send_data
       _I2C_Multi_Send
       _I2C_Start
       _I2C_Stop
   _lcd_init
     _lcd_send_cmd
   _lcd_put_cur
     _lcd_send_cmd
   _lcd_send_string
     _lcd_send_data
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      1C       5       35.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2A      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Jun 12 11:42:28 2024

        I2C_Multi_Send@n 0077            ?_lcd_send_cmd 0070                        pc 0002  
           ?_lcd_put_cur 0027           ?_lcd_send_data 0070                       l53 0429  
                     l62 0308        I2C_Multi_Send@cmd 0070                       l56 0312  
                     l65 0311                       l59 031E                       l92 02FF  
                     l77 032E                       l95 03A5                       l96 03C2  
                     l97 03B8                       l89 03F1                       fsr 0004  
                    l102 04E2                      l110 036E                      l120 061B  
                    l105 04A2                      l114 0330                      l117 034C  
                    l126 0394                      l138 0770                      l251 06F5  
                    l291 058C                      l527 0526                      l537 0463  
     I2C_Multi_Send@data 0072                      u420 0318                      u421 0317  
                    u510 0566                      u430 031E                      u511 0565  
                    u431 031D                      u440 03F1                      u600 0522  
                    u505 054D                      u441 03F0                      u601 0521  
                    u530 0584                      u610 0430                      u531 0583  
                    u515 0562                      u611 042F                      u700 03BC  
                    u540 04EB                      u701 03BB                      u525 0576  
                    u445 03ED                      u541 04EA                      u470 0537  
                    u710 036E                      u630 0442                      u471 0536  
                    u455 04AC                      u711 036D                      u631 0441  
                    u720 0394                      u560 04FD                      u640 044C  
                    u465 046D                      u721 0393                      u561 04FC  
                    u641 044B                      u625 0434                      u490 054B  
                    u730 0628                      u491 054A                      u715 036A  
                    u555 04EF                      u731 0627                      u580 050E  
                    u660 045F                      u740 0660                      u485 053C  
                    u581 050D                      u661 045E                      u645 0448  
                    u741 065F                      u670 040A                      u750 0686  
                    u575 04FE                      u655 0453                      u751 0685  
                    u807 0728                      u680 03A2                      u760 0691  
                    u681 03A1                      u585 050A                      u761 0690  
                    u817 0769                      u770 0697                      u675 0405  
                    u907 05ED                      u595 0516                      u771 0696  
                    u755 0682                      u827 07C8                      u780 06E1  
                    u685 039E                      u917 05FB                      u781 06E0  
                    u837 07EC                      u790 06F1                      u695 03AD  
                    u927 0603                      u847 0593                      u791 06F0  
                    u937 0611                      u857 05A4                      u947 049E  
                    u867 05B3                      u957 04DD                      u877 05C1  
                    u887 05D0                      u897 05DF       I2C_Multi_Send@send 0076  
     I2C_Multi_Send@size 0073                      fsr0 0004                      indf 0000  
                   l1201 032E                     l1211 030E                     l1221 03DD  
                   l1213 03C3                     l1205 0300                     l1301 04F9  
                   l1223 03E3                     l1215 03C8                     l1207 0305  
                   l1231 04B8                     l1311 051C                     l1303 04FD  
                   l1217 03CE                     l1209 0309                     l1241 04D4  
                   l1233 04BB                     l1225 04A6                     l1401 05AF  
                   l1305 050E                     l1313 0522                     l1321 0433  
                   l1219 03D1                     l1243 04D9                     l1235 04BE  
                   l1227 04A9                     l1251 0479                     l1411 05E3  
                   l1403 05B7                     l1307 0514                     l1331 0452  
                   l1323 043A                     l1341 03F6                     l1237 04C1  
                   l1229 04B5                     l1261 0495                     l1253 047C  
                   l1245 0467                     l1421 0615                     l1413 05F1  
                   l1405 05C6                     l1309 0515                     l1333 0459  
                   l1325 043E                     l1317 042A                     l1351 02F7  
                   l1271 0543                     l1343 03F9                     l1191 0312  
                   l1239 04C6                     l1263 049A                     l1255 047F  
                   l1247 046A                     l1415 05F7                     l1407 05CC  
                   l1423 036F                     l1327 0442                     l1319 0430  
                   l1335 045F                     l1431 061F                     l1511 06F6  
                   l1361 03B7                     l1353 0395                     l1281 0574  
                   l1273 0547                     l1265 0527                     l1345 03FA  
                   l1193 0318                     l1257 0482                     l1249 0476  
                   l1417 05FF                     l1409 05DB                     l1425 0370  
                   l1329 044C                     l1433 0622                     l1521 0700  
                   l1513 06FA                     l1363 03BC                     l1355 03A2  
                   l1283 0575                     l1275 054B                     l1267 0537  
                   l1347 0427                     l1339 03F2                     l1195 0320  
                   l1259 0487                     l1419 0607                     l1427 037E  
                   l1291 04E3                     l1451 0660                     l1443 0633  
                   l1435 0628                     l1531 0734                     l1523 070D  
                   l1515 06FB                     l1285 057E                     l1277 0554  
                   l1269 053A                     l1349 0428                     l1197 0325  
                   l1381 032F                     l1429 0384                     l1293 04E5  
                   l1461 066B                     l1453 0664                     l1445 0650  
                   l1437 062D                     l1541 0775                     l1533 0741  
                   l1525 0712                     l1517 06FC                     l1359 03AA  
                   l1279 0566                     l1287 0584                     l1199 0329  
                   l1375 0355                     l1367 034D                     l1383 0332  
                   l1295 04EB                     l1471 0697                     l1455 0669  
                   l1447 0658                     l1439 0632                     l1551 07CD  
                   l1543 0783                     l1535 074A                     l1527 0717  
                   l1519 06FF                     l1377 035B                     l1369 0353  
                   l1297 04EE                     l1481 06D4                     l1473 069C  
                   l1465 0687                     l1449 065C                     l1553 07DB  
                   l1545 07AC                     l1537 0758                     l1529 072F  
                   l1379 0361                     l1395 058D                     l1387 0337  
                   l1299 04F5                     l1483 06D8                     l1475 06A0  
                   l1467 068B                     l1555 07E4                     l1547 07B9  
                   l1539 0761                     l1397 059A                     l1389 0346  
                   l1477 06A3                     l1469 0691                     l1485 06E1  
                   l1549 07C2                     l1399 05A0                     l1479 06CF  
                   l1487 06F1                     l1597 0645                     l1599 033E  
                   STR_1 001D                     STR_2 0033                     STR_3 002A  
                   STR_4 003B                     STR_5 003B         __end_of_I2C_IDLE 031F  
                   _main 06F6                     btemp 007E         __end_of_I2C_Stop 0312  
       ?_lcd_send_string 007B         __end_of_ADC_Read 03C3                     start 0000  
         ??_lcd_send_cmd 0079         ?_I2C_Master_Init 0020                    ?_main 0070  
        __end_of___lldiv 058D          __end_of___lwdiv 0527          __end_of___lwmod 0464  
                  _PORTB 0006                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _SSPIF 0063  
        __end_of_dpowers 001D        __end_of_I2C_Start 0309        __end_of_I2C_Write 032F  
                  pclath 000A        __end_of_ADC_Setup 0300                    status 0003  
                  wtemp0 007E          __end_of_sprintf 06F6          __initialization 07F6  
        ??_lcd_send_data 0079             __end_of_main 07F6                   ??_main 002D  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E    I2C_Multi_Send@address 0071                   _SSPADD 0093  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of_lcd_init 061C  
              ??___lldiv 0078                ??___lwdiv 0074                ??___lwmod 007B  
        ADC_Read@channel 0070                ?_I2C_IDLE 0070                ?_I2C_Stop 0070  
              ?_ADC_Read 0070     __end_of_lcd_send_cmd 04E3                ??_sprintf 0023  
__end_of__initialization 07FC       lcd_send_cmd@data_l 0026       lcd_send_cmd@data_t 0020  
     lcd_send_cmd@data_u 0025           __pcstackCOMMON 0070               ??_I2C_IDLE 0070  
             ??_I2C_Stop 0070               ??_ADC_Read 0072               __pbssBANK0 0038  
             __pmaintext 06F6                  _ACKSTAT 048E                  _GO_DONE 00FA  
                _SSPCON2 0091                ?_lcd_init 0070                  _SSPSTAT 0094  
             __stringtab 0003                _I2C_Start 0300                _I2C_Write 031F  
              _ADC_Setup 02F7        __end_of_lcd_clear 036F                  ___lldiv 0527  
                ___lwdiv 04E3                  ___lwmod 042A                  __ptext1 061C  
                __ptext2 042A                  __ptext3 04E3                  __ptext4 036F  
                __ptext5 032F                  __ptext6 058D                  __ptext7 034D  
                __ptext8 0464                  __ptext9 04A3                  _dpowers 0013  
                _sprintf 061C               ??_lcd_init 007B           lcd_put_cur@col 0029  
         lcd_put_cur@row 0027     end_of_initialization 07FC               ?_I2C_Start 0070  
             ?_I2C_Write 0070               ?_ADC_Setup 0070          ___lldiv@divisor 0070  
        ___lldiv@counter 007D         I2C_Master_Init@c 0020             _lcd_send_cmd 04A3  
  __end_of_lcd_send_data 04A3           _I2C_Multi_Send 03C3                _TRISCbits 0087  
             lcd_clear@i 007B       lcd_send_string@str 007B   __end_of_I2C_Multi_Send 03F2  
          ??_lcd_put_cur 007B      lcd_send_data@data_l 0026      lcd_send_data@data_t 0020  
    lcd_send_data@data_u 0025              _adc_value_1 003A              _adc_value_2 0038  
      ??_lcd_send_string 007D      start_initialization 07F6        ??_I2C_Master_Init 0024  
            ??_I2C_Start 0070              ??_I2C_Write 0070              ??_ADC_Setup 0070  
        ?_I2C_Multi_Send 0071      __end_of_lcd_put_cur 034D                ___latbits 0002  
          __pcstackBANK0 0020        lcd_send_data@data 0024              sprintf@flag 0027  
            sprintf@prec 0028          lcd_send_cmd@cmd 0024         ___lwdiv@dividend 0072  
               ?___lldiv 0070                 ?___lwdiv 0070                 ?___lwmod 0077  
              _lcd_clear 034D                __pstrings 0003                 _I2C_IDLE 0312  
               _I2C_Stop 0309                 _ADC_Read 0395         ___lwdiv@quotient 0074  
               ?_sprintf 0020              _lcd_put_cur 032F               ?_lcd_clear 0070  
             _ADCON0bits 001F              __stringbase 0012            I2C_Write@Data 0070  
        _lcd_send_string 036F       __end_of__stringtab 0013               sprintf@val 0029  
        _I2C_Master_Init 03F2          ___lwdiv@divisor 0070          ___lwdiv@counter 0076  
               __ptext10 0309                 __ptext11 0300                 __ptext12 03C3  
               __ptext13 031F                 __ptext14 0312                 __ptext15 03F2  
               __ptext16 0527                 __ptext17 02F7                 __ptext18 0395  
               _lcd_init 058D         ??_I2C_Multi_Send 0075              ??_lcd_clear 007B  
               main@str1 0030                 main@str2 0034                sprintf@ap 0026  
              sprintf@sp 002B         ___lwmod@dividend 0079         ___lldiv@dividend 0074  
__end_of_lcd_send_string 0395                stringcode 000D  __end_of_I2C_Master_Init 042A  
          _lcd_send_data 0464                 sprintf@c 002C                 sprintf@f 0020  
       ___lldiv@quotient 0079          ___lwmod@divisor 0077          ___lwmod@counter 007B  
               stringdir 000D                 stringtab 0003              _SSPCON2bits 0091  
