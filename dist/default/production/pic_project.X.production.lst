

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Jun 12 12:48:27 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Generated 22/03/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52     0000                     	;# 
    53     0001                     	;# 
    54     0002                     	;# 
    55     0003                     	;# 
    56     0004                     	;# 
    57     0005                     	;# 
    58     0006                     	;# 
    59     0007                     	;# 
    60     0008                     	;# 
    61     0009                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000D                     	;# 
    66     000E                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0015                     	;# 
    76     0016                     	;# 
    77     0017                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001B                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     0081                     	;# 
    88     0085                     	;# 
    89     0086                     	;# 
    90     0087                     	;# 
    91     0088                     	;# 
    92     0089                     	;# 
    93     008C                     	;# 
    94     008D                     	;# 
    95     008E                     	;# 
    96     0091                     	;# 
    97     0092                     	;# 
    98     0093                     	;# 
    99     0094                     	;# 
   100     0098                     	;# 
   101     0099                     	;# 
   102     009C                     	;# 
   103     009D                     	;# 
   104     009E                     	;# 
   105     009F                     	;# 
   106     010C                     	;# 
   107     010D                     	;# 
   108     010E                     	;# 
   109     010F                     	;# 
   110     018C                     	;# 
   111     018D                     	;# 
   112     0000                     	;# 
   113     0001                     	;# 
   114     0002                     	;# 
   115     0003                     	;# 
   116     0004                     	;# 
   117     0005                     	;# 
   118     0006                     	;# 
   119     0007                     	;# 
   120     0008                     	;# 
   121     0009                     	;# 
   122     000A                     	;# 
   123     000B                     	;# 
   124     000C                     	;# 
   125     000D                     	;# 
   126     000E                     	;# 
   127     000E                     	;# 
   128     000F                     	;# 
   129     0010                     	;# 
   130     0011                     	;# 
   131     0012                     	;# 
   132     0013                     	;# 
   133     0014                     	;# 
   134     0015                     	;# 
   135     0015                     	;# 
   136     0016                     	;# 
   137     0017                     	;# 
   138     0018                     	;# 
   139     0019                     	;# 
   140     001A                     	;# 
   141     001B                     	;# 
   142     001B                     	;# 
   143     001C                     	;# 
   144     001D                     	;# 
   145     001E                     	;# 
   146     001F                     	;# 
   147     0081                     	;# 
   148     0085                     	;# 
   149     0086                     	;# 
   150     0087                     	;# 
   151     0088                     	;# 
   152     0089                     	;# 
   153     008C                     	;# 
   154     008D                     	;# 
   155     008E                     	;# 
   156     0091                     	;# 
   157     0092                     	;# 
   158     0093                     	;# 
   159     0094                     	;# 
   160     0098                     	;# 
   161     0099                     	;# 
   162     009C                     	;# 
   163     009D                     	;# 
   164     009E                     	;# 
   165     009F                     	;# 
   166     010C                     	;# 
   167     010D                     	;# 
   168     010E                     	;# 
   169     010F                     	;# 
   170     018C                     	;# 
   171     018D                     	;# 
   172     0013                     _SSPBUF	set	19
   173     0014                     _SSPCON	set	20
   174     0006                     _PORTB	set	6
   175     003A                     _RC2	set	58
   176     0039                     _RC1	set	57
   177     0038                     _RC0	set	56
   178     0063                     _SSPIF	set	99
   179     0086                     _TRISB	set	134
   180     0091                     _SSPCON2bits	set	145
   181     0087                     _TRISCbits	set	135
   182     0093                     _SSPADD	set	147
   183     0094                     _SSPSTAT	set	148
   184     0091                     _SSPCON2	set	145
   185     043A                     _TRISC2	set	1082
   186     0439                     _TRISC1	set	1081
   187     0438                     _TRISC0	set	1080
   188     048E                     _ACKSTAT	set	1166
   189                           
   190                           	psect	strings
   191     0003                     __pstrings:
   192     0003                     stringtab:
   193     0003                     __stringtab:
   194     0003                     stringcode:	
   195                           ;	String table - string pointers are 1 byte each
   196                           
   197     0003                     stringdir:
   198     0003  3000               	movlw	high stringdir
   199     0004  008A               	movwf	10
   200     0005  0804               	movf	4,w
   201     0006  0A84               	incf	4,f
   202     0007  0782               	addwf	2,f
   203     0008                     __stringbase:
   204     0008  3400               	retlw	0
   205     0009                     __end_of__stringtab:
   206     0009                     STR_1:
   207     0009  3441               	retlw	65	;'A'
   208     000A  346E               	retlw	110	;'n'
   209     000B  3474               	retlw	116	;'t'
   210     000C  3475               	retlw	117	;'u'
   211     000D  346E               	retlw	110	;'n'
   212     000E  3465               	retlw	101	;'e'
   213     000F  3473               	retlw	115	;'s'
   214     0010  342D               	retlw	45	;'-'
   215     0011  3450               	retlw	80	;'P'
   216     0012  346C               	retlw	108	;'l'
   217     0013  346F               	retlw	111	;'o'
   218     0014  3474               	retlw	116	;'t'
   219     0015  3400               	retlw	0
   220                           
   221                           	psect	cinit
   222     07FC                     start_initialization:	
   223                           ; #config settings
   224                           
   225     07FC                     __initialization:
   226     07FC                     end_of_initialization:	
   227                           ;End of C runtime variable initialization code
   228                           
   229     07FC                     __end_of__initialization:
   230     07FC  0183               	clrf	3
   231     07FD  120A  118A  2F3B   	ljmp	_main	;jump to C main() function
   232                           
   233                           	psect	cstackCOMMON
   234     0070                     __pcstackCOMMON:
   235     0070                     ?_cmd:
   236     0070                     ??_cmd:	
   237                           ; 1 bytes @ 0x0
   238                           
   239     0070                     ?_lcd_init:	
   240                           ; 1 bytes @ 0x0
   241                           
   242     0070                     ?_dat:	
   243                           ; 1 bytes @ 0x0
   244                           
   245     0070                     ??_dat:	
   246                           ; 1 bytes @ 0x0
   247                           
   248     0070                     ?_show:	
   249                           ; 1 bytes @ 0x0
   250                           
   251     0070                     ?_main:	
   252                           ; 1 bytes @ 0x0
   253                           
   254     0070                     ?___lldiv:	
   255                           ; 1 bytes @ 0x0
   256                           
   257     0070                     cmd@a:	
   258                           ; 4 bytes @ 0x0
   259                           
   260     0070                     dat@b:	
   261                           ; 1 bytes @ 0x0
   262                           
   263     0070                     ___lldiv@divisor:	
   264                           ; 1 bytes @ 0x0
   265                           
   266                           
   267                           ; 4 bytes @ 0x0
   268     0070                     	ds	1
   269     0071                     cmd@j:
   270     0071                     dat@j:	
   271                           ; 2 bytes @ 0x1
   272                           
   273                           
   274                           ; 2 bytes @ 0x1
   275     0071                     	ds	2
   276     0073                     ??_lcd_init:
   277     0073                     ??_show:	
   278                           ; 1 bytes @ 0x3
   279                           
   280     0073                     show@s:	
   281                           ; 1 bytes @ 0x3
   282                           
   283                           
   284                           ; 1 bytes @ 0x3
   285     0073                     	ds	1
   286     0074                     ___lldiv@dividend:
   287                           
   288                           ; 4 bytes @ 0x4
   289     0074                     	ds	4
   290     0078                     ??___lldiv:
   291                           
   292                           ; 1 bytes @ 0x8
   293     0078                     	ds	1
   294     0079                     ___lldiv@quotient:
   295                           
   296                           ; 4 bytes @ 0x9
   297     0079                     	ds	4
   298     007D                     ___lldiv@counter:
   299                           
   300                           ; 1 bytes @ 0xD
   301     007D                     	ds	1
   302     007E                     ??_main:
   303                           
   304                           	psect	cstackBANK0
   305     0020                     __pcstackBANK0:	
   306                           ; 1 bytes @ 0xE
   307                           
   308     0020                     ?_I2C_Master_Init:
   309     0020                     I2C_Master_Init@c:	
   310                           ; 1 bytes @ 0x0
   311                           
   312                           
   313                           ; 4 bytes @ 0x0
   314     0020                     	ds	4
   315     0024                     ??_I2C_Master_Init:
   316                           
   317                           ; 1 bytes @ 0x4
   318     0024                     	ds	4
   319     0028                     main@i:
   320                           
   321                           ; 2 bytes @ 0x8
   322     0028                     	ds	2
   323                           
   324                           	psect	maintext
   325     073B                     __pmaintext:	
   326 ;;
   327 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   328 ;;
   329 ;; *************** function _main *****************
   330 ;; Defined at:
   331 ;;		line 144 in file "newmain.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;  i               2    8[BANK0 ] unsigned int 
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   340 ;; Tracked objects:
   341 ;;		On entry : B00/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   345 ;;      Params:         0       0       0       0       0
   346 ;;      Locals:         0       2       0       0       0
   347 ;;      Temps:          0       0       0       0       0
   348 ;;      Totals:         0       2       0       0       0
   349 ;;Total ram usage:        2 bytes
   350 ;; Hardware stack levels required when called: 2
   351 ;; This function calls:
   352 ;;		_I2C_Master_Init
   353 ;;		_cmd
   354 ;;		_lcd_init
   355 ;;		_show
   356 ;; This function is called by:
   357 ;;		Startup code after reset
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361     073B                     _main:	
   362                           ;psect for function _main
   363                           
   364     073B                     l979:	
   365                           ;incstack = 0
   366                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   367                           
   368                           
   369                           ;newmain.c: 146:   unsigned int i;;newmain.c: 148:   TRISB = 0x00;
   370     073B  1683               	bsf	3,5	;RP0=1, select bank1
   371     073C  1303               	bcf	3,6	;RP1=0, select bank1
   372     073D  0186               	clrf	6	;volatile
   373                           
   374                           ;newmain.c: 149:   PORTB = 0X00;
   375     073E  1283               	bcf	3,5	;RP0=0, select bank0
   376     073F  1303               	bcf	3,6	;RP1=0, select bank0
   377     0740  0186               	clrf	6	;volatile
   378     0741                     l981:
   379                           
   380                           ;newmain.c: 150:   TRISC0= 0;
   381     0741  1683               	bsf	3,5	;RP0=1, select bank1
   382     0742  1303               	bcf	3,6	;RP1=0, select bank1
   383     0743  1007               	bcf	7,0	;volatile
   384     0744                     l983:
   385                           
   386                           ;newmain.c: 151:   TRISC1= 0;
   387     0744  1087               	bcf	7,1	;volatile
   388     0745                     l985:
   389                           
   390                           ;newmain.c: 152:   TRISC2= 0;
   391     0745  1107               	bcf	7,2	;volatile
   392     0746                     l987:
   393                           
   394                           ;newmain.c: 155:   I2C_Master_Init(100000);
   395     0746  3000               	movlw	0
   396     0747  1283               	bcf	3,5	;RP0=0, select bank0
   397     0748  1303               	bcf	3,6	;RP1=0, select bank0
   398     0749  00A3               	movwf	I2C_Master_Init@c+3
   399     074A  3001               	movlw	1
   400     074B  00A2               	movwf	I2C_Master_Init@c+2
   401     074C  3086               	movlw	134
   402     074D  00A1               	movwf	I2C_Master_Init@c+1
   403     074E  30A0               	movlw	160
   404     074F  00A0               	movwf	I2C_Master_Init@c
   405     0750  120A  118A  2703  120A  118A  	fcall	_I2C_Master_Init
   406     0755                     l989:
   407                           
   408                           ;newmain.c: 158:   lcd_init();
   409     0755  120A  118A  2689  120A  118A  	fcall	_lcd_init
   410     075A                     l991:
   411                           
   412                           ;newmain.c: 159:   cmd(0x8A);
   413     075A  308A               	movlw	138
   414     075B  120A  118A  26C1  120A  118A  	fcall	_cmd
   415     0760                     l993:
   416                           
   417                           ;newmain.c: 160:   show("Antunes-Plot");
   418     0760  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   419     0761  120A  118A  26A2  120A  118A  	fcall	_show
   420     0766                     l995:
   421                           
   422                           ;newmain.c: 162:       for(i=0;i<15000;i++);
   423     0766  1283               	bcf	3,5	;RP0=0, select bank0
   424     0767  1303               	bcf	3,6	;RP1=0, select bank0
   425     0768  01A8               	clrf	main@i
   426     0769  01A9               	clrf	main@i+1
   427     076A                     l1001:
   428     076A  3001               	movlw	1
   429     076B  07A8               	addwf	main@i,f
   430     076C  1803               	skipnc
   431     076D  0AA9               	incf	main@i+1,f
   432     076E  3000               	movlw	0
   433     076F  07A9               	addwf	main@i+1,f
   434     0770  303A               	movlw	58
   435     0771  0229               	subwf	main@i+1,w
   436     0772  3098               	movlw	152
   437     0773  1903               	skipnz
   438     0774  0228               	subwf	main@i,w
   439     0775  1C03               	skipc
   440     0776  2F78               	goto	u301
   441     0777  2F79               	goto	u300
   442     0778                     u301:
   443     0778  2F6A               	goto	l1001
   444     0779                     u300:
   445     0779                     l1003:
   446                           
   447                           ;newmain.c: 163:       cmd(0x18);
   448     0779  3018               	movlw	24
   449     077A  120A  118A  26C1  120A  118A  	fcall	_cmd
   450     077F                     l1005:
   451                           
   452                           ;newmain.c: 164:       for(i=0;i<15000;i++);
   453     077F  1283               	bcf	3,5	;RP0=0, select bank0
   454     0780  1303               	bcf	3,6	;RP1=0, select bank0
   455     0781  01A8               	clrf	main@i
   456     0782  01A9               	clrf	main@i+1
   457     0783                     l1011:
   458     0783  3001               	movlw	1
   459     0784  07A8               	addwf	main@i,f
   460     0785  1803               	skipnc
   461     0786  0AA9               	incf	main@i+1,f
   462     0787  3000               	movlw	0
   463     0788  07A9               	addwf	main@i+1,f
   464     0789  303A               	movlw	58
   465     078A  0229               	subwf	main@i+1,w
   466     078B  3098               	movlw	152
   467     078C  1903               	skipnz
   468     078D  0228               	subwf	main@i,w
   469     078E  1C03               	skipc
   470     078F  2F91               	goto	u311
   471     0790  2F92               	goto	u310
   472     0791                     u311:
   473     0791  2F83               	goto	l1011
   474     0792                     u310:
   475     0792  2F66               	goto	l995
   476     0793  120A  118A  2800   	ljmp	start
   477     0796                     __end_of_main:
   478                           
   479                           	psect	text1
   480     06A2                     __ptext1:	
   481 ;; *************** function _show *****************
   482 ;; Defined at:
   483 ;;		line 137 in file "newmain.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;  s               1    wreg     PTR unsigned char 
   486 ;;		 -> STR_1(13), 
   487 ;; Auto vars:     Size  Location     Type
   488 ;;  s               1    3[COMMON] PTR unsigned char 
   489 ;;		 -> STR_1(13), 
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   499 ;;      Params:         0       0       0       0       0
   500 ;;      Locals:         1       0       0       0       0
   501 ;;      Temps:          0       0       0       0       0
   502 ;;      Totals:         1       0       0       0       0
   503 ;;Total ram usage:        1 bytes
   504 ;; Hardware stack levels used: 1
   505 ;; Hardware stack levels required when called: 1
   506 ;; This function calls:
   507 ;;		_dat
   508 ;; This function is called by:
   509 ;;		_main
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513     06A2                     _show:	
   514                           ;psect for function _show
   515                           
   516                           
   517                           ;incstack = 0
   518                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   519                           ;show@s stored from wreg
   520     06A2  00F3               	movwf	show@s
   521     06A3                     l971:
   522                           
   523                           ;newmain.c: 137: void show(unsigned char *s);newmain.c: 138: {;newmain.c: 139:     while
      +                          (*s) {
   524     06A3  2EB4               	goto	l977
   525     06A4                     l973:
   526                           
   527                           ;newmain.c: 140:         dat(*s++);
   528     06A4  0873               	movf	show@s,w
   529     06A5  0084               	movwf	4
   530     06A6  120A  118A  2003  120A  118A  	fcall	stringdir
   531     06AB  120A  118A  26E2  120A  118A  	fcall	_dat
   532     06B0                     l975:
   533     06B0  3001               	movlw	1
   534     06B1  00FF               	movwf	btemp+1
   535     06B2  087F               	movf	btemp+1,w
   536     06B3  07F3               	addwf	show@s,f
   537     06B4                     l977:
   538                           
   539                           ;newmain.c: 139:     while(*s) {
   540     06B4  0873               	movf	show@s,w
   541     06B5  0084               	movwf	4
   542     06B6  120A  118A  2003  120A  118A  	fcall	stringdir
   543     06BB  3A00               	xorlw	0
   544     06BC  1D03               	skipz
   545     06BD  2EBF               	goto	u291
   546     06BE  2EC0               	goto	u290
   547     06BF                     u291:
   548     06BF  2EA4               	goto	l973
   549     06C0                     u290:
   550     06C0                     l103:
   551     06C0  0008               	return
   552     06C1                     __end_of_show:
   553                           
   554                           	psect	text2
   555     06E2                     __ptext2:	
   556 ;; *************** function _dat *****************
   557 ;; Defined at:
   558 ;;		line 128 in file "newmain.c"
   559 ;; Parameters:    Size  Location     Type
   560 ;;  b               1    wreg     unsigned char 
   561 ;; Auto vars:     Size  Location     Type
   562 ;;  b               1    0[COMMON] unsigned char 
   563 ;;  j               2    1[COMMON] int 
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg, status,2, btemp+1
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   573 ;;      Params:         0       0       0       0       0
   574 ;;      Locals:         3       0       0       0       0
   575 ;;      Temps:          0       0       0       0       0
   576 ;;      Totals:         3       0       0       0       0
   577 ;;Total ram usage:        3 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_show
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586     06E2                     _dat:	
   587                           ;psect for function _dat
   588                           
   589                           
   590                           ;incstack = 0
   591                           ; Regs used in _dat: [wreg+status,2+btemp+1]
   592                           ;dat@b stored from wreg
   593     06E2  00F0               	movwf	dat@b
   594     06E3                     l913:
   595                           
   596                           ;newmain.c: 128: void dat(unsigned char b);newmain.c: 129: {;newmain.c: 130:     PORTB=b
      +                          ;
   597     06E3  0870               	movf	dat@b,w
   598     06E4  1283               	bcf	3,5	;RP0=0, select bank0
   599     06E5  1303               	bcf	3,6	;RP1=0, select bank0
   600     06E6  0086               	movwf	6	;volatile
   601     06E7                     l915:
   602                           
   603                           ;newmain.c: 131:     RC0=1;
   604     06E7  1407               	bsf	7,0	;volatile
   605     06E8                     l917:
   606                           
   607                           ;newmain.c: 132:     RC1=0;
   608     06E8  1087               	bcf	7,1	;volatile
   609     06E9                     l919:
   610                           
   611                           ;newmain.c: 133:     RC2=1;
   612     06E9  1507               	bsf	7,2	;volatile
   613     06EA                     l921:
   614                           
   615                           ;newmain.c: 134:     for(int j=0;j<1000;j++);
   616     06EA  01F1               	clrf	dat@j
   617     06EB  01F2               	clrf	dat@j+1
   618     06EC                     l927:
   619     06EC  3001               	movlw	1
   620     06ED  07F1               	addwf	dat@j,f
   621     06EE  1803               	skipnc
   622     06EF  0AF2               	incf	dat@j+1,f
   623     06F0  3000               	movlw	0
   624     06F1  07F2               	addwf	dat@j+1,f
   625     06F2                     l929:
   626     06F2  0872               	movf	dat@j+1,w
   627     06F3  3A80               	xorlw	128
   628     06F4  00FF               	movwf	btemp+1
   629     06F5  3083               	movlw	131
   630     06F6  027F               	subwf	btemp+1,w
   631     06F7  1D03               	skipz
   632     06F8  2EFB               	goto	u205
   633     06F9  30E8               	movlw	232
   634     06FA  0271               	subwf	dat@j,w
   635     06FB                     u205:
   636     06FB  1C03               	skipc
   637     06FC  2EFE               	goto	u201
   638     06FD  2EFF               	goto	u200
   639     06FE                     u201:
   640     06FE  2EEC               	goto	l927
   641     06FF                     u200:
   642     06FF                     l96:
   643                           
   644                           ;newmain.c: 135:     RC2=0;
   645     06FF  1283               	bcf	3,5	;RP0=0, select bank0
   646     0700  1303               	bcf	3,6	;RP1=0, select bank0
   647     0701  1107               	bcf	7,2	;volatile
   648     0702                     l97:
   649     0702  0008               	return
   650     0703                     __end_of_dat:
   651                           
   652                           	psect	text3
   653     0689                     __ptext3:	
   654 ;; *************** function _lcd_init *****************
   655 ;; Defined at:
   656 ;;		line 120 in file "newmain.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;		None
   659 ;; Auto vars:     Size  Location     Type
   660 ;;		None
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   670 ;;      Params:         0       0       0       0       0
   671 ;;      Locals:         0       0       0       0       0
   672 ;;      Temps:          0       0       0       0       0
   673 ;;      Totals:         0       0       0       0       0
   674 ;;Total ram usage:        0 bytes
   675 ;; Hardware stack levels used: 1
   676 ;; Hardware stack levels required when called: 1
   677 ;; This function calls:
   678 ;;		_cmd
   679 ;; This function is called by:
   680 ;;		_main
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684     0689                     _lcd_init:	
   685                           ;psect for function _lcd_init
   686                           
   687     0689                     l969:	
   688                           ;incstack = 0
   689                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   690                           
   691                           
   692                           ;newmain.c: 122:     cmd(0x38);
   693     0689  3038               	movlw	56
   694     068A  120A  118A  26C1  120A  118A  	fcall	_cmd
   695                           
   696                           ;newmain.c: 123:     cmd(0x0c);
   697     068F  300C               	movlw	12
   698     0690  120A  118A  26C1  120A  118A  	fcall	_cmd
   699                           
   700                           ;newmain.c: 124:     cmd(0x06);
   701     0695  3006               	movlw	6
   702     0696  120A  118A  26C1  120A  118A  	fcall	_cmd
   703                           
   704                           ;newmain.c: 125:     cmd(0x80);
   705     069B  3080               	movlw	128
   706     069C  120A  118A  26C1  120A  118A  	fcall	_cmd
   707     06A1                     l92:
   708     06A1  0008               	return
   709     06A2                     __end_of_lcd_init:
   710                           
   711                           	psect	text4
   712     06C1                     __ptext4:	
   713 ;; *************** function _cmd *****************
   714 ;; Defined at:
   715 ;;		line 110 in file "newmain.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;  a               1    wreg     unsigned char 
   718 ;; Auto vars:     Size  Location     Type
   719 ;;  a               1    0[COMMON] unsigned char 
   720 ;;  j               2    1[COMMON] int 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, status,2, btemp+1
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   730 ;;      Params:         0       0       0       0       0
   731 ;;      Locals:         3       0       0       0       0
   732 ;;      Temps:          0       0       0       0       0
   733 ;;      Totals:         3       0       0       0       0
   734 ;;Total ram usage:        3 bytes
   735 ;; Hardware stack levels used: 1
   736 ;; This function calls:
   737 ;;		Nothing
   738 ;; This function is called by:
   739 ;;		_lcd_init
   740 ;;		_main
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744     06C1                     _cmd:	
   745                           ;psect for function _cmd
   746                           
   747                           
   748                           ;incstack = 0
   749                           ; Regs used in _cmd: [wreg+status,2+btemp+1]
   750                           ;cmd@a stored from wreg
   751     06C1  00F0               	movwf	cmd@a
   752     06C2                     l895:
   753                           
   754                           ;newmain.c: 110: void cmd(unsigned char a);newmain.c: 111: {;newmain.c: 112:     PORTB=a
      +                          ;
   755     06C2  0870               	movf	cmd@a,w
   756     06C3  1283               	bcf	3,5	;RP0=0, select bank0
   757     06C4  1303               	bcf	3,6	;RP1=0, select bank0
   758     06C5  0086               	movwf	6	;volatile
   759     06C6                     l897:
   760                           
   761                           ;newmain.c: 113:     RC0=0;
   762     06C6  1007               	bcf	7,0	;volatile
   763     06C7                     l899:
   764                           
   765                           ;newmain.c: 114:     RC1=0;
   766     06C7  1087               	bcf	7,1	;volatile
   767     06C8                     l901:
   768                           
   769                           ;newmain.c: 115:     RC2=1;
   770     06C8  1507               	bsf	7,2	;volatile
   771     06C9                     l903:
   772                           
   773                           ;newmain.c: 116:     for(int j=0;j<1000;j++);
   774     06C9  01F1               	clrf	cmd@j
   775     06CA  01F2               	clrf	cmd@j+1
   776     06CB                     l909:
   777     06CB  3001               	movlw	1
   778     06CC  07F1               	addwf	cmd@j,f
   779     06CD  1803               	skipnc
   780     06CE  0AF2               	incf	cmd@j+1,f
   781     06CF  3000               	movlw	0
   782     06D0  07F2               	addwf	cmd@j+1,f
   783     06D1                     l911:
   784     06D1  0872               	movf	cmd@j+1,w
   785     06D2  3A80               	xorlw	128
   786     06D3  00FF               	movwf	btemp+1
   787     06D4  3083               	movlw	131
   788     06D5  027F               	subwf	btemp+1,w
   789     06D6  1D03               	skipz
   790     06D7  2EDA               	goto	u195
   791     06D8  30E8               	movlw	232
   792     06D9  0271               	subwf	cmd@j,w
   793     06DA                     u195:
   794     06DA  1C03               	skipc
   795     06DB  2EDD               	goto	u191
   796     06DC  2EDE               	goto	u190
   797     06DD                     u191:
   798     06DD  2ECB               	goto	l909
   799     06DE                     u190:
   800     06DE                     l88:
   801                           
   802                           ;newmain.c: 117:     RC2=0;
   803     06DE  1283               	bcf	3,5	;RP0=0, select bank0
   804     06DF  1303               	bcf	3,6	;RP1=0, select bank0
   805     06E0  1107               	bcf	7,2	;volatile
   806     06E1                     l89:
   807     06E1  0008               	return
   808     06E2                     __end_of_cmd:
   809                           
   810                           	psect	text5
   811     0703                     __ptext5:	
   812 ;; *************** function _I2C_Master_Init *****************
   813 ;; Defined at:
   814 ;;		line 35 in file "newmain.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  c               4    0[BANK0 ] const unsigned long 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   828 ;;      Params:         0       4       0       0       0
   829 ;;      Locals:         0       0       0       0       0
   830 ;;      Temps:          0       4       0       0       0
   831 ;;      Totals:         0       8       0       0       0
   832 ;;Total ram usage:        8 bytes
   833 ;; Hardware stack levels used: 1
   834 ;; Hardware stack levels required when called: 1
   835 ;; This function calls:
   836 ;;		___lldiv
   837 ;; This function is called by:
   838 ;;		_main
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842     0703                     _I2C_Master_Init:	
   843                           ;psect for function _I2C_Master_Init
   844                           
   845     0703                     l957:	
   846                           ;incstack = 0
   847                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   848                           
   849                           
   850                           ;newmain.c: 36:   SSPCON = 0b00101000;
   851     0703  3028               	movlw	40
   852     0704  1283               	bcf	3,5	;RP0=0, select bank0
   853     0705  1303               	bcf	3,6	;RP1=0, select bank0
   854     0706  0094               	movwf	20	;volatile
   855     0707                     l959:
   856                           
   857                           ;newmain.c: 37:   SSPCON2 = 0x00;
   858     0707  1683               	bsf	3,5	;RP0=1, select bank1
   859     0708  1303               	bcf	3,6	;RP1=0, select bank1
   860     0709  0191               	clrf	17	;volatile
   861     070A                     l961:
   862                           
   863                           ;newmain.c: 38:   SSPSTAT = 0x00;
   864     070A  0194               	clrf	20	;volatile
   865     070B                     l963:
   866                           
   867                           ;newmain.c: 39:   SSPADD = (20000000/(4*c))-1;
   868     070B  1283               	bcf	3,5	;RP0=0, select bank0
   869     070C  1303               	bcf	3,6	;RP1=0, select bank0
   870     070D  0820               	movf	I2C_Master_Init@c,w
   871     070E  00A4               	movwf	??_I2C_Master_Init
   872     070F  0821               	movf	I2C_Master_Init@c+1,w
   873     0710  00A5               	movwf	??_I2C_Master_Init+1
   874     0711  0822               	movf	I2C_Master_Init@c+2,w
   875     0712  00A6               	movwf	??_I2C_Master_Init+2
   876     0713  0823               	movf	I2C_Master_Init@c+3,w
   877     0714  00A7               	movwf	??_I2C_Master_Init+3
   878     0715  3002               	movlw	2
   879     0716                     u285:
   880     0716  1003               	clrc
   881     0717  0DA4               	rlf	??_I2C_Master_Init,f
   882     0718  0DA5               	rlf	??_I2C_Master_Init+1,f
   883     0719  0DA6               	rlf	??_I2C_Master_Init+2,f
   884     071A  0DA7               	rlf	??_I2C_Master_Init+3,f
   885     071B                     u280:
   886     071B  3EFF               	addlw	-1
   887     071C  1D03               	skipz
   888     071D  2F16               	goto	u285
   889     071E  0827               	movf	??_I2C_Master_Init+3,w
   890     071F  00F3               	movwf	___lldiv@divisor+3
   891     0720  0826               	movf	??_I2C_Master_Init+2,w
   892     0721  00F2               	movwf	___lldiv@divisor+2
   893     0722  0825               	movf	??_I2C_Master_Init+1,w
   894     0723  00F1               	movwf	___lldiv@divisor+1
   895     0724  0824               	movf	??_I2C_Master_Init,w
   896     0725  00F0               	movwf	___lldiv@divisor
   897     0726  3001               	movlw	1
   898     0727  00F7               	movwf	___lldiv@dividend+3
   899     0728  3031               	movlw	49
   900     0729  00F6               	movwf	___lldiv@dividend+2
   901     072A  302D               	movlw	45
   902     072B  00F5               	movwf	___lldiv@dividend+1
   903     072C  3000               	movlw	0
   904     072D  00F4               	movwf	___lldiv@dividend
   905     072E  120A  118A  2796  120A  118A  	fcall	___lldiv
   906     0733  0870               	movf	?___lldiv,w
   907     0734  3EFF               	addlw	255
   908     0735  1683               	bsf	3,5	;RP0=1, select bank1
   909     0736  1303               	bcf	3,6	;RP1=0, select bank1
   910     0737  0093               	movwf	19	;volatile
   911     0738                     l965:
   912                           
   913                           ;newmain.c: 40:   TRISCbits.TRISC3 = 1;
   914     0738  1587               	bsf	7,3	;volatile
   915     0739                     l967:
   916                           
   917                           ;newmain.c: 41:   TRISCbits.TRISC4 = 1;
   918     0739  1607               	bsf	7,4	;volatile
   919     073A                     l45:
   920     073A  0008               	return
   921     073B                     __end_of_I2C_Master_Init:
   922                           
   923                           	psect	text6
   924     0796                     __ptext6:	
   925 ;; *************** function ___lldiv *****************
   926 ;; Defined at:
   927 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  divisor         4    0[COMMON] unsigned long 
   930 ;;  dividend        4    4[COMMON] unsigned long 
   931 ;; Auto vars:     Size  Location     Type
   932 ;;  quotient        4    9[COMMON] unsigned long 
   933 ;;  counter         1   13[COMMON] unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  4    0[COMMON] unsigned long 
   936 ;; Registers used:
   937 ;;		wreg, status,2, status,0, btemp+1
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   943 ;;      Params:         8       0       0       0       0
   944 ;;      Locals:         5       0       0       0       0
   945 ;;      Temps:          1       0       0       0       0
   946 ;;      Totals:        14       0       0       0       0
   947 ;;Total ram usage:       14 bytes
   948 ;; Hardware stack levels used: 1
   949 ;; This function calls:
   950 ;;		Nothing
   951 ;; This function is called by:
   952 ;;		_I2C_Master_Init
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956     0796                     ___lldiv:	
   957                           ;psect for function ___lldiv
   958                           
   959     0796                     l931:	
   960                           ;incstack = 0
   961                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
   962                           
   963     0796  3000               	movlw	0
   964     0797  00FC               	movwf	___lldiv@quotient+3
   965     0798  3000               	movlw	0
   966     0799  00FB               	movwf	___lldiv@quotient+2
   967     079A  3000               	movlw	0
   968     079B  00FA               	movwf	___lldiv@quotient+1
   969     079C  3000               	movlw	0
   970     079D  00F9               	movwf	___lldiv@quotient
   971     079E  0873               	movf	___lldiv@divisor+3,w
   972     079F  0472               	iorwf	___lldiv@divisor+2,w
   973     07A0  0471               	iorwf	___lldiv@divisor+1,w
   974     07A1  0470               	iorwf	___lldiv@divisor,w
   975     07A2  1903               	skipnz
   976     07A3  2FA5               	goto	u211
   977     07A4  2FA6               	goto	u210
   978     07A5                     u211:
   979     07A5  2FF3               	goto	l953
   980     07A6                     u210:
   981     07A6                     l933:
   982     07A6  01FD               	clrf	___lldiv@counter
   983     07A7  0AFD               	incf	___lldiv@counter,f
   984     07A8  2FB6               	goto	l939
   985     07A9                     l935:
   986     07A9  3001               	movlw	1
   987     07AA  00F8               	movwf	??___lldiv
   988     07AB                     u225:
   989     07AB  1003               	clrc
   990     07AC  0DF0               	rlf	___lldiv@divisor,f
   991     07AD  0DF1               	rlf	___lldiv@divisor+1,f
   992     07AE  0DF2               	rlf	___lldiv@divisor+2,f
   993     07AF  0DF3               	rlf	___lldiv@divisor+3,f
   994     07B0  0BF8               	decfsz	??___lldiv,f
   995     07B1  2FAB               	goto	u225
   996     07B2                     l937:
   997     07B2  3001               	movlw	1
   998     07B3  00FF               	movwf	btemp+1
   999     07B4  087F               	movf	btemp+1,w
  1000     07B5  07FD               	addwf	___lldiv@counter,f
  1001     07B6                     l939:
  1002     07B6  1FF3               	btfss	___lldiv@divisor+3,7
  1003     07B7  2FB9               	goto	u231
  1004     07B8  2FBA               	goto	u230
  1005     07B9                     u231:
  1006     07B9  2FA9               	goto	l935
  1007     07BA                     u230:
  1008     07BA                     l941:
  1009     07BA  3001               	movlw	1
  1010     07BB  00F8               	movwf	??___lldiv
  1011     07BC                     u245:
  1012     07BC  1003               	clrc
  1013     07BD  0DF9               	rlf	___lldiv@quotient,f
  1014     07BE  0DFA               	rlf	___lldiv@quotient+1,f
  1015     07BF  0DFB               	rlf	___lldiv@quotient+2,f
  1016     07C0  0DFC               	rlf	___lldiv@quotient+3,f
  1017     07C1  0BF8               	decfsz	??___lldiv,f
  1018     07C2  2FBC               	goto	u245
  1019     07C3                     l943:
  1020     07C3  0873               	movf	___lldiv@divisor+3,w
  1021     07C4  0277               	subwf	___lldiv@dividend+3,w
  1022     07C5  1D03               	skipz
  1023     07C6  2FD1               	goto	u255
  1024     07C7  0872               	movf	___lldiv@divisor+2,w
  1025     07C8  0276               	subwf	___lldiv@dividend+2,w
  1026     07C9  1D03               	skipz
  1027     07CA  2FD1               	goto	u255
  1028     07CB  0871               	movf	___lldiv@divisor+1,w
  1029     07CC  0275               	subwf	___lldiv@dividend+1,w
  1030     07CD  1D03               	skipz
  1031     07CE  2FD1               	goto	u255
  1032     07CF  0870               	movf	___lldiv@divisor,w
  1033     07D0  0274               	subwf	___lldiv@dividend,w
  1034     07D1                     u255:
  1035     07D1  1C03               	skipc
  1036     07D2  2FD4               	goto	u251
  1037     07D3  2FD5               	goto	u250
  1038     07D4                     u251:
  1039     07D4  2FE4               	goto	l949
  1040     07D5                     u250:
  1041     07D5                     l945:
  1042     07D5  0870               	movf	___lldiv@divisor,w
  1043     07D6  02F4               	subwf	___lldiv@dividend,f
  1044     07D7  0871               	movf	___lldiv@divisor+1,w
  1045     07D8  1C03               	skipc
  1046     07D9  0F71               	incfsz	___lldiv@divisor+1,w
  1047     07DA  02F5               	subwf	___lldiv@dividend+1,f
  1048     07DB  0872               	movf	___lldiv@divisor+2,w
  1049     07DC  1C03               	skipc
  1050     07DD  0F72               	incfsz	___lldiv@divisor+2,w
  1051     07DE  02F6               	subwf	___lldiv@dividend+2,f
  1052     07DF  0873               	movf	___lldiv@divisor+3,w
  1053     07E0  1C03               	skipc
  1054     07E1  0F73               	incfsz	___lldiv@divisor+3,w
  1055     07E2  02F7               	subwf	___lldiv@dividend+3,f
  1056     07E3                     l947:
  1057     07E3  1479               	bsf	___lldiv@quotient,0
  1058     07E4                     l949:
  1059     07E4  3001               	movlw	1
  1060     07E5                     u265:
  1061     07E5  1003               	clrc
  1062     07E6  0CF3               	rrf	___lldiv@divisor+3,f
  1063     07E7  0CF2               	rrf	___lldiv@divisor+2,f
  1064     07E8  0CF1               	rrf	___lldiv@divisor+1,f
  1065     07E9  0CF0               	rrf	___lldiv@divisor,f
  1066     07EA  3EFF               	addlw	-1
  1067     07EB  1D03               	skipz
  1068     07EC  2FE5               	goto	u265
  1069     07ED                     l951:
  1070     07ED  3001               	movlw	1
  1071     07EE  02FD               	subwf	___lldiv@counter,f
  1072     07EF  1D03               	btfss	3,2
  1073     07F0  2FF2               	goto	u271
  1074     07F1  2FF3               	goto	u270
  1075     07F2                     u271:
  1076     07F2  2FBA               	goto	l941
  1077     07F3                     u270:
  1078     07F3                     l953:
  1079     07F3  087C               	movf	___lldiv@quotient+3,w
  1080     07F4  00F3               	movwf	?___lldiv+3
  1081     07F5  087B               	movf	___lldiv@quotient+2,w
  1082     07F6  00F2               	movwf	?___lldiv+2
  1083     07F7  087A               	movf	___lldiv@quotient+1,w
  1084     07F8  00F1               	movwf	?___lldiv+1
  1085     07F9  0879               	movf	___lldiv@quotient,w
  1086     07FA  00F0               	movwf	?___lldiv
  1087     07FB                     l237:
  1088     07FB  0008               	return
  1089     07FC                     __end_of___lldiv:
  1090     007E                     btemp	set	126	;btemp
  1091     007E                     wtemp0	set	126
  1092                           
  1093                           	psect	config
  1094                           
  1095                           ;Config register CONFIG @ 0x2007
  1096                           ;	Oscillator Selection bits
  1097                           ;	FOSC = HS, HS oscillator
  1098                           ;	Watchdog Timer Enable bit
  1099                           ;	WDTE = OFF, WDT disabled
  1100                           ;	Power-up Timer Enable bit
  1101                           ;	PWRTE = OFF, PWRT disabled
  1102                           ;	Brown-out Reset Enable bit
  1103                           ;	BOREN = ON, BOR enabled
  1104                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1105                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1106                           ;	Data EEPROM Memory Code Protection bit
  1107                           ;	CPD = OFF, Data EEPROM code protection off
  1108                           ;	Flash Program Memory Write Enable bits
  1109                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1110                           ;	In-Circuit Debugger Mode bit
  1111                           ;	DEBUG = 0x1, unprogrammed default
  1112                           ;	Flash Program Memory Code Protection bit
  1113                           ;	CP = OFF, Code protection off
  1114     2007                     	org	8199
  1115     2007  3F7A               	dw	16250

Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    sp__I2C_Multi_Read	PTR unsigned int  size(1) Largest target is 4
		 -> I2C_Multi_Read@Accel(COMMON[4]), 


Critical Paths under _main in COMMON

    _show->_dat
    _lcd_init->_cmd
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     786
                                              8 BANK0      2     2      0
                    _I2C_Master_Init
                                _cmd
                           _lcd_init
                               _show
 ---------------------------------------------------------------------------------
 (1) _show                                                 1     1      0     146
                                              3 COMMON     1     1      0
                                _dat
 ---------------------------------------------------------------------------------
 (2) _dat                                                  3     3      0      68
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      68
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  3     3      0      68
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _cmd
   _lcd_init
     _cmd
   _show
     _dat

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Jun 12 12:48:27 2024

                      pc 0002                       l45 073A                       l92 06A1  
                     l88 06DE                       l96 06FF                       l89 06E1  
                     l97 0702                       fsr 0004                      l103 06C0  
                    l237 07FB                      l901 06C8                      l911 06D1  
                    l903 06C9                      l921 06EA                      l913 06E3  
                    l931 0796                      l915 06E7                      l941 07BA  
                    l933 07A6                      l909 06CB                      l917 06E8  
                    l951 07ED                      l943 07C3                      l935 07A9  
                    l927 06EC                      l919 06E9                      l945 07D5  
                    l937 07B2                      l953 07F3                      l961 070A  
                    l929 06F2                      l947 07E3                      l939 07B6  
                    l963 070B                      l971 06A3                      l949 07E4  
                    l965 0738                      l957 0703                      l973 06A4  
                    l981 0741                      l967 0739                      l959 0707  
                    l895 06C2                      l975 06B0                      l991 075A  
                    l983 0744                      l897 06C6                      l969 0689  
                    l977 06B4                      l993 0760                      l985 0745  
                    l899 06C7                      l995 0766                      l987 0746  
                    l979 073B                      l989 0755                      _RC0 0038  
                    _RC1 0039                      _RC2 003A                      u200 06FF  
                    u201 06FE                      u210 07A6                      u211 07A5  
                    u300 0779                      u205 06FB                      u301 0778  
                    u230 07BA                      u310 0792                      u231 07B9  
                    u311 0791                      u225 07AB                      u250 07D5  
                    u251 07D4                      u245 07BC                      u270 07F3  
                    u190 06DE                      u271 07F2                      u255 07D1  
                    u191 06DD                      u280 071B                      u265 07E5  
                    u290 06C0                      u195 06DA                      u291 06BF  
                    u285 0716                      _dat 06E2                      _cmd 06C1  
                    fsr0 0004                     l1001 076A                     l1011 0783  
                   l1003 0779                     l1005 077F                     ?_dat 0070  
                   ?_cmd 0070                     STR_1 0009                     dat@b 0070  
                   dat@j 0071                     cmd@a 0070                     cmd@j 0071  
                   _main 073B                     _show 06A2                     btemp 007E  
                   start 0000                    ??_dat 0070                    ??_cmd 0070  
       ?_I2C_Master_Init 0020                    ?_main 0070                    ?_show 0070  
        __end_of___lldiv 07FC                    _PORTB 0006                    _TRISB 0086  
                  _SSPIF 0063                    main@i 0028                    pclath 000A  
                  show@s 0073                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 0796             __end_of_show 06C1  
                 ??_main 007E                   ??_show 0073                   _SSPADD 0093  
                 _TRISC0 0438                   _TRISC1 0439                   _TRISC2 043A  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of_lcd_init 06A2  
              ??___lldiv 0078  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 073B                  _ACKSTAT 048E                  _SSPCON2 0091  
              ?_lcd_init 0070                  _SSPSTAT 0094               __stringtab 0003  
                ___lldiv 0796                  __ptext1 06A2                  __ptext2 06E2  
                __ptext3 0689                  __ptext4 06C1                  __ptext5 0703  
                __ptext6 0796               ??_lcd_init 0073     end_of_initialization 07FC  
        ___lldiv@divisor 0070          ___lldiv@counter 007D         I2C_Master_Init@c 0020  
              _TRISCbits 0087      start_initialization 07FC              __end_of_dat 0703  
            __end_of_cmd 06E2        ??_I2C_Master_Init 0024                ___latbits 0002  
          __pcstackBANK0 0020                 ?___lldiv 0070                __pstrings 0003  
            __stringbase 0008       __end_of__stringtab 0009          _I2C_Master_Init 0703  
               _lcd_init 0689         ___lldiv@dividend 0074                stringcode 0003  
__end_of_I2C_Master_Init 073B         ___lldiv@quotient 0079                 stringdir 0003  
               stringtab 0003              _SSPCON2bits 0091  
