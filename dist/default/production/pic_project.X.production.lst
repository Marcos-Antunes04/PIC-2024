

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Jun 12 09:29:06 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    47                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text38,local,class=CODE,merge=1,delta=2
    49                           	psect	text39,local,class=CODE,merge=1,delta=2
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x7E,2
    52     0000                     
    53                           ; Generated 22/03/2023 GMT
    54                           ; 
    55                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F877A Definitions
    85                           ; 
    86                           ; SFR Addresses
    87     0000                     	;# 
    88     0001                     	;# 
    89     0002                     	;# 
    90     0003                     	;# 
    91     0004                     	;# 
    92     0005                     	;# 
    93     0006                     	;# 
    94     0007                     	;# 
    95     0008                     	;# 
    96     0009                     	;# 
    97     000A                     	;# 
    98     000B                     	;# 
    99     000C                     	;# 
   100     000D                     	;# 
   101     000E                     	;# 
   102     000E                     	;# 
   103     000F                     	;# 
   104     0010                     	;# 
   105     0011                     	;# 
   106     0012                     	;# 
   107     0013                     	;# 
   108     0014                     	;# 
   109     0015                     	;# 
   110     0015                     	;# 
   111     0016                     	;# 
   112     0017                     	;# 
   113     0018                     	;# 
   114     0019                     	;# 
   115     001A                     	;# 
   116     001B                     	;# 
   117     001B                     	;# 
   118     001C                     	;# 
   119     001D                     	;# 
   120     001E                     	;# 
   121     001F                     	;# 
   122     0081                     	;# 
   123     0085                     	;# 
   124     0086                     	;# 
   125     0087                     	;# 
   126     0088                     	;# 
   127     0089                     	;# 
   128     008C                     	;# 
   129     008D                     	;# 
   130     008E                     	;# 
   131     0091                     	;# 
   132     0092                     	;# 
   133     0093                     	;# 
   134     0094                     	;# 
   135     0098                     	;# 
   136     0099                     	;# 
   137     009C                     	;# 
   138     009D                     	;# 
   139     009E                     	;# 
   140     009F                     	;# 
   141     010C                     	;# 
   142     010D                     	;# 
   143     010E                     	;# 
   144     010F                     	;# 
   145     018C                     	;# 
   146     018D                     	;# 
   147     0000                     	;# 
   148     0001                     	;# 
   149     0002                     	;# 
   150     0003                     	;# 
   151     0004                     	;# 
   152     0005                     	;# 
   153     0006                     	;# 
   154     0007                     	;# 
   155     0008                     	;# 
   156     0009                     	;# 
   157     000A                     	;# 
   158     000B                     	;# 
   159     000C                     	;# 
   160     000D                     	;# 
   161     000E                     	;# 
   162     000E                     	;# 
   163     000F                     	;# 
   164     0010                     	;# 
   165     0011                     	;# 
   166     0012                     	;# 
   167     0013                     	;# 
   168     0014                     	;# 
   169     0015                     	;# 
   170     0015                     	;# 
   171     0016                     	;# 
   172     0017                     	;# 
   173     0018                     	;# 
   174     0019                     	;# 
   175     001A                     	;# 
   176     001B                     	;# 
   177     001B                     	;# 
   178     001C                     	;# 
   179     001D                     	;# 
   180     001E                     	;# 
   181     001F                     	;# 
   182     0081                     	;# 
   183     0085                     	;# 
   184     0086                     	;# 
   185     0087                     	;# 
   186     0088                     	;# 
   187     0089                     	;# 
   188     008C                     	;# 
   189     008D                     	;# 
   190     008E                     	;# 
   191     0091                     	;# 
   192     0092                     	;# 
   193     0093                     	;# 
   194     0094                     	;# 
   195     0098                     	;# 
   196     0099                     	;# 
   197     009C                     	;# 
   198     009D                     	;# 
   199     009E                     	;# 
   200     009F                     	;# 
   201     010C                     	;# 
   202     010D                     	;# 
   203     010E                     	;# 
   204     010F                     	;# 
   205     018C                     	;# 
   206     018D                     	;# 
   207                           
   208                           	psect	strings
   209     0800                     __pstrings:
   210     0800                     stringtab:
   211     0800                     __stringtab:
   212                           
   213                           ;	String table - string pointers are 1 byte each
   214     0800  1BFF               	btfsc	btemp+1,7
   215     0801  280A               	ljmp	stringcode
   216     0802  1383               	bcf	3,7
   217     0803  187F               	btfsc	btemp+1,0
   218     0804  1783               	bsf	3,7
   219     0805  0800               	movf	0,w
   220     0806  0A84               	incf	4,f
   221     0807  1903               	skipnz
   222     0808  0AFF               	incf	btemp+1,f
   223     0809  0008               	return
   224     080A                     stringcode:
   225     080A                     stringdir:
   226     080A  3008               	movlw	high stringdir
   227     080B  008A               	movwf	10
   228     080C  0804               	movf	4,w
   229     080D  0A84               	incf	4,f
   230     080E  0782               	addwf	2,f
   231     080F                     __stringbase:
   232     080F  3400               	retlw	0
   233     0810                     __end_of__stringtab:
   234     0810                     __powers_:
   235     0810  3400               	retlw	0
   236     0811  3400               	retlw	0
   237     0812  3480               	retlw	128
   238     0813  343F               	retlw	63
   239     0814  3400               	retlw	0
   240     0815  3400               	retlw	0
   241     0816  3420               	retlw	32
   242     0817  3441               	retlw	65
   243     0818  3400               	retlw	0
   244     0819  3400               	retlw	0
   245     081A  34C8               	retlw	200
   246     081B  3442               	retlw	66
   247     081C  3400               	retlw	0
   248     081D  3400               	retlw	0
   249     081E  347A               	retlw	122
   250     081F  3444               	retlw	68
   251     0820  3400               	retlw	0
   252     0821  3440               	retlw	64
   253     0822  341C               	retlw	28
   254     0823  3446               	retlw	70
   255     0824  3400               	retlw	0
   256     0825  3450               	retlw	80
   257     0826  34C3               	retlw	195
   258     0827  3447               	retlw	71
   259     0828  3400               	retlw	0
   260     0829  3424               	retlw	36
   261     082A  3474               	retlw	116
   262     082B  3449               	retlw	73
   263     082C  3480               	retlw	128
   264     082D  3496               	retlw	150
   265     082E  3418               	retlw	24
   266     082F  344B               	retlw	75
   267     0830  3420               	retlw	32
   268     0831  34BC               	retlw	188
   269     0832  34BE               	retlw	190
   270     0833  344C               	retlw	76
   271     0834  3428               	retlw	40
   272     0835  346B               	retlw	107
   273     0836  346E               	retlw	110
   274     0837  344E               	retlw	78
   275     0838  34F9               	retlw	249
   276     0839  3402               	retlw	2
   277     083A  3415               	retlw	21
   278     083B  3450               	retlw	80
   279     083C  34EC               	retlw	236
   280     083D  3478               	retlw	120
   281     083E  34AD               	retlw	173
   282     083F  3460               	retlw	96
   283     0840  34CA               	retlw	202
   284     0841  34F2               	retlw	242
   285     0842  3449               	retlw	73
   286     0843  3471               	retlw	113
   287     0844                     __end_of__powers_:
   288     0844                     __npowers_:
   289     0844  3400               	retlw	0
   290     0845  3400               	retlw	0
   291     0846  3480               	retlw	128
   292     0847  343F               	retlw	63
   293     0848  34CD               	retlw	205
   294     0849  34CC               	retlw	204
   295     084A  34CC               	retlw	204
   296     084B  343D               	retlw	61
   297     084C  340A               	retlw	10
   298     084D  34D7               	retlw	215
   299     084E  3423               	retlw	35
   300     084F  343C               	retlw	60
   301     0850  346F               	retlw	111
   302     0851  3412               	retlw	18
   303     0852  3483               	retlw	131
   304     0853  343A               	retlw	58
   305     0854  3417               	retlw	23
   306     0855  34B7               	retlw	183
   307     0856  34D1               	retlw	209
   308     0857  3438               	retlw	56
   309     0858  34AC               	retlw	172
   310     0859  34C5               	retlw	197
   311     085A  3427               	retlw	39
   312     085B  3437               	retlw	55
   313     085C  34BD               	retlw	189
   314     085D  3437               	retlw	55
   315     085E  3486               	retlw	134
   316     085F  3435               	retlw	53
   317     0860  3495               	retlw	149
   318     0861  34BF               	retlw	191
   319     0862  34D6               	retlw	214
   320     0863  3433               	retlw	51
   321     0864  3477               	retlw	119
   322     0865  34CC               	retlw	204
   323     0866  342B               	retlw	43
   324     0867  3432               	retlw	50
   325     0868  345F               	retlw	95
   326     0869  3470               	retlw	112
   327     086A  3489               	retlw	137
   328     086B  3430               	retlw	48
   329     086C  34FF               	retlw	255
   330     086D  34E6               	retlw	230
   331     086E  34DB               	retlw	219
   332     086F  342E               	retlw	46
   333     0870  3408               	retlw	8
   334     0871  34E5               	retlw	229
   335     0872  343C               	retlw	60
   336     0873  341E               	retlw	30
   337     0874  3460               	retlw	96
   338     0875  3442               	retlw	66
   339     0876  34A2               	retlw	162
   340     0877  340D               	retlw	13
   341     0878                     __end_of__npowers_:
   342     0878                     _dpowers:
   343     0878  3401               	retlw	1
   344     0879  3400               	retlw	0
   345     087A  3400               	retlw	0
   346     087B  3400               	retlw	0
   347     087C  340A               	retlw	10
   348     087D  3400               	retlw	0
   349     087E  3400               	retlw	0
   350     087F  3400               	retlw	0
   351     0880  3464               	retlw	100
   352     0881  3400               	retlw	0
   353     0882  3400               	retlw	0
   354     0883  3400               	retlw	0
   355     0884  34E8               	retlw	232
   356     0885  3403               	retlw	3
   357     0886  3400               	retlw	0
   358     0887  3400               	retlw	0
   359     0888  3410               	retlw	16
   360     0889  3427               	retlw	39
   361     088A  3400               	retlw	0
   362     088B  3400               	retlw	0
   363     088C  34A0               	retlw	160
   364     088D  3486               	retlw	134
   365     088E  3401               	retlw	1
   366     088F  3400               	retlw	0
   367     0890  3440               	retlw	64
   368     0891  3442               	retlw	66
   369     0892  340F               	retlw	15
   370     0893  3400               	retlw	0
   371     0894  3480               	retlw	128
   372     0895  3496               	retlw	150
   373     0896  3498               	retlw	152
   374     0897  3400               	retlw	0
   375     0898  3400               	retlw	0
   376     0899  34E1               	retlw	225
   377     089A  34F5               	retlw	245
   378     089B  3405               	retlw	5
   379     089C  3400               	retlw	0
   380     089D  34CA               	retlw	202
   381     089E  349A               	retlw	154
   382     089F  343B               	retlw	59
   383     08A0                     __end_of_dpowers:
   384     0008                     _PORTD	set	8
   385     001E                     _ADRESH	set	30
   386     001F                     _ADCON0bits	set	31
   387     001F                     _ADCON0	set	31
   388     0013                     _SSPBUF	set	19
   389     0014                     _SSPCON	set	20
   390     0006                     _PORTB	set	6
   391     00FA                     _GO_DONE	set	250
   392     0063                     _SSPIF	set	99
   393     0088                     _TRISD	set	136
   394     0086                     _TRISB	set	134
   395     0085                     _TRISA	set	133
   396     009E                     _ADRESL	set	158
   397     009F                     _ADCON1	set	159
   398     0091                     _SSPCON2bits	set	145
   399     0087                     _TRISCbits	set	135
   400     0093                     _SSPADD	set	147
   401     0094                     _SSPSTAT	set	148
   402     0091                     _SSPCON2	set	145
   403     048E                     _ACKSTAT	set	1166
   404     08A0                     STR_5:
   405     08A0  3441               	retlw	65	;'A'
   406     08A1  3443               	retlw	67	;'C'
   407     08A2  3445               	retlw	69	;'E'
   408     08A3  344C               	retlw	76	;'L'
   409     08A4  3445               	retlw	69	;'E'
   410     08A5  3452               	retlw	82	;'R'
   411     08A6  344F               	retlw	79	;'O'
   412     08A7  344D               	retlw	77	;'M'
   413     08A8  3445               	retlw	69	;'E'
   414     08A9  3454               	retlw	84	;'T'
   415     08AA  3452               	retlw	82	;'R'
   416     08AB  344F               	retlw	79	;'O'
   417     08AC  3400               	retlw	0
   418     08AD                     STR_7:
   419     08AD  3441               	retlw	65	;'A'
   420     08AE  346E               	retlw	110	;'n'
   421     08AF  3464               	retlw	100	;'d'
   422     08B0  3420               	retlw	32	;' '
   423     08B1  344D               	retlw	77	;'M'
   424     08B2  3461               	retlw	97	;'a'
   425     08B3  3474               	retlw	116	;'t'
   426     08B4  347A               	retlw	122	;'z'
   427     08B5  3400               	retlw	0
   428     08B6                     STR_6:
   429     08B6  3441               	retlw	65	;'A'
   430     08B7  346E               	retlw	110	;'n'
   431     08B8  3474               	retlw	116	;'t'
   432     08B9  3475               	retlw	117	;'u'
   433     08BA  346E               	retlw	110	;'n'
   434     08BB  3465               	retlw	101	;'e'
   435     08BC  3473               	retlw	115	;'s'
   436     08BD  3400               	retlw	0
   437     08BE                     STR_1:
   438     08BE  3458               	retlw	88	;'X'
   439     08BF  3420               	retlw	32	;' '
   440     08C0  343D               	retlw	61	;'='
   441     08C1  3420               	retlw	32	;' '
   442     08C2  3400               	retlw	0
   443     08C3                     STR_3:
   444     08C3  3459               	retlw	89	;'Y'
   445     08C4  3420               	retlw	32	;' '
   446     08C5  343D               	retlw	61	;'='
   447     08C6  3420               	retlw	32	;' '
   448     08C7  3400               	retlw	0
   449     08C8                     STR_2:
   450     08C8  3425               	retlw	37	;'%'
   451     08C9  342E               	retlw	46	;'.'
   452     08CA  3432               	retlw	50	;'2'
   453     08CB  3466               	retlw	102	;'f'
   454     08CC  3400               	retlw	0
   455     08C8                     
   456                           	psect	cinit
   457     07F6                     start_initialization:	
   458                           ; #config settings
   459                           
   460     07F6                     __initialization:
   461                           
   462                           ; Clear objects allocated to BANK1
   463     07F6  1683               	bsf	3,5	;RP0=1, select bank1
   464     07F7  1303               	bcf	3,6	;RP1=0, select bank1
   465     07F8  01E7               	clrf	__pbssBANK1& (0+127)
   466     07F9  01E8               	clrf	(__pbssBANK1+1)& (0+127)
   467     07FA  01E9               	clrf	(__pbssBANK1+2)& (0+127)
   468     07FB  01EA               	clrf	(__pbssBANK1+3)& (0+127)
   469     07FC                     end_of_initialization:	
   470                           ;End of C runtime variable initialization code
   471                           
   472     07FC                     __end_of__initialization:
   473     07FC  0183               	clrf	3
   474     07FD  120A  118A  283D   	ljmp	_main	;jump to C main() function
   475                           
   476                           	psect	bssBANK1
   477     00E7                     __pbssBANK1:
   478     00E7                     _adc_value_2:
   479     00E7                     	ds	2
   480     00E9                     _adc_value_1:
   481     00E9                     	ds	2
   482                           
   483                           	psect	cstackBANK1
   484     00A0                     __pcstackBANK1:
   485     00A0                     ??_sprintf:
   486                           
   487                           ; 1 bytes @ 0x0
   488     00A0                     	ds	5
   489     00A5                     _sprintf$980:
   490                           
   491                           ; 4 bytes @ 0x5
   492     00A5                     	ds	4
   493     00A9                     sprintf@ap:
   494                           
   495                           ; 1 bytes @ 0x9
   496     00A9                     	ds	1
   497     00AA                     sprintf@flag:
   498                           
   499                           ; 2 bytes @ 0xA
   500     00AA                     	ds	2
   501     00AC                     sprintf@val:
   502                           
   503                           ; 4 bytes @ 0xC
   504     00AC                     	ds	4
   505     00B0                     sprintf@eexp:
   506                           
   507                           ; 2 bytes @ 0x10
   508     00B0                     	ds	2
   509     00B2                     sprintf@tmpval:
   510                           
   511                           ; 4 bytes @ 0x12
   512     00B2                     	ds	4
   513     00B6                     sprintf@prec:
   514                           
   515                           ; 2 bytes @ 0x16
   516     00B6                     	ds	2
   517     00B8                     sprintf@sp:
   518                           
   519                           ; 1 bytes @ 0x18
   520     00B8                     	ds	1
   521     00B9                     sprintf@fval:
   522                           
   523                           ; 4 bytes @ 0x19
   524     00B9                     	ds	4
   525     00BD                     sprintf@c:
   526                           
   527                           ; 1 bytes @ 0x1D
   528     00BD                     	ds	1
   529     00BE                     ?_GetString:
   530     00BE                     GetString@value:	
   531                           ; 2 bytes @ 0x1E
   532                           
   533                           
   534                           ; 4 bytes @ 0x1E
   535     00BE                     	ds	4
   536     00C2                     GetString@channel:
   537                           
   538                           ; 2 bytes @ 0x22
   539     00C2                     	ds	2
   540     00C4                     GetString@source:
   541                           
   542                           ; 1 bytes @ 0x24
   543     00C4                     	ds	1
   544     00C5                     GetString@string:
   545                           
   546                           ; 1 bytes @ 0x25
   547     00C5                     	ds	1
   548     00C6                     ??_main:
   549                           
   550                           ; 1 bytes @ 0x26
   551     00C6                     	ds	3
   552     00C9                     main@str0:
   553                           
   554                           ; 15 bytes @ 0x29
   555     00C9                     	ds	15
   556     00D8                     main@str1:
   557                           
   558                           ; 15 bytes @ 0x38
   559     00D8                     	ds	15
   560                           
   561                           	psect	cstackCOMMON
   562     0070                     __pcstackCOMMON:
   563     0070                     ?_isdigit:
   564     0070                     ?___fleq:	
   565                           ; 1 bit 
   566                           
   567     0070                     ?___flge:	
   568                           ; 1 bit 
   569                           
   570     0070                     ??_isdigit:	
   571                           ; 1 bit 
   572                           
   573     0070                     ?_I2C_IDLE:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ??_I2C_IDLE:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0070                     ?_I2C_Start:	
   580                           ; 1 bytes @ 0x0
   581                           
   582     0070                     ??_I2C_Start:	
   583                           ; 1 bytes @ 0x0
   584                           
   585     0070                     ?_I2C_Stop:	
   586                           ; 1 bytes @ 0x0
   587                           
   588     0070                     ??_I2C_Stop:	
   589                           ; 1 bytes @ 0x0
   590                           
   591     0070                     ?_I2C_Write:	
   592                           ; 1 bytes @ 0x0
   593                           
   594     0070                     ??_I2C_Write:	
   595                           ; 1 bytes @ 0x0
   596                           
   597     0070                     ?_ADC_Setup:	
   598                           ; 1 bytes @ 0x0
   599                           
   600     0070                     ??_ADC_Setup:	
   601                           ; 1 bytes @ 0x0
   602                           
   603     0070                     ?_lcd_send_cmd:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0070                     ?_lcd_send_data:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0070                     ?_lcd_clear:	
   610                           ; 1 bytes @ 0x0
   611                           
   612     0070                     ?_lcd_init:	
   613                           ; 1 bytes @ 0x0
   614                           
   615     0070                     ?_main:	
   616                           ; 1 bytes @ 0x0
   617                           
   618     0070                     ?_strcat:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0070                     ?__Umul8_16:	
   622                           ; 2 bytes @ 0x0
   623                           
   624     0070                     ?_ADC_Read:	
   625                           ; 2 bytes @ 0x0
   626                           
   627     0070                     ?___wmul:	
   628                           ; 2 bytes @ 0x0
   629                           
   630     0070                     ?___awmod:	
   631                           ; 2 bytes @ 0x0
   632                           
   633     0070                     ?___lwmod:	
   634                           ; 2 bytes @ 0x0
   635                           
   636     0070                     ?__tdiv_to_l_:	
   637                           ; 2 bytes @ 0x0
   638                           
   639     0070                     ?__div_to_l_:	
   640                           ; 4 bytes @ 0x0
   641                           
   642     0070                     ?___lldiv:	
   643                           ; 4 bytes @ 0x0
   644                           
   645     0070                     ?___flneg:	
   646                           ; 4 bytes @ 0x0
   647                           
   648     0070                     ?___llmod:	
   649                           ; 4 bytes @ 0x0
   650                           
   651     0070                     I2C_Write@Data:	
   652                           ; 4 bytes @ 0x0
   653                           
   654     0070                     I2C_Multi_Send@cmd:	
   655                           ; 1 bytes @ 0x0
   656                           
   657     0070                     __Umul8_16@multiplicand:	
   658                           ; 1 bytes @ 0x0
   659                           
   660     0070                     _isdigit$762:	
   661                           ; 1 bytes @ 0x0
   662                           
   663     0070                     strcat@from:	
   664                           ; 1 bytes @ 0x0
   665                           
   666     0070                     ADC_Read@channel:	
   667                           ; 1 bytes @ 0x0
   668                           
   669     0070                     ___wmul@multiplier:	
   670                           ; 2 bytes @ 0x0
   671                           
   672     0070                     ___awmod@divisor:	
   673                           ; 2 bytes @ 0x0
   674                           
   675     0070                     ___lwmod@divisor:	
   676                           ; 2 bytes @ 0x0
   677                           
   678     0070                     ___lldiv@divisor:	
   679                           ; 2 bytes @ 0x0
   680                           
   681     0070                     __div_to_l_@f1:	
   682                           ; 4 bytes @ 0x0
   683                           
   684     0070                     ___fleq@ff1:	
   685                           ; 4 bytes @ 0x0
   686                           
   687     0070                     ___flge@ff1:	
   688                           ; 4 bytes @ 0x0
   689                           
   690     0070                     ___flneg@f1:	
   691                           ; 4 bytes @ 0x0
   692                           
   693     0070                     __tdiv_to_l_@f1:	
   694                           ; 4 bytes @ 0x0
   695                           
   696     0070                     ___llmod@divisor:	
   697                           ; 4 bytes @ 0x0
   698                           
   699                           
   700                           ; 4 bytes @ 0x0
   701     0070                     	ds	1
   702     0071                     ??_strcat:
   703     0071                     ?_I2C_Multi_Send:	
   704                           ; 1 bytes @ 0x1
   705                           
   706     0071                     I2C_Multi_Send@address:	
   707                           ; 1 bytes @ 0x1
   708                           
   709     0071                     isdigit@c:	
   710                           ; 1 bytes @ 0x1
   711                           
   712     0071                     strcat@cp:	
   713                           ; 1 bytes @ 0x1
   714                           
   715                           
   716                           ; 1 bytes @ 0x1
   717     0071                     	ds	1
   718     0072                     ??__Umul8_16:
   719     0072                     ??_ADC_Read:	
   720                           ; 1 bytes @ 0x2
   721                           
   722     0072                     I2C_Multi_Send@data:	
   723                           ; 1 bytes @ 0x2
   724                           
   725     0072                     strcat@to:	
   726                           ; 1 bytes @ 0x2
   727                           
   728     0072                     ___wmul@multiplicand:	
   729                           ; 1 bytes @ 0x2
   730                           
   731     0072                     ___awmod@dividend:	
   732                           ; 2 bytes @ 0x2
   733                           
   734     0072                     ___lwmod@dividend:	
   735                           ; 2 bytes @ 0x2
   736                           
   737                           
   738                           ; 2 bytes @ 0x2
   739     0072                     	ds	1
   740     0073                     I2C_Multi_Send@size:
   741                           
   742                           ; 2 bytes @ 0x3
   743     0073                     	ds	1
   744     0074                     ??___wmul:
   745     0074                     ??___awmod:	
   746                           ; 1 bytes @ 0x4
   747                           
   748     0074                     ??___flneg:	
   749                           ; 1 bytes @ 0x4
   750                           
   751     0074                     ??___lwmod:	
   752                           ; 1 bytes @ 0x4
   753                           
   754     0074                     ___awmod@counter:	
   755                           ; 1 bytes @ 0x4
   756                           
   757     0074                     ___lwmod@counter:	
   758                           ; 1 bytes @ 0x4
   759                           
   760     0074                     ___wmul@product:	
   761                           ; 1 bytes @ 0x4
   762                           
   763     0074                     __Umul8_16@product:	
   764                           ; 2 bytes @ 0x4
   765                           
   766     0074                     ___lldiv@dividend:	
   767                           ; 2 bytes @ 0x4
   768                           
   769     0074                     __div_to_l_@f2:	
   770                           ; 4 bytes @ 0x4
   771                           
   772     0074                     ___fleq@ff2:	
   773                           ; 4 bytes @ 0x4
   774                           
   775     0074                     ___flge@ff2:	
   776                           ; 4 bytes @ 0x4
   777                           
   778     0074                     __tdiv_to_l_@f2:	
   779                           ; 4 bytes @ 0x4
   780                           
   781     0074                     ___llmod@dividend:	
   782                           ; 4 bytes @ 0x4
   783                           
   784                           
   785                           ; 4 bytes @ 0x4
   786     0074                     	ds	1
   787     0075                     ??_I2C_Multi_Send:
   788     0075                     ?___lwdiv:	
   789                           ; 1 bytes @ 0x5
   790                           
   791     0075                     ___awmod@sign:	
   792                           ; 2 bytes @ 0x5
   793                           
   794     0075                     ___lwdiv@divisor:	
   795                           ; 1 bytes @ 0x5
   796                           
   797                           
   798                           ; 2 bytes @ 0x5
   799     0075                     	ds	1
   800     0076                     ?___awdiv:
   801     0076                     ?___xxtofl:	
   802                           ; 2 bytes @ 0x6
   803                           
   804     0076                     I2C_Multi_Send@send:	
   805                           ; 4 bytes @ 0x6
   806                           
   807     0076                     ___awdiv@divisor:	
   808                           ; 1 bytes @ 0x6
   809                           
   810     0076                     __Umul8_16@word_mpld:	
   811                           ; 2 bytes @ 0x6
   812                           
   813     0076                     ___xxtofl@val:	
   814                           ; 2 bytes @ 0x6
   815                           
   816                           
   817                           ; 4 bytes @ 0x6
   818     0076                     	ds	1
   819     0077                     I2C_Multi_Send@n:
   820     0077                     ___lwdiv@dividend:	
   821                           ; 2 bytes @ 0x7
   822                           
   823                           
   824                           ; 2 bytes @ 0x7
   825     0077                     	ds	1
   826     0078                     ??__tdiv_to_l_:
   827     0078                     ??__div_to_l_:	
   828                           ; 1 bytes @ 0x8
   829                           
   830     0078                     ??___lldiv:	
   831                           ; 1 bytes @ 0x8
   832                           
   833     0078                     ??___fleq:	
   834                           ; 1 bytes @ 0x8
   835                           
   836     0078                     ??___flge:	
   837                           ; 1 bytes @ 0x8
   838                           
   839     0078                     ??___llmod:	
   840                           ; 1 bytes @ 0x8
   841                           
   842     0078                     __Umul8_16@multiplier:	
   843                           ; 1 bytes @ 0x8
   844                           
   845     0078                     ___awdiv@dividend:	
   846                           ; 1 bytes @ 0x8
   847                           
   848                           
   849                           ; 2 bytes @ 0x8
   850     0078                     	ds	1
   851     0079                     ??_lcd_send_cmd:
   852     0079                     ??_lcd_send_data:	
   853                           ; 1 bytes @ 0x9
   854                           
   855     0079                     ??___lwdiv:	
   856                           ; 1 bytes @ 0x9
   857                           
   858     0079                     ___llmod@counter:	
   859                           ; 1 bytes @ 0x9
   860                           
   861     0079                     ___lwdiv@quotient:	
   862                           ; 1 bytes @ 0x9
   863                           
   864     0079                     ___lldiv@quotient:	
   865                           ; 2 bytes @ 0x9
   866                           
   867                           
   868                           ; 4 bytes @ 0x9
   869     0079                     	ds	1
   870     007A                     ??___awdiv:
   871     007A                     ??___xxtofl:	
   872                           ; 1 bytes @ 0xA
   873                           
   874     007A                     ___awdiv@counter:	
   875                           ; 1 bytes @ 0xA
   876                           
   877                           
   878                           ; 1 bytes @ 0xA
   879     007A                     	ds	1
   880     007B                     ??_lcd_clear:
   881     007B                     ??_lcd_put_cur:	
   882                           ; 1 bytes @ 0xB
   883                           
   884     007B                     ??_lcd_init:	
   885                           ; 1 bytes @ 0xB
   886                           
   887     007B                     ?_lcd_send_string:	
   888                           ; 1 bytes @ 0xB
   889                           
   890     007B                     ___awdiv@sign:	
   891                           ; 1 bytes @ 0xB
   892                           
   893     007B                     ___lwdiv@counter:	
   894                           ; 1 bytes @ 0xB
   895                           
   896     007B                     lcd_clear@i:	
   897                           ; 1 bytes @ 0xB
   898                           
   899     007B                     lcd_send_string@str:	
   900                           ; 2 bytes @ 0xB
   901                           
   902                           
   903                           ; 2 bytes @ 0xB
   904     007B                     	ds	1
   905     007C                     ___awdiv@quotient:
   906                           
   907                           ; 2 bytes @ 0xC
   908     007C                     	ds	1
   909     007D                     ??_lcd_send_string:
   910     007D                     ___lldiv@counter:	
   911                           ; 1 bytes @ 0xD
   912                           
   913                           
   914                           ; 1 bytes @ 0xD
   915     007D                     	ds	1
   916     007E                     ??_GetString:
   917     007E                     ??___flsub:	
   918                           ; 1 bytes @ 0xE
   919                           
   920                           
   921                           	psect	cstackBANK0
   922     0020                     __pcstackBANK0:	
   923                           ; 1 bytes @ 0xE
   924                           
   925     0020                     ?_I2C_Master_Init:
   926     0020                     ?___flmul:	
   927                           ; 1 bytes @ 0x0
   928                           
   929     0020                     ___xxtofl@sign:	
   930                           ; 4 bytes @ 0x0
   931                           
   932     0020                     I2C_Master_Init@c:	
   933                           ; 1 bytes @ 0x0
   934                           
   935     0020                     lcd_send_cmd@data_t:	
   936                           ; 4 bytes @ 0x0
   937                           
   938     0020                     lcd_send_data@data_t:	
   939                           ; 4 bytes @ 0x0
   940                           
   941     0020                     __div_to_l_@quot:	
   942                           ; 4 bytes @ 0x0
   943                           
   944     0020                     __tdiv_to_l_@quot:	
   945                           ; 4 bytes @ 0x0
   946                           
   947     0020                     ___flmul@b:	
   948                           ; 4 bytes @ 0x0
   949                           
   950                           
   951                           ; 4 bytes @ 0x0
   952     0020                     	ds	1
   953     0021                     ___xxtofl@exp:
   954                           
   955                           ; 1 bytes @ 0x1
   956     0021                     	ds	1
   957     0022                     ___xxtofl@arg:
   958                           
   959                           ; 4 bytes @ 0x2
   960     0022                     	ds	2
   961     0024                     ??_I2C_Master_Init:
   962     0024                     lcd_send_cmd@cmd:	
   963                           ; 1 bytes @ 0x4
   964                           
   965     0024                     lcd_send_data@data:	
   966                           ; 1 bytes @ 0x4
   967                           
   968     0024                     __div_to_l_@cntr:	
   969                           ; 1 bytes @ 0x4
   970                           
   971     0024                     __tdiv_to_l_@cntr:	
   972                           ; 1 bytes @ 0x4
   973                           
   974     0024                     ___flmul@a:	
   975                           ; 1 bytes @ 0x4
   976                           
   977                           
   978                           ; 4 bytes @ 0x4
   979     0024                     	ds	1
   980     0025                     lcd_send_cmd@data_u:
   981     0025                     lcd_send_data@data_u:	
   982                           ; 1 bytes @ 0x5
   983                           
   984     0025                     __div_to_l_@exp1:	
   985                           ; 1 bytes @ 0x5
   986                           
   987     0025                     __tdiv_to_l_@exp1:	
   988                           ; 1 bytes @ 0x5
   989                           
   990                           
   991                           ; 1 bytes @ 0x5
   992     0025                     	ds	1
   993     0026                     ?_GetVoltage:
   994     0026                     lcd_send_cmd@data_l:	
   995                           ; 4 bytes @ 0x6
   996                           
   997     0026                     lcd_send_data@data_l:	
   998                           ; 1 bytes @ 0x6
   999                           
  1000     0026                     GetVoltage@adc_read:	
  1001                           ; 1 bytes @ 0x6
  1002                           
  1003                           
  1004                           ; 2 bytes @ 0x6
  1005     0026                     	ds	1
  1006     0027                     ?_lcd_put_cur:
  1007     0027                     lcd_put_cur@row:	
  1008                           ; 1 bytes @ 0x7
  1009                           
  1010                           
  1011                           ; 2 bytes @ 0x7
  1012     0027                     	ds	1
  1013     0028                     ??___flmul:
  1014                           
  1015                           ; 1 bytes @ 0x8
  1016     0028                     	ds	1
  1017     0029                     lcd_put_cur@col:
  1018                           
  1019                           ; 2 bytes @ 0x9
  1020     0029                     	ds	1
  1021     002A                     ??_GetVoltage:
  1022                           
  1023                           ; 1 bytes @ 0xA
  1024     002A                     	ds	3
  1025     002D                     ___flmul@sign:
  1026                           
  1027                           ; 1 bytes @ 0xD
  1028     002D                     	ds	1
  1029     002E                     ___flmul@grs:
  1030                           
  1031                           ; 4 bytes @ 0xE
  1032     002E                     	ds	2
  1033     0030                     GetVoltage@conversion:
  1034                           
  1035                           ; 4 bytes @ 0x10
  1036     0030                     	ds	2
  1037     0032                     ___flmul@aexp:
  1038                           
  1039                           ; 1 bytes @ 0x12
  1040     0032                     	ds	1
  1041     0033                     ___flmul@bexp:
  1042                           
  1043                           ; 1 bytes @ 0x13
  1044     0033                     	ds	1
  1045     0034                     ___flmul@prod:
  1046                           
  1047                           ; 4 bytes @ 0x14
  1048     0034                     	ds	4
  1049     0038                     ___flmul@temp:
  1050                           
  1051                           ; 2 bytes @ 0x18
  1052     0038                     	ds	2
  1053     003A                     ?_fround:
  1054     003A                     ?_scale:	
  1055                           ; 4 bytes @ 0x1A
  1056                           
  1057                           
  1058                           ; 4 bytes @ 0x1A
  1059     003A                     	ds	4
  1060     003E                     ??_fround:
  1061     003E                     ??_scale:	
  1062                           ; 1 bytes @ 0x1E
  1063                           
  1064                           
  1065                           ; 1 bytes @ 0x1E
  1066     003E                     	ds	7
  1067     0045                     _fround$978:
  1068                           
  1069                           ; 4 bytes @ 0x25
  1070     0045                     	ds	3
  1071     0048                     _scale$979:
  1072                           
  1073                           ; 4 bytes @ 0x28
  1074     0048                     	ds	1
  1075     0049                     _fround$977:
  1076                           
  1077                           ; 4 bytes @ 0x29
  1078     0049                     	ds	3
  1079     004C                     scale@scl:
  1080                           
  1081                           ; 1 bytes @ 0x2C
  1082     004C                     	ds	1
  1083     004D                     ?___fltol:
  1084     004D                     fround@prec:	
  1085                           ; 4 bytes @ 0x2D
  1086                           
  1087     004D                     ___fltol@f1:	
  1088                           ; 1 bytes @ 0x2D
  1089                           
  1090                           
  1091                           ; 4 bytes @ 0x2D
  1092     004D                     	ds	1
  1093     004E                     ?___fladd:
  1094     004E                     ___fladd@b:	
  1095                           ; 4 bytes @ 0x2E
  1096                           
  1097                           
  1098                           ; 4 bytes @ 0x2E
  1099     004E                     	ds	3
  1100     0051                     ??___fltol:
  1101                           
  1102                           ; 1 bytes @ 0x31
  1103     0051                     	ds	1
  1104     0052                     ___fladd@a:
  1105                           
  1106                           ; 4 bytes @ 0x32
  1107     0052                     	ds	3
  1108     0055                     ___fltol@sign1:
  1109                           
  1110                           ; 1 bytes @ 0x35
  1111     0055                     	ds	1
  1112     0056                     ??___fladd:
  1113     0056                     ___fltol@exp1:	
  1114                           ; 1 bytes @ 0x36
  1115                           
  1116                           
  1117                           ; 1 bytes @ 0x36
  1118     0056                     	ds	8
  1119     005E                     ___fladd@signs:
  1120                           
  1121                           ; 1 bytes @ 0x3E
  1122     005E                     	ds	1
  1123     005F                     ___fladd@aexp:
  1124                           
  1125                           ; 1 bytes @ 0x3F
  1126     005F                     	ds	1
  1127     0060                     ___fladd@bexp:
  1128                           
  1129                           ; 1 bytes @ 0x40
  1130     0060                     	ds	1
  1131     0061                     ___fladd@grs:
  1132                           
  1133                           ; 1 bytes @ 0x41
  1134     0061                     	ds	1
  1135     0062                     ?___flsub:
  1136     0062                     ___flsub@a:	
  1137                           ; 4 bytes @ 0x42
  1138                           
  1139                           
  1140                           ; 4 bytes @ 0x42
  1141     0062                     	ds	4
  1142     0066                     ___flsub@b:
  1143                           
  1144                           ; 4 bytes @ 0x46
  1145     0066                     	ds	4
  1146     006A                     ?_sprintf:
  1147     006A                     sprintf@f:	
  1148                           ; 2 bytes @ 0x4A
  1149                           
  1150                           
  1151                           ; 1 bytes @ 0x4A
  1152     006A                     	ds	5
  1153                           
  1154                           	psect	maintext
  1155     003D                     __pmaintext:	
  1156 ;;
  1157 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1158 ;;
  1159 ;; *************** function _main *****************
  1160 ;; Defined at:
  1161 ;;		line 236 in file "newmain.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;		None
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  str1           15   56[BANK1 ] unsigned char [15]
  1166 ;;  str0           15   41[BANK1 ] unsigned char [15]
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      void 
  1169 ;; Registers used:
  1170 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1171 ;; Tracked objects:
  1172 ;;		On entry : B00/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1176 ;;      Params:         0       0       0       0       0
  1177 ;;      Locals:         0       0      30       0       0
  1178 ;;      Temps:          0       0       3       0       0
  1179 ;;      Totals:         0       0      33       0       0
  1180 ;;Total ram usage:       33 bytes
  1181 ;; Hardware stack levels required when called: 5
  1182 ;; This function calls:
  1183 ;;		_ADC_Read
  1184 ;;		_ADC_Setup
  1185 ;;		_GetString
  1186 ;;		_GetVoltage
  1187 ;;		_I2C_Master_Init
  1188 ;;		_lcd_clear
  1189 ;;		_lcd_init
  1190 ;;		_lcd_put_cur
  1191 ;;		_lcd_send_string
  1192 ;; This function is called by:
  1193 ;;		Startup code after reset
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197     003D                     _main:	
  1198                           ;psect for function _main
  1199                           
  1200     003D                     l3609:	
  1201                           ;incstack = 0
  1202                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1203                           
  1204                           
  1205                           ;newmain.c: 238:   lcd_put_cur(1,0);;newmain.c: 239:   lcd_send_string("And Matz");;newm
      +                          ain.c: 241: 
  1206     003D  30FF               	movlw	255
  1207     003E  1683               	bsf	3,5	;RP0=1, select bank1
  1208     003F  1303               	bcf	3,6	;RP1=0, select bank1
  1209     0040  0085               	movwf	5	;volatile
  1210     0041                     l3611:
  1211                           
  1212                           ;newmain.c: 242:   while(1){
  1213     0041  0186               	clrf	6	;volatile
  1214     0042                     l3613:
  1215                           
  1216                           ;newmain.c: 243:       lcd_clear();
  1217     0042  0188               	clrf	8	;volatile
  1218     0043                     l3615:
  1219                           
  1220                           ;newmain.c: 244:       adc_value_1 = ADC_Read(0);
  1221     0043  1283               	bcf	3,5	;RP0=0, select bank0
  1222     0044  1303               	bcf	3,6	;RP1=0, select bank0
  1223     0045  0188               	clrf	8	;volatile
  1224     0046                     l3617:
  1225                           
  1226                           ;newmain.c: 245:       _delay((unsigned long)((1)*(20000000/4000.0)));
  1227     0046  0186               	clrf	6	;volatile
  1228     0047                     l3619:
  1229                           
  1230                           ;newmain.c: 247:       *str0 = GetString(GetVoltage(ADC_Read(0)),0);
  1231     0047  3000               	movlw	0
  1232     0048  00A3               	movwf	I2C_Master_Init@c+3
  1233     0049  3001               	movlw	1
  1234     004A  00A2               	movwf	I2C_Master_Init@c+2
  1235     004B  3086               	movlw	134
  1236     004C  00A1               	movwf	I2C_Master_Init@c+1
  1237     004D  30A0               	movlw	160
  1238     004E  00A0               	movwf	I2C_Master_Init@c
  1239     004F  160A  158A  24D6  120A  118A  	fcall	_I2C_Master_Init
  1240     0054                     l3621:
  1241                           
  1242                           ;newmain.c: 249:       lcd_put_cur(0,0);
  1243     0054  160A  158A  2326  120A  118A  	fcall	_ADC_Setup
  1244     0059                     l3623:
  1245                           
  1246                           ;newmain.c: 250:       lcd_send_string(str0);
  1247     0059  120A  158A  20CD  120A  118A  	fcall	_lcd_init
  1248     005E                     l3625:
  1249                           
  1250                           ;newmain.c: 251:       _delay((unsigned long)((1)*(20000000/4000.0)));
  1251     005E  3091               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1252     005F  00FB               	movwf	lcd_send_string@str
  1253     0060  3080               	movlw	128
  1254     0061  00FC               	movwf	lcd_send_string@str+1
  1255     0062  160A  158A  2404  120A  118A  	fcall	_lcd_send_string
  1256                           
  1257                           ;newmain.c: 252:       lcd_put_cur(1,0);
  1258     0067  3027               	movlw	39
  1259     0068  1683               	bsf	3,5	;RP0=1, select bank1
  1260     0069  1303               	bcf	3,6	;RP1=0, select bank1
  1261     006A  00C8               	movwf	(??_main^(0+128)+2)
  1262     006B  300D               	movlw	13
  1263     006C  00C7               	movwf	(??_main^(0+128)+1)
  1264     006D  3025               	movlw	37
  1265     006E  00C6               	movwf	??_main^(0+128)
  1266     006F                     u5517:
  1267     006F  0BC6               	decfsz	??_main^(0+128),f
  1268     0070  286F               	goto	u5517
  1269     0071  0BC7               	decfsz	(??_main^(0+128)+1),f
  1270     0072  286F               	goto	u5517
  1271     0073  0BC8               	decfsz	(??_main^(0+128)+2),f
  1272     0074  286F               	goto	u5517
  1273     0075  2876               	nop2
  1274     0076                     l3627:
  1275                           
  1276                           ;newmain.c: 253:       lcd_send_string(str1);
  1277     0076  160A  158A  2399  120A  118A  	fcall	_lcd_clear
  1278     007B                     l3629:
  1279                           
  1280                           ;newmain.c: 254:       _delay((unsigned long)((200)*(20000000/4000.0)));
  1281     007B  3000               	movlw	0
  1282     007C  1283               	bcf	3,5	;RP0=0, select bank0
  1283     007D  1303               	bcf	3,6	;RP1=0, select bank0
  1284     007E  00A7               	movwf	lcd_put_cur@row
  1285     007F  00A8               	movwf	lcd_put_cur@row+1
  1286     0080  3000               	movlw	0
  1287     0081  00A9               	movwf	lcd_put_cur@col
  1288     0082  00AA               	movwf	lcd_put_cur@col+1
  1289     0083  160A  158A  237B  120A  118A  	fcall	_lcd_put_cur
  1290     0088                     l3631:
  1291     0088  30A7               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1292     0089  00FB               	movwf	lcd_send_string@str
  1293     008A  3080               	movlw	128
  1294     008B  00FC               	movwf	lcd_send_string@str+1
  1295     008C  160A  158A  2404  120A  118A  	fcall	_lcd_send_string
  1296     0091                     l3633:
  1297     0091  3001               	movlw	1
  1298     0092  1283               	bcf	3,5	;RP0=0, select bank0
  1299     0093  1303               	bcf	3,6	;RP1=0, select bank0
  1300     0094  00A7               	movwf	lcd_put_cur@row
  1301     0095  3000               	movlw	0
  1302     0096  00A8               	movwf	lcd_put_cur@row+1
  1303     0097  3000               	movlw	0
  1304     0098  00A9               	movwf	lcd_put_cur@col
  1305     0099  00AA               	movwf	lcd_put_cur@col+1
  1306     009A  160A  158A  237B  120A  118A  	fcall	_lcd_put_cur
  1307     009F                     l3635:
  1308     009F  309E               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1309     00A0  00FB               	movwf	lcd_send_string@str
  1310     00A1  3080               	movlw	128
  1311     00A2  00FC               	movwf	lcd_send_string@str+1
  1312     00A3  160A  158A  2404  120A  118A  	fcall	_lcd_send_string
  1313     00A8                     l3637:
  1314     00A8  3027               	movlw	39
  1315     00A9  1683               	bsf	3,5	;RP0=1, select bank1
  1316     00AA  1303               	bcf	3,6	;RP1=0, select bank1
  1317     00AB  00C8               	movwf	(??_main^(0+128)+2)
  1318     00AC  300D               	movlw	13
  1319     00AD  00C7               	movwf	(??_main^(0+128)+1)
  1320     00AE  3025               	movlw	37
  1321     00AF  00C6               	movwf	??_main^(0+128)
  1322     00B0                     u5527:
  1323     00B0  0BC6               	decfsz	??_main^(0+128),f
  1324     00B1  28B0               	goto	u5527
  1325     00B2  0BC7               	decfsz	(??_main^(0+128)+1),f
  1326     00B3  28B0               	goto	u5527
  1327     00B4  0BC8               	decfsz	(??_main^(0+128)+2),f
  1328     00B5  28B0               	goto	u5527
  1329     00B6  28B7               	nop2
  1330     00B7                     l145:
  1331     00B7  160A  158A  2399  120A  118A  	fcall	_lcd_clear
  1332     00BC                     l3639:
  1333     00BC  3000               	movlw	0
  1334     00BD  00F0               	movwf	ADC_Read@channel
  1335     00BE  00F1               	movwf	ADC_Read@channel+1
  1336     00BF  160A  158A  2479  120A  118A  	fcall	_ADC_Read
  1337     00C4  0871               	movf	?_ADC_Read+1,w
  1338     00C5  1683               	bsf	3,5	;RP0=1, select bank1
  1339     00C6  1303               	bcf	3,6	;RP1=0, select bank1
  1340     00C7  00EA               	movwf	(_adc_value_1+1)^(0+128)
  1341     00C8  0870               	movf	?_ADC_Read,w
  1342     00C9  00E9               	movwf	_adc_value_1^(0+128)
  1343     00CA                     l3641:
  1344     00CA  3007               	movlw	7
  1345     00CB  1683               	bsf	3,5	;RP0=1, select bank1
  1346     00CC  1303               	bcf	3,6	;RP1=0, select bank1
  1347     00CD  00C7               	movwf	(??_main^(0+128)+1)
  1348     00CE  307C               	movlw	124
  1349     00CF  00C6               	movwf	??_main^(0+128)
  1350     00D0                     u5537:
  1351     00D0  0BC6               	decfsz	??_main^(0+128),f
  1352     00D1  28D0               	goto	u5537
  1353     00D2  0BC7               	decfsz	(??_main^(0+128)+1),f
  1354     00D3  28D0               	goto	u5537
  1355     00D4  0000               	nop
  1356     00D5                     l3643:
  1357     00D5  3001               	movlw	1
  1358     00D6  00F0               	movwf	ADC_Read@channel
  1359     00D7  3000               	movlw	0
  1360     00D8  00F1               	movwf	ADC_Read@channel+1
  1361     00D9  160A  158A  2479  120A  118A  	fcall	_ADC_Read
  1362     00DE  0871               	movf	?_ADC_Read+1,w
  1363     00DF  1683               	bsf	3,5	;RP0=1, select bank1
  1364     00E0  1303               	bcf	3,6	;RP1=0, select bank1
  1365     00E1  00E8               	movwf	(_adc_value_2+1)^(0+128)
  1366     00E2  0870               	movf	?_ADC_Read,w
  1367     00E3  00E7               	movwf	_adc_value_2^(0+128)
  1368     00E4                     l3645:
  1369     00E4  3000               	movlw	0
  1370     00E5  00F0               	movwf	ADC_Read@channel
  1371     00E6  00F1               	movwf	ADC_Read@channel+1
  1372     00E7  160A  158A  2479  120A  118A  	fcall	_ADC_Read
  1373     00EC  0871               	movf	?_ADC_Read+1,w
  1374     00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1375     00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1376     00EF  00A7               	movwf	GetVoltage@adc_read+1
  1377     00F0  0870               	movf	?_ADC_Read,w
  1378     00F1  00A6               	movwf	GetVoltage@adc_read
  1379     00F2  160A  158A  258D  120A  118A  	fcall	_GetVoltage
  1380     00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1381     00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1382     00F9  0829               	movf	?_GetVoltage+3,w
  1383     00FA  1683               	bsf	3,5	;RP0=1, select bank1
  1384     00FB  1303               	bcf	3,6	;RP1=0, select bank1
  1385     00FC  00C1               	movwf	(GetString@value+3)^(0+128)
  1386     00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1387     00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1388     00FF  0828               	movf	?_GetVoltage+2,w
  1389     0100  1683               	bsf	3,5	;RP0=1, select bank1
  1390     0101  1303               	bcf	3,6	;RP1=0, select bank1
  1391     0102  00C0               	movwf	(GetString@value+2)^(0+128)
  1392     0103  1283               	bcf	3,5	;RP0=0, select bank0
  1393     0104  1303               	bcf	3,6	;RP1=0, select bank0
  1394     0105  0827               	movf	?_GetVoltage+1,w
  1395     0106  1683               	bsf	3,5	;RP0=1, select bank1
  1396     0107  1303               	bcf	3,6	;RP1=0, select bank1
  1397     0108  00BF               	movwf	(GetString@value+1)^(0+128)
  1398     0109  1283               	bcf	3,5	;RP0=0, select bank0
  1399     010A  1303               	bcf	3,6	;RP1=0, select bank0
  1400     010B  0826               	movf	?_GetVoltage,w
  1401     010C  1683               	bsf	3,5	;RP0=1, select bank1
  1402     010D  1303               	bcf	3,6	;RP1=0, select bank1
  1403     010E  00BE               	movwf	GetString@value^(0+128)
  1404     010F  3000               	movlw	0
  1405     0110  00C2               	movwf	GetString@channel^(0+128)
  1406     0111  00C3               	movwf	(GetString@channel+1)^(0+128)
  1407     0112  160A  118A  2056  120A  118A  	fcall	_GetString
  1408     0117  1683               	bsf	3,5	;RP0=1, select bank1
  1409     0118  1303               	bcf	3,6	;RP1=0, select bank1
  1410     0119  00C9               	movwf	main@str0^(0+128)
  1411     011A                     l3647:
  1412     011A  3001               	movlw	1
  1413     011B  00F0               	movwf	ADC_Read@channel
  1414     011C  3000               	movlw	0
  1415     011D  00F1               	movwf	ADC_Read@channel+1
  1416     011E  160A  158A  2479  120A  118A  	fcall	_ADC_Read
  1417     0123  0871               	movf	?_ADC_Read+1,w
  1418     0124  1283               	bcf	3,5	;RP0=0, select bank0
  1419     0125  1303               	bcf	3,6	;RP1=0, select bank0
  1420     0126  00A7               	movwf	GetVoltage@adc_read+1
  1421     0127  0870               	movf	?_ADC_Read,w
  1422     0128  00A6               	movwf	GetVoltage@adc_read
  1423     0129  160A  158A  258D  120A  118A  	fcall	_GetVoltage
  1424     012E  1283               	bcf	3,5	;RP0=0, select bank0
  1425     012F  1303               	bcf	3,6	;RP1=0, select bank0
  1426     0130  0829               	movf	?_GetVoltage+3,w
  1427     0131  1683               	bsf	3,5	;RP0=1, select bank1
  1428     0132  1303               	bcf	3,6	;RP1=0, select bank1
  1429     0133  00C1               	movwf	(GetString@value+3)^(0+128)
  1430     0134  1283               	bcf	3,5	;RP0=0, select bank0
  1431     0135  1303               	bcf	3,6	;RP1=0, select bank0
  1432     0136  0828               	movf	?_GetVoltage+2,w
  1433     0137  1683               	bsf	3,5	;RP0=1, select bank1
  1434     0138  1303               	bcf	3,6	;RP1=0, select bank1
  1435     0139  00C0               	movwf	(GetString@value+2)^(0+128)
  1436     013A  1283               	bcf	3,5	;RP0=0, select bank0
  1437     013B  1303               	bcf	3,6	;RP1=0, select bank0
  1438     013C  0827               	movf	?_GetVoltage+1,w
  1439     013D  1683               	bsf	3,5	;RP0=1, select bank1
  1440     013E  1303               	bcf	3,6	;RP1=0, select bank1
  1441     013F  00BF               	movwf	(GetString@value+1)^(0+128)
  1442     0140  1283               	bcf	3,5	;RP0=0, select bank0
  1443     0141  1303               	bcf	3,6	;RP1=0, select bank0
  1444     0142  0826               	movf	?_GetVoltage,w
  1445     0143  1683               	bsf	3,5	;RP0=1, select bank1
  1446     0144  1303               	bcf	3,6	;RP1=0, select bank1
  1447     0145  00BE               	movwf	GetString@value^(0+128)
  1448     0146  3001               	movlw	1
  1449     0147  00C2               	movwf	GetString@channel^(0+128)
  1450     0148  3000               	movlw	0
  1451     0149  00C3               	movwf	(GetString@channel^(0+128)+1)
  1452     014A  160A  118A  2056  120A  118A  	fcall	_GetString
  1453     014F  1683               	bsf	3,5	;RP0=1, select bank1
  1454     0150  1303               	bcf	3,6	;RP1=0, select bank1
  1455     0151  00D8               	movwf	main@str1^(0+128)
  1456     0152                     l3649:
  1457     0152  3000               	movlw	0
  1458     0153  1283               	bcf	3,5	;RP0=0, select bank0
  1459     0154  1303               	bcf	3,6	;RP1=0, select bank0
  1460     0155  00A7               	movwf	lcd_put_cur@row
  1461     0156  00A8               	movwf	lcd_put_cur@row+1
  1462     0157  3000               	movlw	0
  1463     0158  00A9               	movwf	lcd_put_cur@col
  1464     0159  00AA               	movwf	lcd_put_cur@col+1
  1465     015A  160A  158A  237B  120A  118A  	fcall	_lcd_put_cur
  1466     015F                     l3651:
  1467     015F  30C9               	movlw	(low (main@str0| 0))& (0+255)
  1468     0160  00FB               	movwf	lcd_send_string@str
  1469     0161  3000               	movlw	0
  1470     0162  00FC               	movwf	lcd_send_string@str+1
  1471     0163  160A  158A  2404  120A  118A  	fcall	_lcd_send_string
  1472     0168                     l3653:
  1473     0168  3007               	movlw	7
  1474     0169  1683               	bsf	3,5	;RP0=1, select bank1
  1475     016A  1303               	bcf	3,6	;RP1=0, select bank1
  1476     016B  00C7               	movwf	(??_main^(0+128)+1)
  1477     016C  307C               	movlw	124
  1478     016D  00C6               	movwf	??_main^(0+128)
  1479     016E                     u5547:
  1480     016E  0BC6               	decfsz	??_main^(0+128),f
  1481     016F  296E               	goto	u5547
  1482     0170  0BC7               	decfsz	(??_main^(0+128)+1),f
  1483     0171  296E               	goto	u5547
  1484     0172  0000               	nop
  1485     0173  3001               	movlw	1
  1486     0174  1283               	bcf	3,5	;RP0=0, select bank0
  1487     0175  1303               	bcf	3,6	;RP1=0, select bank0
  1488     0176  00A7               	movwf	lcd_put_cur@row
  1489     0177  3000               	movlw	0
  1490     0178  00A8               	movwf	lcd_put_cur@row+1
  1491     0179  3000               	movlw	0
  1492     017A  00A9               	movwf	lcd_put_cur@col
  1493     017B  00AA               	movwf	lcd_put_cur@col+1
  1494     017C  160A  158A  237B  120A  118A  	fcall	_lcd_put_cur
  1495     0181                     l3655:
  1496     0181  30D8               	movlw	(low (main@str1| 0))& (0+255)
  1497     0182  00FB               	movwf	lcd_send_string@str
  1498     0183  3000               	movlw	0
  1499     0184  00FC               	movwf	lcd_send_string@str+1
  1500     0185  160A  158A  2404  120A  118A  	fcall	_lcd_send_string
  1501     018A                     l3657:
  1502     018A  3006               	movlw	6
  1503     018B  1683               	bsf	3,5	;RP0=1, select bank1
  1504     018C  1303               	bcf	3,6	;RP1=0, select bank1
  1505     018D  00C8               	movwf	(??_main^(0+128)+2)
  1506     018E  3013               	movlw	19
  1507     018F  00C7               	movwf	(??_main^(0+128)+1)
  1508     0190  30AD               	movlw	173
  1509     0191  00C6               	movwf	??_main^(0+128)
  1510     0192                     u5557:
  1511     0192  0BC6               	decfsz	??_main^(0+128),f
  1512     0193  2992               	goto	u5557
  1513     0194  0BC7               	decfsz	(??_main^(0+128)+1),f
  1514     0195  2992               	goto	u5557
  1515     0196  0BC8               	decfsz	(??_main^(0+128)+2),f
  1516     0197  2992               	goto	u5557
  1517     0198  28B7               	goto	l145
  1518     0199  120A  118A  2800   	ljmp	start
  1519     019C                     __end_of_main:
  1520                           
  1521                           	psect	text1
  1522     1C04                     __ptext1:	
  1523 ;; *************** function _lcd_send_string *****************
  1524 ;; Defined at:
  1525 ;;		line 203 in file "newmain.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  str             2   11[COMMON] PTR unsigned char 
  1528 ;;		 -> main@str1(15), main@str0(15), STR_7(9), STR_6(8), 
  1529 ;;		 -> STR_5(13), 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;		None
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  1    wreg      void 
  1534 ;; Registers used:
  1535 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1541 ;;      Params:         2       0       0       0       0
  1542 ;;      Locals:         0       0       0       0       0
  1543 ;;      Temps:          0       0       0       0       0
  1544 ;;      Totals:         2       0       0       0       0
  1545 ;;Total ram usage:        2 bytes
  1546 ;; Hardware stack levels used: 1
  1547 ;; Hardware stack levels required when called: 4
  1548 ;; This function calls:
  1549 ;;		_lcd_send_data
  1550 ;; This function is called by:
  1551 ;;		_main
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555     1C04                     _lcd_send_string:	
  1556                           ;psect for function _lcd_send_string
  1557                           
  1558     1C04                     l3557:	
  1559                           ;incstack = 0
  1560                           ; Regs used in _lcd_send_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1561                           
  1562                           
  1563                           ;newmain.c: 203:         string = strcat(string, source);;newmain.c: 204:     };newmain.
      +                          c: 205:     if (channel == 1){
  1564     1C04  2C19               	goto	l3563
  1565     1C05                     l3559:
  1566     1C05  087C               	movf	lcd_send_string@str+1,w
  1567     1C06  00FF               	movwf	btemp+1
  1568     1C07  087B               	movf	lcd_send_string@str,w
  1569     1C08  0084               	movwf	4
  1570     1C09  120A  158A  2000  160A  158A  	fcall	stringtab
  1571     1C0E  160A  158A  250E  160A  158A  	fcall	_lcd_send_data
  1572     1C13                     l3561:
  1573     1C13  3001               	movlw	1
  1574     1C14  07FB               	addwf	lcd_send_string@str,f
  1575     1C15  1803               	skipnc
  1576     1C16  0AFC               	incf	lcd_send_string@str+1,f
  1577     1C17  3000               	movlw	0
  1578     1C18  07FC               	addwf	lcd_send_string@str+1,f
  1579     1C19                     l3563:
  1580     1C19  087C               	movf	lcd_send_string@str+1,w
  1581     1C1A  1283               	bcf	3,5	;RP0=0, select bank0
  1582     1C1B  1303               	bcf	3,6	;RP1=0, select bank0
  1583     1C1C  00FF               	movwf	btemp+1
  1584     1C1D  087B               	movf	lcd_send_string@str,w
  1585     1C1E  0084               	movwf	4
  1586     1C1F  120A  158A  2000  160A  158A  	fcall	stringtab
  1587     1C24  3A00               	xorlw	0
  1588     1C25  1D03               	skipz
  1589     1C26  2C28               	goto	u5471
  1590     1C27  2C29               	goto	u5470
  1591     1C28                     u5471:
  1592     1C28  2C05               	goto	l3559
  1593     1C29                     u5470:
  1594     1C29                     l128:
  1595     1C29  0008               	return
  1596     1C2A                     __end_of_lcd_send_string:
  1597                           
  1598                           	psect	text2
  1599     1B7B                     __ptext2:	
  1600 ;; *************** function _lcd_put_cur *****************
  1601 ;; Defined at:
  1602 ;;		line 161 in file "newmain.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  row             2    7[BANK0 ] int 
  1605 ;;  col             2    9[BANK0 ] int 
  1606 ;; Auto vars:     Size  Location     Type
  1607 ;;		None
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      void 
  1610 ;; Registers used:
  1611 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1617 ;;      Params:         0       4       0       0       0
  1618 ;;      Locals:         0       0       0       0       0
  1619 ;;      Temps:          0       0       0       0       0
  1620 ;;      Totals:         0       4       0       0       0
  1621 ;;Total ram usage:        4 bytes
  1622 ;; Hardware stack levels used: 1
  1623 ;; Hardware stack levels required when called: 4
  1624 ;; This function calls:
  1625 ;;		_lcd_send_cmd
  1626 ;; This function is called by:
  1627 ;;		_main
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631     1B7B                     _lcd_put_cur:	
  1632                           ;psect for function _lcd_put_cur
  1633                           
  1634     1B7B                     l3515:	
  1635                           ;incstack = 0
  1636                           ; Regs used in _lcd_put_cur: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1637                           
  1638                           
  1639                           ;newmain.c: 161: ;newmain.c: 162:  _delay((unsigned long)((50)*(20000000/4000.0)));;newm
      +                          ain.c: 163:  lcd_send_cmd (0x30);
  1640     1B7B  2B83               	goto	l3521
  1641     1B7C                     l116:	
  1642                           ;newmain.c: 164:  _delay((unsigned long)((5)*(20000000/4000.0)));;newmain.c: 165:  lcd_s
      +                          end_cmd (0x30);
  1643                           
  1644                           
  1645                           ;newmain.c: 166:  _delay((unsigned long)((1)*(20000000/4000.0)));
  1646     1B7C  17A9               	bsf	lcd_put_cur@col,7
  1647                           
  1648                           ;newmain.c: 167:  lcd_send_cmd (0x30);
  1649     1B7D  2B92               	goto	l3523
  1650     1B7E                     l3517:
  1651                           
  1652                           ;newmain.c: 169:  lcd_send_cmd (0x20);
  1653     1B7E  30C0               	movlw	192
  1654     1B7F  04A9               	iorwf	lcd_put_cur@col,f
  1655     1B80  3000               	movlw	0
  1656     1B81  04AA               	iorwf	lcd_put_cur@col+1,f
  1657                           
  1658                           ;newmain.c: 170:  _delay((unsigned long)((10)*(20000000/4000.0)));
  1659     1B82  2B92               	goto	l3523
  1660     1B83                     l3521:
  1661                           
  1662                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1663                           ; Switch size 1, requested type "simple"
  1664                           ; Number of cases is 1, Range of values is 0 to 0
  1665                           ; switch strategies available:
  1666                           ; Name         Instructions Cycles
  1667                           ; simple_byte            4     3 (average)
  1668                           ; direct_byte           11     8 (fixed)
  1669                           ; jumptable            260     6 (fixed)
  1670                           ;	Chosen strategy is simple_byte
  1671     1B83  1283               	bcf	3,5	;RP0=0, select bank0
  1672     1B84  1303               	bcf	3,6	;RP1=0, select bank0
  1673     1B85  0828               	movf	lcd_put_cur@row+1,w
  1674     1B86  3A00               	xorlw	0	; case 0
  1675     1B87  1903               	skipnz
  1676     1B88  2B8A               	goto	l3699
  1677     1B89  2B92               	goto	l3523
  1678     1B8A                     l3699:
  1679                           
  1680                           ; Switch size 1, requested type "simple"
  1681                           ; Number of cases is 2, Range of values is 0 to 1
  1682                           ; switch strategies available:
  1683                           ; Name         Instructions Cycles
  1684                           ; simple_byte            7     4 (average)
  1685                           ; direct_byte           14     8 (fixed)
  1686                           ; jumptable            260     6 (fixed)
  1687                           ;	Chosen strategy is simple_byte
  1688     1B8A  0827               	movf	lcd_put_cur@row,w
  1689     1B8B  3A00               	xorlw	0	; case 0
  1690     1B8C  1903               	skipnz
  1691     1B8D  2B7C               	goto	l116
  1692     1B8E  3A01               	xorlw	1	; case 1
  1693     1B8F  1903               	skipnz
  1694     1B90  2B7E               	goto	l3517
  1695     1B91  2B92               	goto	l3523
  1696     1B92                     l3523:
  1697                           
  1698                           ;newmain.c: 173:  lcd_send_cmd (0x28);
  1699     1B92  0829               	movf	lcd_put_cur@col,w
  1700     1B93  160A  158A  254D  160A  158A  	fcall	_lcd_send_cmd
  1701     1B98                     l119:
  1702     1B98  0008               	return
  1703     1B99                     __end_of_lcd_put_cur:
  1704                           
  1705                           	psect	text3
  1706     08CD                     __ptext3:	
  1707 ;; *************** function _lcd_init *****************
  1708 ;; Defined at:
  1709 ;;		line 177 in file "newmain.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1723 ;;      Params:         0       0       0       0       0
  1724 ;;      Locals:         0       0       0       0       0
  1725 ;;      Temps:          3       0       0       0       0
  1726 ;;      Totals:         3       0       0       0       0
  1727 ;;Total ram usage:        3 bytes
  1728 ;; Hardware stack levels used: 1
  1729 ;; Hardware stack levels required when called: 4
  1730 ;; This function calls:
  1731 ;;		_lcd_send_cmd
  1732 ;; This function is called by:
  1733 ;;		_main
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737     08CD                     _lcd_init:	
  1738                           ;psect for function _lcd_init
  1739                           
  1740     08CD                     l3529:	
  1741                           ;incstack = 0
  1742                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1743                           
  1744                           
  1745                           ;newmain.c: 180:  lcd_send_cmd (0x06);
  1746     08CD  3002               	movlw	2
  1747     08CE  00FD               	movwf	??_lcd_init+2
  1748     08CF  3045               	movlw	69
  1749     08D0  00FC               	movwf	??_lcd_init+1
  1750     08D1  30A9               	movlw	169
  1751     08D2  00FB               	movwf	??_lcd_init
  1752     08D3                     u5567:
  1753     08D3  0BFB               	decfsz	??_lcd_init,f
  1754     08D4  28D3               	goto	u5567
  1755     08D5  0BFC               	decfsz	??_lcd_init+1,f
  1756     08D6  28D3               	goto	u5567
  1757     08D7  0BFD               	decfsz	??_lcd_init+2,f
  1758     08D8  28D3               	goto	u5567
  1759     08D9  28DA               	nop2
  1760     08DA                     l3531:
  1761                           
  1762                           ;newmain.c: 181:  _delay((unsigned long)((1)*(20000000/4000.0)));
  1763     08DA  3030               	movlw	48
  1764     08DB  160A  158A  254D  120A  158A  	fcall	_lcd_send_cmd
  1765     08E0                     l3533:
  1766                           
  1767                           ;newmain.c: 182:  lcd_send_cmd (0x0C);
  1768     08E0  3021               	movlw	33
  1769     08E1  00FC               	movwf	??_lcd_init+1
  1770     08E2  3076               	movlw	118
  1771     08E3  00FB               	movwf	??_lcd_init
  1772     08E4                     u5577:
  1773     08E4  0BFB               	decfsz	??_lcd_init,f
  1774     08E5  28E4               	goto	u5577
  1775     08E6  0BFC               	decfsz	??_lcd_init+1,f
  1776     08E7  28E4               	goto	u5577
  1777     08E8  0000               	nop
  1778                           
  1779                           ;newmain.c: 183: }
  1780     08E9  3030               	movlw	48
  1781     08EA  160A  158A  254D  120A  158A  	fcall	_lcd_send_cmd
  1782     08EF                     l3535:
  1783                           
  1784                           ;newmain.c: 184: 
  1785     08EF  3007               	movlw	7
  1786     08F0  00FC               	movwf	??_lcd_init+1
  1787     08F1  307D               	movlw	125
  1788     08F2  00FB               	movwf	??_lcd_init
  1789     08F3                     u5587:
  1790     08F3  0BFB               	decfsz	??_lcd_init,f
  1791     08F4  28F3               	goto	u5587
  1792     08F5  0BFC               	decfsz	??_lcd_init+1,f
  1793     08F6  28F3               	goto	u5587
  1794     08F7                     l3537:
  1795                           
  1796                           ;newmain.c: 185: void lcd_send_string (char *str)
  1797     08F7  3030               	movlw	48
  1798     08F8  160A  158A  254D  120A  158A  	fcall	_lcd_send_cmd
  1799                           
  1800                           ;newmain.c: 186: {
  1801     08FD  3041               	movlw	65
  1802     08FE  00FC               	movwf	??_lcd_init+1
  1803     08FF  30EE               	movlw	238
  1804     0900  00FB               	movwf	??_lcd_init
  1805     0901                     u5597:
  1806     0901  0BFB               	decfsz	??_lcd_init,f
  1807     0902  2901               	goto	u5597
  1808     0903  0BFC               	decfsz	??_lcd_init+1,f
  1809     0904  2901               	goto	u5597
  1810     0905  0000               	nop
  1811     0906                     l3539:
  1812                           
  1813                           ;newmain.c: 187:  while (*str) lcd_send_data (*str++);
  1814     0906  3020               	movlw	32
  1815     0907  160A  158A  254D  120A  158A  	fcall	_lcd_send_cmd
  1816     090C                     l3541:
  1817                           
  1818                           ;newmain.c: 188: }
  1819     090C  3041               	movlw	65
  1820     090D  00FC               	movwf	??_lcd_init+1
  1821     090E  30EE               	movlw	238
  1822     090F  00FB               	movwf	??_lcd_init
  1823     0910                     u5607:
  1824     0910  0BFB               	decfsz	??_lcd_init,f
  1825     0911  2910               	goto	u5607
  1826     0912  0BFC               	decfsz	??_lcd_init+1,f
  1827     0913  2910               	goto	u5607
  1828     0914  0000               	nop
  1829                           
  1830                           ;newmain.c: 191: float GetVoltage(uint16_t adc_read){
  1831     0915  3028               	movlw	40
  1832     0916  160A  158A  254D  120A  158A  	fcall	_lcd_send_cmd
  1833     091B                     l3543:
  1834                           
  1835                           ;newmain.c: 192:     float conversion = 0.0f;
  1836     091B  3007               	movlw	7
  1837     091C  00FC               	movwf	??_lcd_init+1
  1838     091D  307D               	movlw	125
  1839     091E  00FB               	movwf	??_lcd_init
  1840     091F                     u5617:
  1841     091F  0BFB               	decfsz	??_lcd_init,f
  1842     0920  291F               	goto	u5617
  1843     0921  0BFC               	decfsz	??_lcd_init+1,f
  1844     0922  291F               	goto	u5617
  1845     0923                     l3545:
  1846                           
  1847                           ;newmain.c: 193:     conversion = (float) (adc_read * 5 / 1024);
  1848     0923  3008               	movlw	8
  1849     0924  160A  158A  254D  120A  158A  	fcall	_lcd_send_cmd
  1850                           
  1851                           ;newmain.c: 194:     return conversion;
  1852     0929  3007               	movlw	7
  1853     092A  00FC               	movwf	??_lcd_init+1
  1854     092B  307D               	movlw	125
  1855     092C  00FB               	movwf	??_lcd_init
  1856     092D                     u5627:
  1857     092D  0BFB               	decfsz	??_lcd_init,f
  1858     092E  292D               	goto	u5627
  1859     092F  0BFC               	decfsz	??_lcd_init+1,f
  1860     0930  292D               	goto	u5627
  1861     0931                     l3547:
  1862                           
  1863                           ;newmain.c: 195: }
  1864     0931  3001               	movlw	1
  1865     0932  160A  158A  254D  120A  158A  	fcall	_lcd_send_cmd
  1866     0937                     l3549:
  1867                           
  1868                           ;newmain.c: 196: 
  1869     0937  3007               	movlw	7
  1870     0938  00FC               	movwf	??_lcd_init+1
  1871     0939  307D               	movlw	125
  1872     093A  00FB               	movwf	??_lcd_init
  1873     093B                     u5637:
  1874     093B  0BFB               	decfsz	??_lcd_init,f
  1875     093C  293B               	goto	u5637
  1876     093D  0BFC               	decfsz	??_lcd_init+1,f
  1877     093E  293B               	goto	u5637
  1878     093F                     l3551:
  1879                           
  1880                           ;newmain.c: 197: char *GetString(float value, int channel){
  1881     093F  3007               	movlw	7
  1882     0940  00FC               	movwf	??_lcd_init+1
  1883     0941  307D               	movlw	125
  1884     0942  00FB               	movwf	??_lcd_init
  1885     0943                     u5647:
  1886     0943  0BFB               	decfsz	??_lcd_init,f
  1887     0944  2943               	goto	u5647
  1888     0945  0BFC               	decfsz	??_lcd_init+1,f
  1889     0946  2943               	goto	u5647
  1890     0947                     l3553:
  1891                           
  1892                           ;newmain.c: 198:     char *source;
  1893     0947  3006               	movlw	6
  1894     0948  160A  158A  254D  120A  158A  	fcall	_lcd_send_cmd
  1895                           
  1896                           ;newmain.c: 199:     char *string;
  1897     094D  3007               	movlw	7
  1898     094E  00FC               	movwf	??_lcd_init+1
  1899     094F  307D               	movlw	125
  1900     0950  00FB               	movwf	??_lcd_init
  1901     0951                     u5657:
  1902     0951  0BFB               	decfsz	??_lcd_init,f
  1903     0952  2951               	goto	u5657
  1904     0953  0BFC               	decfsz	??_lcd_init+1,f
  1905     0954  2951               	goto	u5657
  1906     0955                     l3555:
  1907                           
  1908                           ;newmain.c: 200:     if (channel == 0){
  1909     0955  300C               	movlw	12
  1910     0956  160A  158A  254D  120A  158A  	fcall	_lcd_send_cmd
  1911     095B                     l122:
  1912     095B  0008               	return
  1913     095C                     __end_of_lcd_init:
  1914                           
  1915                           	psect	text4
  1916     1B99                     __ptext4:	
  1917 ;; *************** function _lcd_clear *****************
  1918 ;; Defined at:
  1919 ;;		line 152 in file "newmain.c"
  1920 ;; Parameters:    Size  Location     Type
  1921 ;;		None
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  i               2   11[COMMON] int 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1933 ;;      Params:         0       0       0       0       0
  1934 ;;      Locals:         2       0       0       0       0
  1935 ;;      Temps:          0       0       0       0       0
  1936 ;;      Totals:         2       0       0       0       0
  1937 ;;Total ram usage:        2 bytes
  1938 ;; Hardware stack levels used: 1
  1939 ;; Hardware stack levels required when called: 4
  1940 ;; This function calls:
  1941 ;;		_lcd_send_cmd
  1942 ;;		_lcd_send_data
  1943 ;; This function is called by:
  1944 ;;		_main
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948     1B99                     _lcd_clear:	
  1949                           ;psect for function _lcd_clear
  1950                           
  1951     1B99                     l3501:	
  1952                           ;incstack = 0
  1953                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1954                           
  1955                           
  1956                           ;newmain.c: 154: 
  1957     1B99  3080               	movlw	128
  1958     1B9A  160A  158A  254D  160A  158A  	fcall	_lcd_send_cmd
  1959     1B9F                     l3503:
  1960                           
  1961                           ;newmain.c: 155:     lcd_send_cmd (col);
  1962     1B9F  01FB               	clrf	lcd_clear@i
  1963     1BA0  01FC               	clrf	lcd_clear@i+1
  1964     1BA1                     l3509:
  1965                           
  1966                           ;newmain.c: 156: };newmain.c: 157: 
  1967     1BA1  3020               	movlw	32
  1968     1BA2  160A  158A  250E  160A  158A  	fcall	_lcd_send_data
  1969     1BA7                     l3511:
  1970                           
  1971                           ;newmain.c: 158: 
  1972     1BA7  3001               	movlw	1
  1973     1BA8  07FB               	addwf	lcd_clear@i,f
  1974     1BA9  1803               	skipnc
  1975     1BAA  0AFC               	incf	lcd_clear@i+1,f
  1976     1BAB  3000               	movlw	0
  1977     1BAC  07FC               	addwf	lcd_clear@i+1,f
  1978     1BAD                     l3513:
  1979     1BAD  087C               	movf	lcd_clear@i+1,w
  1980     1BAE  3A80               	xorlw	128
  1981     1BAF  00FF               	movwf	btemp+1
  1982     1BB0  3080               	movlw	128
  1983     1BB1  027F               	subwf	btemp+1,w
  1984     1BB2  1D03               	skipz
  1985     1BB3  2BB6               	goto	u5465
  1986     1BB4  3046               	movlw	70
  1987     1BB5  027B               	subwf	lcd_clear@i,w
  1988     1BB6                     u5465:
  1989     1BB6  1C03               	skipc
  1990     1BB7  2BB9               	goto	u5461
  1991     1BB8  2BBA               	goto	u5460
  1992     1BB9                     u5461:
  1993     1BB9  2BA1               	goto	l3509
  1994     1BBA                     u5460:
  1995     1BBA                     l112:
  1996     1BBA  0008               	return
  1997     1BBB                     __end_of_lcd_clear:
  1998                           
  1999                           	psect	text5
  2000     1D0E                     __ptext5:	
  2001 ;; *************** function _lcd_send_data *****************
  2002 ;; Defined at:
  2003 ;;		line 134 in file "newmain.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;  data            1    wreg     unsigned char 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  data            1    4[BANK0 ] unsigned char 
  2008 ;;  data_t          4    0[BANK0 ] unsigned char [4]
  2009 ;;  data_l          1    6[BANK0 ] unsigned char 
  2010 ;;  data_u          1    5[BANK0 ] unsigned char 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2020 ;;      Params:         0       0       0       0       0
  2021 ;;      Locals:         0       7       0       0       0
  2022 ;;      Temps:          2       0       0       0       0
  2023 ;;      Totals:         2       7       0       0       0
  2024 ;;Total ram usage:        9 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; Hardware stack levels required when called: 3
  2027 ;; This function calls:
  2028 ;;		_I2C_Multi_Send
  2029 ;;		_I2C_Start
  2030 ;;		_I2C_Stop
  2031 ;; This function is called by:
  2032 ;;		_lcd_clear
  2033 ;;		_lcd_send_string
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037     1D0E                     _lcd_send_data:	
  2038                           ;psect for function _lcd_send_data
  2039                           
  2040                           
  2041                           ;incstack = 0
  2042                           ; Regs used in _lcd_send_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2043                           ;lcd_send_data@data stored from wreg
  2044     1D0E  1283               	bcf	3,5	;RP0=0, select bank0
  2045     1D0F  1303               	bcf	3,6	;RP1=0, select bank0
  2046     1D10  00A4               	movwf	lcd_send_data@data
  2047     1D11                     l3229:
  2048                           
  2049                           ;newmain.c: 134: void lcd_clear (void);newmain.c: 135: {;newmain.c: 136:  lcd_send_cmd (
      +                          0x80);;newmain.c: 137:  for (int i=0; i<70; i++);newmain.c: 138:  {
  2050     1D11  0824               	movf	lcd_send_data@data,w
  2051     1D12  39F0               	andlw	240
  2052     1D13  00A5               	movwf	lcd_send_data@data_u
  2053     1D14                     l3231:
  2054                           
  2055                           ;newmain.c: 139:   lcd_send_data (' ');
  2056     1D14  0824               	movf	lcd_send_data@data,w
  2057     1D15  00F9               	movwf	??_lcd_send_data
  2058     1D16  3003               	movlw	3
  2059     1D17                     u5045:
  2060     1D17  1003               	clrc
  2061     1D18  0DF9               	rlf	??_lcd_send_data,f
  2062     1D19  3EFF               	addlw	-1
  2063     1D1A  1D03               	skipz
  2064     1D1B  2D17               	goto	u5045
  2065     1D1C  1003               	clrc
  2066     1D1D  0D79               	rlf	??_lcd_send_data,w
  2067     1D1E  39F0               	andlw	240
  2068     1D1F  00A6               	movwf	lcd_send_data@data_l
  2069     1D20                     l3233:
  2070                           
  2071                           ;newmain.c: 140:  }
  2072     1D20  0825               	movf	lcd_send_data@data_u,w
  2073     1D21  380D               	iorlw	13
  2074     1D22  00A0               	movwf	lcd_send_data@data_t
  2075     1D23                     l3235:
  2076                           
  2077                           ;newmain.c: 141: }
  2078     1D23  0825               	movf	lcd_send_data@data_u,w
  2079     1D24  3809               	iorlw	9
  2080     1D25  00A1               	movwf	lcd_send_data@data_t+1
  2081     1D26                     l3237:
  2082                           
  2083                           ;newmain.c: 142: 
  2084     1D26  0826               	movf	lcd_send_data@data_l,w
  2085     1D27  380D               	iorlw	13
  2086     1D28  00A2               	movwf	lcd_send_data@data_t+2
  2087     1D29                     l3239:
  2088                           
  2089                           ;newmain.c: 143: void lcd_put_cur(int row, int col)
  2090     1D29  0826               	movf	lcd_send_data@data_l,w
  2091     1D2A  3809               	iorlw	9
  2092     1D2B  00A3               	movwf	lcd_send_data@data_t+3
  2093     1D2C                     l3241:
  2094                           
  2095                           ;newmain.c: 144: {
  2096     1D2C  160A  158A  232F  160A  158A  	fcall	_I2C_Start
  2097     1D31                     l3243:
  2098                           
  2099                           ;newmain.c: 145:     switch (row)
  2100     1D31  3027               	movlw	39
  2101     1D32  00F1               	movwf	I2C_Multi_Send@address
  2102     1D33  3020               	movlw	(low (lcd_send_data@data_t| 0))& (0+255)
  2103     1D34  00F2               	movwf	I2C_Multi_Send@data
  2104     1D35  3004               	movlw	4
  2105     1D36  00F3               	movwf	I2C_Multi_Send@size
  2106     1D37  3000               	movlw	0
  2107     1D38  00F4               	movwf	I2C_Multi_Send@size+1
  2108     1D39  3000               	movlw	0
  2109     1D3A  160A  158A  24A7  160A  158A  	fcall	_I2C_Multi_Send
  2110     1D3F                     l3245:
  2111                           
  2112                           ;newmain.c: 146:     {
  2113     1D3F  160A  158A  2338  160A  158A  	fcall	_I2C_Stop
  2114     1D44                     l3247:
  2115                           
  2116                           ;newmain.c: 148:             col |= 0x80;
  2117     1D44  3007               	movlw	7
  2118     1D45  00FA               	movwf	??_lcd_send_data+1
  2119     1D46  307D               	movlw	125
  2120     1D47  00F9               	movwf	??_lcd_send_data
  2121     1D48                     u5667:
  2122     1D48  0BF9               	decfsz	??_lcd_send_data,f
  2123     1D49  2D48               	goto	u5667
  2124     1D4A  0BFA               	decfsz	??_lcd_send_data+1,f
  2125     1D4B  2D48               	goto	u5667
  2126     1D4C                     l107:
  2127     1D4C  0008               	return
  2128     1D4D                     __end_of_lcd_send_data:
  2129                           
  2130                           	psect	text6
  2131     1D4D                     __ptext6:	
  2132 ;; *************** function _lcd_send_cmd *****************
  2133 ;; Defined at:
  2134 ;;		line 116 in file "newmain.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  cmd             1    wreg     unsigned char 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;  cmd             1    4[BANK0 ] unsigned char 
  2139 ;;  data_t          4    0[BANK0 ] unsigned char [4]
  2140 ;;  data_l          1    6[BANK0 ] unsigned char 
  2141 ;;  data_u          1    5[BANK0 ] unsigned char 
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      void 
  2144 ;; Registers used:
  2145 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2151 ;;      Params:         0       0       0       0       0
  2152 ;;      Locals:         0       7       0       0       0
  2153 ;;      Temps:          2       0       0       0       0
  2154 ;;      Totals:         2       7       0       0       0
  2155 ;;Total ram usage:        9 bytes
  2156 ;; Hardware stack levels used: 1
  2157 ;; Hardware stack levels required when called: 3
  2158 ;; This function calls:
  2159 ;;		_I2C_Multi_Send
  2160 ;;		_I2C_Start
  2161 ;;		_I2C_Stop
  2162 ;; This function is called by:
  2163 ;;		_lcd_clear
  2164 ;;		_lcd_put_cur
  2165 ;;		_lcd_init
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169     1D4D                     _lcd_send_cmd:	
  2170                           ;psect for function _lcd_send_cmd
  2171                           
  2172                           
  2173                           ;incstack = 0
  2174                           ; Regs used in _lcd_send_cmd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2175                           ;lcd_send_cmd@cmd stored from wreg
  2176     1D4D  1283               	bcf	3,5	;RP0=0, select bank0
  2177     1D4E  1303               	bcf	3,6	;RP1=0, select bank0
  2178     1D4F  00A4               	movwf	lcd_send_cmd@cmd
  2179     1D50                     l3209:
  2180                           
  2181                           ;newmain.c: 116: void lcd_send_data (char data);newmain.c: 117: {;newmain.c: 118:  char 
      +                          data_u, data_l;;newmain.c: 119:  uint8_t data_t[4];;newmain.c: 120:  data_u = (data&0xf0
      +                          );
  2182     1D50  0824               	movf	lcd_send_cmd@cmd,w
  2183     1D51  39F0               	andlw	240
  2184     1D52  00A5               	movwf	lcd_send_cmd@data_u
  2185     1D53                     l3211:
  2186                           
  2187                           ;newmain.c: 121:  data_l = ((data<<4)&0xf0);
  2188     1D53  0824               	movf	lcd_send_cmd@cmd,w
  2189     1D54  00F9               	movwf	??_lcd_send_cmd
  2190     1D55  3003               	movlw	3
  2191     1D56                     u5035:
  2192     1D56  1003               	clrc
  2193     1D57  0DF9               	rlf	??_lcd_send_cmd,f
  2194     1D58  3EFF               	addlw	-1
  2195     1D59  1D03               	skipz
  2196     1D5A  2D56               	goto	u5035
  2197     1D5B  1003               	clrc
  2198     1D5C  0D79               	rlf	??_lcd_send_cmd,w
  2199     1D5D  39F0               	andlw	240
  2200     1D5E  00A6               	movwf	lcd_send_cmd@data_l
  2201     1D5F                     l3213:
  2202                           
  2203                           ;newmain.c: 122:  data_t[0] = data_u|0x0D;
  2204     1D5F  0825               	movf	lcd_send_cmd@data_u,w
  2205     1D60  380C               	iorlw	12
  2206     1D61  00A0               	movwf	lcd_send_cmd@data_t
  2207     1D62                     l3215:
  2208                           
  2209                           ;newmain.c: 123:  data_t[1] = data_u|0x09;
  2210     1D62  0825               	movf	lcd_send_cmd@data_u,w
  2211     1D63  3808               	iorlw	8
  2212     1D64  00A1               	movwf	lcd_send_cmd@data_t+1
  2213     1D65                     l3217:
  2214                           
  2215                           ;newmain.c: 124:  data_t[2] = data_l|0x0D;
  2216     1D65  0826               	movf	lcd_send_cmd@data_l,w
  2217     1D66  380C               	iorlw	12
  2218     1D67  00A2               	movwf	lcd_send_cmd@data_t+2
  2219     1D68                     l3219:
  2220                           
  2221                           ;newmain.c: 125:  data_t[3] = data_l|0x09;
  2222     1D68  0826               	movf	lcd_send_cmd@data_l,w
  2223     1D69  3808               	iorlw	8
  2224     1D6A  00A3               	movwf	lcd_send_cmd@data_t+3
  2225     1D6B                     l3221:
  2226                           
  2227                           ;newmain.c: 126:  I2C_Start();
  2228     1D6B  160A  158A  232F  160A  158A  	fcall	_I2C_Start
  2229     1D70                     l3223:
  2230                           
  2231                           ;newmain.c: 127:     I2C_Multi_Send(0,0X27,data_t,sizeof(data_t));
  2232     1D70  3027               	movlw	39
  2233     1D71  00F1               	movwf	I2C_Multi_Send@address
  2234     1D72  3020               	movlw	(low (lcd_send_cmd@data_t| 0))& (0+255)
  2235     1D73  00F2               	movwf	I2C_Multi_Send@data
  2236     1D74  3004               	movlw	4
  2237     1D75  00F3               	movwf	I2C_Multi_Send@size
  2238     1D76  3000               	movlw	0
  2239     1D77  00F4               	movwf	I2C_Multi_Send@size+1
  2240     1D78  3000               	movlw	0
  2241     1D79  160A  158A  24A7  160A  158A  	fcall	_I2C_Multi_Send
  2242     1D7E                     l3225:
  2243                           
  2244                           ;newmain.c: 128:     I2C_Stop();
  2245     1D7E  160A  158A  2338  160A  158A  	fcall	_I2C_Stop
  2246     1D83                     l3227:
  2247                           
  2248                           ;newmain.c: 130:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2249     1D83  3021               	movlw	33
  2250     1D84  00FA               	movwf	??_lcd_send_cmd+1
  2251     1D85  3076               	movlw	118
  2252     1D86  00F9               	movwf	??_lcd_send_cmd
  2253     1D87                     u5677:
  2254     1D87  0BF9               	decfsz	??_lcd_send_cmd,f
  2255     1D88  2D87               	goto	u5677
  2256     1D89  0BFA               	decfsz	??_lcd_send_cmd+1,f
  2257     1D8A  2D87               	goto	u5677
  2258     1D8B  0000               	nop
  2259     1D8C                     l104:
  2260     1D8C  0008               	return
  2261     1D8D                     __end_of_lcd_send_cmd:
  2262                           
  2263                           	psect	text7
  2264     1B38                     __ptext7:	
  2265 ;; *************** function _I2C_Stop *****************
  2266 ;; Defined at:
  2267 ;;		line 49 in file "newmain.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;		None
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;		None
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  1    wreg      void 
  2274 ;; Registers used:
  2275 ;;		wreg, status,2, status,0, pclath, cstack
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2281 ;;      Params:         0       0       0       0       0
  2282 ;;      Locals:         0       0       0       0       0
  2283 ;;      Temps:          0       0       0       0       0
  2284 ;;      Totals:         0       0       0       0       0
  2285 ;;Total ram usage:        0 bytes
  2286 ;; Hardware stack levels used: 1
  2287 ;; Hardware stack levels required when called: 1
  2288 ;; This function calls:
  2289 ;;		_I2C_IDLE
  2290 ;; This function is called by:
  2291 ;;		_lcd_send_cmd
  2292 ;;		_lcd_send_data
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296     1B38                     _I2C_Stop:	
  2297                           ;psect for function _I2C_Stop
  2298                           
  2299     1B38                     l2821:	
  2300                           ;incstack = 0
  2301                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  2302                           
  2303                           
  2304                           ;newmain.c: 51: I2C_IDLE();
  2305     1B38  160A  158A  234C  160A  158A  	fcall	_I2C_IDLE
  2306     1B3D                     l2823:
  2307                           
  2308                           ;newmain.c: 52: SSPCON2bits.ACKDT = 1;
  2309     1B3D  1683               	bsf	3,5	;RP0=1, select bank1
  2310     1B3E  1303               	bcf	3,6	;RP1=0, select bank1
  2311     1B3F  1511               	bsf	17,2	;volatile
  2312     1B40                     l67:
  2313     1B40  0008               	return
  2314     1B41                     __end_of_I2C_Stop:
  2315                           
  2316                           	psect	text8
  2317     1B2F                     __ptext8:	
  2318 ;; *************** function _I2C_Start *****************
  2319 ;; Defined at:
  2320 ;;		line 43 in file "newmain.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;		None
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;		None
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  1    wreg      void 
  2327 ;; Registers used:
  2328 ;;		wreg, status,2, status,0, pclath, cstack
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2334 ;;      Params:         0       0       0       0       0
  2335 ;;      Locals:         0       0       0       0       0
  2336 ;;      Temps:          0       0       0       0       0
  2337 ;;      Totals:         0       0       0       0       0
  2338 ;;Total ram usage:        0 bytes
  2339 ;; Hardware stack levels used: 1
  2340 ;; Hardware stack levels required when called: 1
  2341 ;; This function calls:
  2342 ;;		_I2C_IDLE
  2343 ;; This function is called by:
  2344 ;;		_lcd_send_cmd
  2345 ;;		_lcd_send_data
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349     1B2F                     _I2C_Start:	
  2350                           ;psect for function _I2C_Start
  2351                           
  2352     1B2F                     l2817:	
  2353                           ;incstack = 0
  2354                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  2355                           
  2356                           
  2357                           ;newmain.c: 45:   I2C_IDLE();
  2358     1B2F  160A  158A  234C  160A  158A  	fcall	_I2C_IDLE
  2359     1B34                     l2819:
  2360                           
  2361                           ;newmain.c: 46:   SSPCON2bits.ACKDT = 0;
  2362     1B34  1683               	bsf	3,5	;RP0=1, select bank1
  2363     1B35  1303               	bcf	3,6	;RP1=0, select bank1
  2364     1B36  1411               	bsf	17,0	;volatile
  2365     1B37                     l64:
  2366     1B37  0008               	return
  2367     1B38                     __end_of_I2C_Start:
  2368                           
  2369                           	psect	text9
  2370     1CA7                     __ptext9:	
  2371 ;; *************** function _I2C_Multi_Send *****************
  2372 ;; Defined at:
  2373 ;;		line 90 in file "newmain.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;  cmd             1    wreg     unsigned char 
  2376 ;;  address         1    1[COMMON] unsigned char 
  2377 ;;  data            1    2[COMMON] PTR unsigned char 
  2378 ;;		 -> lcd_send_data@data_t(4), lcd_send_cmd@data_t(4), 
  2379 ;;  size            2    3[COMMON] int 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  cmd             1    0[COMMON] unsigned char 
  2382 ;;  n               2    7[COMMON] int 
  2383 ;;  send            1    6[COMMON] unsigned char 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      void 
  2386 ;; Registers used:
  2387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2393 ;;      Params:         4       0       0       0       0
  2394 ;;      Locals:         3       0       0       0       0
  2395 ;;      Temps:          1       0       0       0       0
  2396 ;;      Totals:         8       0       0       0       0
  2397 ;;Total ram usage:        8 bytes
  2398 ;; Hardware stack levels used: 1
  2399 ;; Hardware stack levels required when called: 2
  2400 ;; This function calls:
  2401 ;;		_I2C_Write
  2402 ;; This function is called by:
  2403 ;;		_lcd_send_cmd
  2404 ;;		_lcd_send_data
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408     1CA7                     _I2C_Multi_Send:	
  2409                           ;psect for function _I2C_Multi_Send
  2410                           
  2411     1CA7                     l2825:	
  2412                           ;incstack = 0
  2413                           ; Regs used in _I2C_Multi_Send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2414                           
  2415                           
  2416                           ;newmain.c: 91: 
  2417     1CA7  0871               	movf	I2C_Multi_Send@address,w
  2418     1CA8  00F5               	movwf	??_I2C_Multi_Send
  2419     1CA9  0775               	addwf	??_I2C_Multi_Send,w
  2420     1CAA  39FE               	andlw	254
  2421     1CAB  00F6               	movwf	I2C_Multi_Send@send
  2422     1CAC                     l2827:
  2423                           
  2424                           ;newmain.c: 92:     ADCON0 |= channel<<3;
  2425     1CAC  0876               	movf	I2C_Multi_Send@send,w
  2426     1CAD  160A  158A  2359  160A  158A  	fcall	_I2C_Write
  2427     1CB2                     l2829:
  2428                           
  2429                           ;newmain.c: 93:     GO_DONE = 1;
  2430     1CB2  01F7               	clrf	I2C_Multi_Send@n
  2431     1CB3  01F8               	clrf	I2C_Multi_Send@n+1
  2432     1CB4  2CC7               	goto	l2835
  2433     1CB5                     l2831:
  2434                           
  2435                           ;newmain.c: 94:     while(GO_DONE);
  2436     1CB5  0877               	movf	I2C_Multi_Send@n,w
  2437     1CB6  0772               	addwf	I2C_Multi_Send@data,w
  2438     1CB7  00F5               	movwf	??_I2C_Multi_Send
  2439     1CB8  0875               	movf	??_I2C_Multi_Send,w
  2440     1CB9  0084               	movwf	4
  2441     1CBA  1383               	bcf	3,7	;select IRP bank0
  2442     1CBB  0800               	movf	0,w
  2443     1CBC  160A  158A  2359  160A  158A  	fcall	_I2C_Write
  2444     1CC1                     l2833:
  2445                           
  2446                           ;newmain.c: 95:     return (uint16_t)((ADRESH << 8) + ADRESL);
  2447     1CC1  3001               	movlw	1
  2448     1CC2  07F7               	addwf	I2C_Multi_Send@n,f
  2449     1CC3  1803               	skipnc
  2450     1CC4  0AF8               	incf	I2C_Multi_Send@n+1,f
  2451     1CC5  3000               	movlw	0
  2452     1CC6  07F8               	addwf	I2C_Multi_Send@n+1,f
  2453     1CC7                     l2835:
  2454     1CC7  0878               	movf	I2C_Multi_Send@n+1,w
  2455     1CC8  3A80               	xorlw	128
  2456     1CC9  00F5               	movwf	??_I2C_Multi_Send
  2457     1CCA  0874               	movf	I2C_Multi_Send@size+1,w
  2458     1CCB  3A80               	xorlw	128
  2459     1CCC  0275               	subwf	??_I2C_Multi_Send,w
  2460     1CCD  1D03               	skipz
  2461     1CCE  2CD1               	goto	u3975
  2462     1CCF  0873               	movf	I2C_Multi_Send@size,w
  2463     1CD0  0277               	subwf	I2C_Multi_Send@n,w
  2464     1CD1                     u3975:
  2465     1CD1  1C03               	skipc
  2466     1CD2  2CD4               	goto	u3971
  2467     1CD3  2CD5               	goto	u3970
  2468     1CD4                     u3971:
  2469     1CD4  2CB5               	goto	l2831
  2470     1CD5                     u3970:
  2471     1CD5                     l91:
  2472     1CD5  0008               	return
  2473     1CD6                     __end_of_I2C_Multi_Send:
  2474                           
  2475                           	psect	text10
  2476     1B59                     __ptext10:	
  2477 ;; *************** function _I2C_Write *****************
  2478 ;; Defined at:
  2479 ;;		line 74 in file "newmain.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  Data            1    wreg     unsigned char 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;  Data            1    0[COMMON] unsigned char 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      unsigned char 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0, pclath, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2493 ;;      Params:         0       0       0       0       0
  2494 ;;      Locals:         1       0       0       0       0
  2495 ;;      Temps:          0       0       0       0       0
  2496 ;;      Totals:         1       0       0       0       0
  2497 ;;Total ram usage:        1 bytes
  2498 ;; Hardware stack levels used: 1
  2499 ;; Hardware stack levels required when called: 1
  2500 ;; This function calls:
  2501 ;;		_I2C_IDLE
  2502 ;; This function is called by:
  2503 ;;		_I2C_Multi_Send
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507     1B59                     _I2C_Write:	
  2508                           ;psect for function _I2C_Write
  2509                           
  2510                           
  2511                           ;incstack = 0
  2512                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  2513                           ;I2C_Write@Data stored from wreg
  2514     1B59  00F0               	movwf	I2C_Write@Data
  2515     1B5A                     l2335:
  2516                           
  2517                           ;newmain.c: 74:     I2C_Write(send);;newmain.c: 75:     for(int n = 0; n < size; n++){;n
      +                          ewmain.c: 76:         I2C_Write(data[n]);
  2518     1B5A  160A  158A  234C  160A  158A  	fcall	_I2C_IDLE
  2519     1B5F                     l2337:
  2520                           
  2521                           ;newmain.c: 77:     }
  2522     1B5F  0870               	movf	I2C_Write@Data,w
  2523     1B60  1283               	bcf	3,5	;RP0=0, select bank0
  2524     1B61  1303               	bcf	3,6	;RP1=0, select bank0
  2525     1B62  0093               	movwf	19	;volatile
  2526     1B63                     l2339:
  2527                           
  2528                           ;newmain.c: 78: }
  2529     1B63  160A  158A  234C  160A  158A  	fcall	_I2C_IDLE
  2530     1B68                     l2341:
  2531     1B68                     l79:	
  2532                           ;newmain.c: 79: ;	Return value of _I2C_Write is never used
  2533                           
  2534     1B68  0008               	return
  2535     1B69                     __end_of_I2C_Write:
  2536                           
  2537                           	psect	text11
  2538     1B4C                     __ptext11:	
  2539 ;; *************** function _I2C_IDLE *****************
  2540 ;; Defined at:
  2541 ;;		line 38 in file "newmain.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;		None
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;		None
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg, status,2
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2555 ;;      Params:         0       0       0       0       0
  2556 ;;      Locals:         0       0       0       0       0
  2557 ;;      Temps:          0       0       0       0       0
  2558 ;;      Totals:         0       0       0       0       0
  2559 ;;Total ram usage:        0 bytes
  2560 ;; Hardware stack levels used: 1
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_I2C_Start
  2565 ;;		_I2C_Stop
  2566 ;;		_I2C_Write
  2567 ;;		_I2C_Restart
  2568 ;;		_I2C_ACK
  2569 ;;		_I2C_NACK
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573     1B4C                     _I2C_IDLE:	
  2574                           ;psect for function _I2C_IDLE
  2575                           
  2576     1B4C                     l2317:	
  2577                           ;incstack = 0
  2578                           ; Regs used in _I2C_IDLE: [wreg+status,2]
  2579                           
  2580     1B4C                     l58:	
  2581                           ;newmain.c: 40: SSPCON2bits.RSEN = 1;
  2582                           
  2583     1B4C  1683               	bsf	3,5	;RP0=1, select bank1
  2584     1B4D  1303               	bcf	3,6	;RP1=0, select bank1
  2585     1B4E  1914               	btfsc	20,2	;volatile
  2586     1B4F  2B51               	goto	u2771
  2587     1B50  2B52               	goto	u2770
  2588     1B51                     u2771:
  2589     1B51  2B4C               	goto	l58
  2590     1B52                     u2770:
  2591     1B52                     l2319:
  2592     1B52  0811               	movf	17,w	;volatile
  2593     1B53  391F               	andlw	31
  2594     1B54  1D03               	btfss	3,2
  2595     1B55  2B57               	goto	u2781
  2596     1B56  2B58               	goto	u2780
  2597     1B57                     u2781:
  2598     1B57  2B4C               	goto	l58
  2599     1B58                     u2780:
  2600     1B58                     l61:
  2601     1B58  0008               	return
  2602     1B59                     __end_of_I2C_IDLE:
  2603                           
  2604                           	psect	text12
  2605     1CD6                     __ptext12:	
  2606 ;; *************** function _I2C_Master_Init *****************
  2607 ;; Defined at:
  2608 ;;		line 29 in file "newmain.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  c               4    0[BANK0 ] const unsigned long 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;		None
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      void 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2622 ;;      Params:         0       4       0       0       0
  2623 ;;      Locals:         0       0       0       0       0
  2624 ;;      Temps:          0       4       0       0       0
  2625 ;;      Totals:         0       8       0       0       0
  2626 ;;Total ram usage:        8 bytes
  2627 ;; Hardware stack levels used: 1
  2628 ;; Hardware stack levels required when called: 1
  2629 ;; This function calls:
  2630 ;;		___lldiv
  2631 ;; This function is called by:
  2632 ;;		_main
  2633 ;; This function uses a non-reentrant model
  2634 ;;
  2635                           
  2636     1CD6                     _I2C_Master_Init:	
  2637                           ;psect for function _I2C_Master_Init
  2638                           
  2639     1CD6                     l3473:	
  2640                           ;incstack = 0
  2641                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2642                           
  2643                           
  2644                           ;newmain.c: 30: 
  2645     1CD6  3028               	movlw	40
  2646     1CD7  1283               	bcf	3,5	;RP0=0, select bank0
  2647     1CD8  1303               	bcf	3,6	;RP1=0, select bank0
  2648     1CD9  0094               	movwf	20	;volatile
  2649     1CDA                     l3475:
  2650                           
  2651                           ;newmain.c: 31: void I2C_Stop()
  2652     1CDA  1683               	bsf	3,5	;RP0=1, select bank1
  2653     1CDB  1303               	bcf	3,6	;RP1=0, select bank1
  2654     1CDC  0191               	clrf	17	;volatile
  2655     1CDD                     l3477:
  2656                           
  2657                           ;newmain.c: 32: {
  2658     1CDD  0194               	clrf	20	;volatile
  2659     1CDE                     l3479:
  2660                           
  2661                           ;newmain.c: 33: I2C_IDLE();
  2662     1CDE  1283               	bcf	3,5	;RP0=0, select bank0
  2663     1CDF  1303               	bcf	3,6	;RP1=0, select bank0
  2664     1CE0  0820               	movf	I2C_Master_Init@c,w
  2665     1CE1  00A4               	movwf	??_I2C_Master_Init
  2666     1CE2  0821               	movf	I2C_Master_Init@c+1,w
  2667     1CE3  00A5               	movwf	??_I2C_Master_Init+1
  2668     1CE4  0822               	movf	I2C_Master_Init@c+2,w
  2669     1CE5  00A6               	movwf	??_I2C_Master_Init+2
  2670     1CE6  0823               	movf	I2C_Master_Init@c+3,w
  2671     1CE7  00A7               	movwf	??_I2C_Master_Init+3
  2672     1CE8  3002               	movlw	2
  2673     1CE9                     u5425:
  2674     1CE9  1003               	clrc
  2675     1CEA  0DA4               	rlf	??_I2C_Master_Init,f
  2676     1CEB  0DA5               	rlf	??_I2C_Master_Init+1,f
  2677     1CEC  0DA6               	rlf	??_I2C_Master_Init+2,f
  2678     1CED  0DA7               	rlf	??_I2C_Master_Init+3,f
  2679     1CEE                     u5420:
  2680     1CEE  3EFF               	addlw	-1
  2681     1CEF  1D03               	skipz
  2682     1CF0  2CE9               	goto	u5425
  2683     1CF1  0827               	movf	??_I2C_Master_Init+3,w
  2684     1CF2  00F3               	movwf	___lldiv@divisor+3
  2685     1CF3  0826               	movf	??_I2C_Master_Init+2,w
  2686     1CF4  00F2               	movwf	___lldiv@divisor+2
  2687     1CF5  0825               	movf	??_I2C_Master_Init+1,w
  2688     1CF6  00F1               	movwf	___lldiv@divisor+1
  2689     1CF7  0824               	movf	??_I2C_Master_Init,w
  2690     1CF8  00F0               	movwf	___lldiv@divisor
  2691     1CF9  3001               	movlw	1
  2692     1CFA  00F7               	movwf	___lldiv@dividend+3
  2693     1CFB  3031               	movlw	49
  2694     1CFC  00F6               	movwf	___lldiv@dividend+2
  2695     1CFD  302D               	movlw	45
  2696     1CFE  00F5               	movwf	___lldiv@dividend+1
  2697     1CFF  3000               	movlw	0
  2698     1D00  00F4               	movwf	___lldiv@dividend
  2699     1D01  160A  158A  26BB  160A  158A  	fcall	___lldiv
  2700     1D06  0870               	movf	?___lldiv,w
  2701     1D07  3EFF               	addlw	255
  2702     1D08  1683               	bsf	3,5	;RP0=1, select bank1
  2703     1D09  1303               	bcf	3,6	;RP1=0, select bank1
  2704     1D0A  0093               	movwf	19	;volatile
  2705     1D0B                     l3481:
  2706                           
  2707                           ;newmain.c: 34: SSPCON2bits.PEN = 1;
  2708     1D0B  1587               	bsf	7,3	;volatile
  2709     1D0C                     l3483:
  2710                           
  2711                           ;newmain.c: 35: }
  2712     1D0C  1607               	bsf	7,4	;volatile
  2713     1D0D                     l55:
  2714     1D0D  0008               	return
  2715     1D0E                     __end_of_I2C_Master_Init:
  2716                           
  2717                           	psect	text13
  2718     1D8D                     __ptext13:	
  2719 ;; *************** function _GetVoltage *****************
  2720 ;; Defined at:
  2721 ;;		line 209 in file "newmain.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;  adc_read        2    6[BANK0 ] unsigned int 
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;  conversion      4   16[BANK0 ] float 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  4    6[BANK0 ] float 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2735 ;;      Params:         0       4       0       0       0
  2736 ;;      Locals:         0       4       0       0       0
  2737 ;;      Temps:          0       6       0       0       0
  2738 ;;      Totals:         0      14       0       0       0
  2739 ;;Total ram usage:       14 bytes
  2740 ;; Hardware stack levels used: 1
  2741 ;; Hardware stack levels required when called: 1
  2742 ;; This function calls:
  2743 ;;		___wmul
  2744 ;;		___xxtofl
  2745 ;; This function is called by:
  2746 ;;		_main
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750     1D8D                     _GetVoltage:	
  2751                           ;psect for function _GetVoltage
  2752                           
  2753     1D8D                     l3565:	
  2754                           ;incstack = 0
  2755                           ; Regs used in _GetVoltage: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2756                           
  2757     1D8D                     l3567:
  2758                           
  2759                           ;newmain.c: 211: }
  2760     1D8D  3005               	movlw	5
  2761     1D8E  00F2               	movwf	___wmul@multiplicand
  2762     1D8F  3000               	movlw	0
  2763     1D90  00F3               	movwf	___wmul@multiplicand+1
  2764     1D91  1283               	bcf	3,5	;RP0=0, select bank0
  2765     1D92  1303               	bcf	3,6	;RP1=0, select bank0
  2766     1D93  0827               	movf	GetVoltage@adc_read+1,w
  2767     1D94  00F1               	movwf	___wmul@multiplier+1
  2768     1D95  0826               	movf	GetVoltage@adc_read,w
  2769     1D96  00F0               	movwf	___wmul@multiplier
  2770     1D97  160A  158A  23DF  160A  158A  	fcall	___wmul
  2771     1D9C  0870               	movf	?___wmul,w
  2772     1D9D  1283               	bcf	3,5	;RP0=0, select bank0
  2773     1D9E  1303               	bcf	3,6	;RP1=0, select bank0
  2774     1D9F  00AA               	movwf	??_GetVoltage
  2775     1DA0  0871               	movf	?___wmul+1,w
  2776     1DA1  00AB               	movwf	??_GetVoltage+1
  2777     1DA2  300A               	movlw	10
  2778     1DA3                     u5485:
  2779     1DA3  1003               	clrc
  2780     1DA4  0CAB               	rrf	??_GetVoltage+1,f
  2781     1DA5  0CAA               	rrf	??_GetVoltage,f
  2782     1DA6  3EFF               	addlw	-1
  2783     1DA7  1D03               	skipz
  2784     1DA8  2DA3               	goto	u5485
  2785     1DA9  082A               	movf	??_GetVoltage,w
  2786     1DAA  00AC               	movwf	??_GetVoltage+2
  2787     1DAB  082B               	movf	??_GetVoltage+1,w
  2788     1DAC  00AD               	movwf	??_GetVoltage+3
  2789     1DAD  01AE               	clrf	??_GetVoltage+4
  2790     1DAE  01AF               	clrf	??_GetVoltage+5
  2791     1DAF  082F               	movf	??_GetVoltage+5,w
  2792     1DB0  00F9               	movwf	___xxtofl@val+3
  2793     1DB1  082E               	movf	??_GetVoltage+4,w
  2794     1DB2  00F8               	movwf	___xxtofl@val+2
  2795     1DB3  082D               	movf	??_GetVoltage+3,w
  2796     1DB4  00F7               	movwf	___xxtofl@val+1
  2797     1DB5  082C               	movf	??_GetVoltage+2,w
  2798     1DB6  00F6               	movwf	___xxtofl@val
  2799     1DB7  3000               	movlw	0
  2800     1DB8  160A  118A  22E3  160A  158A  	fcall	___xxtofl
  2801     1DBD  0879               	movf	?___xxtofl+3,w
  2802     1DBE  1283               	bcf	3,5	;RP0=0, select bank0
  2803     1DBF  1303               	bcf	3,6	;RP1=0, select bank0
  2804     1DC0  00B3               	movwf	GetVoltage@conversion+3
  2805     1DC1  0878               	movf	?___xxtofl+2,w
  2806     1DC2  00B2               	movwf	GetVoltage@conversion+2
  2807     1DC3  0877               	movf	?___xxtofl+1,w
  2808     1DC4  00B1               	movwf	GetVoltage@conversion+1
  2809     1DC5  0876               	movf	?___xxtofl,w
  2810     1DC6  00B0               	movwf	GetVoltage@conversion
  2811     1DC7                     l3569:
  2812                           
  2813                           ;newmain.c: 212: 
  2814     1DC7  0833               	movf	GetVoltage@conversion+3,w
  2815     1DC8  00A9               	movwf	?_GetVoltage+3
  2816     1DC9  0832               	movf	GetVoltage@conversion+2,w
  2817     1DCA  00A8               	movwf	?_GetVoltage+2
  2818     1DCB  0831               	movf	GetVoltage@conversion+1,w
  2819     1DCC  00A7               	movwf	?_GetVoltage+1
  2820     1DCD  0830               	movf	GetVoltage@conversion,w
  2821     1DCE  00A6               	movwf	?_GetVoltage
  2822     1DCF                     l131:
  2823     1DCF  0008               	return
  2824     1DD0                     __end_of_GetVoltage:
  2825                           
  2826                           	psect	text14
  2827     1056                     __ptext14:	
  2828 ;; *************** function _GetString *****************
  2829 ;; Defined at:
  2830 ;;		line 215 in file "newmain.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;  value           4   30[BANK1 ] float 
  2833 ;;  channel         2   34[BANK1 ] int 
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;  string          1   37[BANK1 ] PTR unsigned char 
  2836 ;;  source          1   36[BANK1 ] PTR unsigned char 
  2837 ;; Return value:  Size  Location     Type
  2838 ;;                  2   30[BANK1 ] PTR unsigned char 
  2839 ;; Registers used:
  2840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2846 ;;      Params:         0       0       6       0       0
  2847 ;;      Locals:         0       0       2       0       0
  2848 ;;      Temps:          0       0       0       0       0
  2849 ;;      Totals:         0       0       8       0       0
  2850 ;;Total ram usage:        8 bytes
  2851 ;; Hardware stack levels used: 1
  2852 ;; Hardware stack levels required when called: 4
  2853 ;; This function calls:
  2854 ;;		_sprintf
  2855 ;;		_strcat
  2856 ;; This function is called by:
  2857 ;;		_main
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861     1056                     _GetString:	
  2862                           ;psect for function _GetString
  2863                           
  2864     1056                     l3573:	
  2865                           ;incstack = 0
  2866                           ; Regs used in _GetString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2867                           
  2868                           
  2869                           ;newmain.c: 216: ;newmain.c: 217: ;newmain.c: 218: void main()
  2870     1056  1683               	bsf	3,5	;RP0=1, select bank1
  2871     1057  1303               	bcf	3,6	;RP1=0, select bank1
  2872     1058  0842               	movf	GetString@channel^(0+128),w
  2873     1059  0443               	iorwf	(GetString@channel+1)^(0+128),w
  2874     105A  1D03               	btfss	3,2
  2875     105B  285D               	goto	u5491
  2876     105C  285E               	goto	u5490
  2877     105D                     u5491:
  2878     105D  2894               	goto	l3581
  2879     105E                     u5490:
  2880     105E                     l3575:
  2881                           
  2882                           ;newmain.c: 219: {
  2883     105E  0845               	movf	GetString@string^(0+128),w
  2884     105F  0084               	movwf	4
  2885     1060  30AF               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2886     1061  1383               	bcf	3,7	;select IRP bank0
  2887     1062  0080               	movwf	0
  2888     1063                     l3577:
  2889                           
  2890                           ;newmain.c: 220:   char str0[15];
  2891     1063  30B9               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2892     1064  1283               	bcf	3,5	;RP0=0, select bank0
  2893     1065  1303               	bcf	3,6	;RP1=0, select bank0
  2894     1066  00EA               	movwf	sprintf@f
  2895     1067  1683               	bsf	3,5	;RP0=1, select bank1
  2896     1068  1303               	bcf	3,6	;RP1=0, select bank1
  2897     1069  0841               	movf	(GetString@value+3)^(0+128),w
  2898     106A  1283               	bcf	3,5	;RP0=0, select bank0
  2899     106B  1303               	bcf	3,6	;RP1=0, select bank0
  2900     106C  00EE               	movwf	?_sprintf+4
  2901     106D  1683               	bsf	3,5	;RP0=1, select bank1
  2902     106E  1303               	bcf	3,6	;RP1=0, select bank1
  2903     106F  0840               	movf	(GetString@value+2)^(0+128),w
  2904     1070  1283               	bcf	3,5	;RP0=0, select bank0
  2905     1071  1303               	bcf	3,6	;RP1=0, select bank0
  2906     1072  00ED               	movwf	?_sprintf+3
  2907     1073  1683               	bsf	3,5	;RP0=1, select bank1
  2908     1074  1303               	bcf	3,6	;RP1=0, select bank1
  2909     1075  083F               	movf	(GetString@value+1)^(0+128),w
  2910     1076  1283               	bcf	3,5	;RP0=0, select bank0
  2911     1077  1303               	bcf	3,6	;RP1=0, select bank0
  2912     1078  00EC               	movwf	?_sprintf+2
  2913     1079  1683               	bsf	3,5	;RP0=1, select bank1
  2914     107A  1303               	bcf	3,6	;RP1=0, select bank1
  2915     107B  083E               	movf	GetString@value^(0+128),w
  2916     107C  1283               	bcf	3,5	;RP0=0, select bank0
  2917     107D  1303               	bcf	3,6	;RP1=0, select bank0
  2918     107E  00EB               	movwf	?_sprintf+1
  2919     107F  1683               	bsf	3,5	;RP0=1, select bank1
  2920     1080  1303               	bcf	3,6	;RP1=0, select bank1
  2921     1081  0844               	movf	GetString@source^(0+128),w
  2922     1082  120A  118A  219C  160A  118A  	fcall	_sprintf
  2923     1087                     l3579:
  2924                           
  2925                           ;newmain.c: 221:   char str1[15];
  2926     1087  1683               	bsf	3,5	;RP0=1, select bank1
  2927     1088  1303               	bcf	3,6	;RP1=0, select bank1
  2928     1089  0844               	movf	GetString@source^(0+128),w
  2929     108A  00F0               	movwf	strcat@from
  2930     108B  0845               	movf	GetString@string^(0+128),w
  2931     108C  160A  158A  2451  160A  118A  	fcall	_strcat
  2932     1091  1683               	bsf	3,5	;RP0=1, select bank1
  2933     1092  1303               	bcf	3,6	;RP1=0, select bank1
  2934     1093  00C5               	movwf	GetString@string^(0+128)
  2935     1094                     l3581:
  2936                           
  2937                           ;newmain.c: 223:   TRISA = 0XFF;
  2938     1094  0342               	decf	GetString@channel^(0+128),w
  2939     1095  0443               	iorwf	(GetString@channel+1)^(0+128),w
  2940     1096  1D03               	btfss	3,2
  2941     1097  2899               	goto	u5501
  2942     1098  289A               	goto	u5500
  2943     1099                     u5501:
  2944     1099  28D0               	goto	l3589
  2945     109A                     u5500:
  2946     109A                     l3583:
  2947                           
  2948                           ;newmain.c: 224:   TRISB = 0x00;
  2949     109A  0845               	movf	GetString@string^(0+128),w
  2950     109B  0084               	movwf	4
  2951     109C  30B4               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2952     109D  1383               	bcf	3,7	;select IRP bank0
  2953     109E  0080               	movwf	0
  2954     109F                     l3585:
  2955                           
  2956                           ;newmain.c: 225:   TRISD = 0x00;
  2957     109F  30B9               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2958     10A0  1283               	bcf	3,5	;RP0=0, select bank0
  2959     10A1  1303               	bcf	3,6	;RP1=0, select bank0
  2960     10A2  00EA               	movwf	sprintf@f
  2961     10A3  1683               	bsf	3,5	;RP0=1, select bank1
  2962     10A4  1303               	bcf	3,6	;RP1=0, select bank1
  2963     10A5  0841               	movf	(GetString@value+3)^(0+128),w
  2964     10A6  1283               	bcf	3,5	;RP0=0, select bank0
  2965     10A7  1303               	bcf	3,6	;RP1=0, select bank0
  2966     10A8  00EE               	movwf	?_sprintf+4
  2967     10A9  1683               	bsf	3,5	;RP0=1, select bank1
  2968     10AA  1303               	bcf	3,6	;RP1=0, select bank1
  2969     10AB  0840               	movf	(GetString@value+2)^(0+128),w
  2970     10AC  1283               	bcf	3,5	;RP0=0, select bank0
  2971     10AD  1303               	bcf	3,6	;RP1=0, select bank0
  2972     10AE  00ED               	movwf	?_sprintf+3
  2973     10AF  1683               	bsf	3,5	;RP0=1, select bank1
  2974     10B0  1303               	bcf	3,6	;RP1=0, select bank1
  2975     10B1  083F               	movf	(GetString@value+1)^(0+128),w
  2976     10B2  1283               	bcf	3,5	;RP0=0, select bank0
  2977     10B3  1303               	bcf	3,6	;RP1=0, select bank0
  2978     10B4  00EC               	movwf	?_sprintf+2
  2979     10B5  1683               	bsf	3,5	;RP0=1, select bank1
  2980     10B6  1303               	bcf	3,6	;RP1=0, select bank1
  2981     10B7  083E               	movf	GetString@value^(0+128),w
  2982     10B8  1283               	bcf	3,5	;RP0=0, select bank0
  2983     10B9  1303               	bcf	3,6	;RP1=0, select bank0
  2984     10BA  00EB               	movwf	?_sprintf+1
  2985     10BB  1683               	bsf	3,5	;RP0=1, select bank1
  2986     10BC  1303               	bcf	3,6	;RP1=0, select bank1
  2987     10BD  0844               	movf	GetString@source^(0+128),w
  2988     10BE  120A  118A  219C  160A  118A  	fcall	_sprintf
  2989     10C3                     l3587:
  2990                           
  2991                           ;newmain.c: 226:   PORTD = 0x00;
  2992     10C3  1683               	bsf	3,5	;RP0=1, select bank1
  2993     10C4  1303               	bcf	3,6	;RP1=0, select bank1
  2994     10C5  0844               	movf	GetString@source^(0+128),w
  2995     10C6  00F0               	movwf	strcat@from
  2996     10C7  0845               	movf	GetString@string^(0+128),w
  2997     10C8  160A  158A  2451  160A  118A  	fcall	_strcat
  2998     10CD  1683               	bsf	3,5	;RP0=1, select bank1
  2999     10CE  1303               	bcf	3,6	;RP1=0, select bank1
  3000     10CF  00C5               	movwf	GetString@string^(0+128)
  3001     10D0                     l3589:
  3002                           
  3003                           ;newmain.c: 228: 
  3004     10D0  0845               	movf	GetString@string^(0+128),w
  3005     10D1                     l136:
  3006     10D1  0008               	return
  3007     10D2                     __end_of_GetString:
  3008                           
  3009                           	psect	text15
  3010     1C51                     __ptext15:	
  3011 ;; *************** function _strcat *****************
  3012 ;; Defined at:
  3013 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strcat.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  to              1    wreg     PTR unsigned char 
  3016 ;;  from            1    0[COMMON] PTR const unsigned char 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  to              1    2[COMMON] PTR unsigned char 
  3019 ;;  cp              1    1[COMMON] PTR unsigned char 
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  2    0[COMMON] PTR unsigned char 
  3022 ;; Registers used:
  3023 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3029 ;;      Params:         1       0       0       0       0
  3030 ;;      Locals:         2       0       0       0       0
  3031 ;;      Temps:          0       0       0       0       0
  3032 ;;      Totals:         3       0       0       0       0
  3033 ;;Total ram usage:        3 bytes
  3034 ;; Hardware stack levels used: 1
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_GetString
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042     1C51                     _strcat:	
  3043                           ;psect for function _strcat
  3044                           
  3045                           
  3046                           ;incstack = 0
  3047                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1]
  3048                           ;strcat@to stored from wreg
  3049     1C51  00F2               	movwf	strcat@to
  3050     1C52                     l3459:
  3051     1C52  0872               	movf	strcat@to,w
  3052     1C53  00F1               	movwf	strcat@cp
  3053     1C54  2C59               	goto	l3463
  3054     1C55                     l3461:
  3055     1C55  3001               	movlw	1
  3056     1C56  00FF               	movwf	btemp+1
  3057     1C57  087F               	movf	btemp+1,w
  3058     1C58  07F1               	addwf	strcat@cp,f
  3059     1C59                     l3463:
  3060     1C59  0871               	movf	strcat@cp,w
  3061     1C5A  0084               	movwf	4
  3062     1C5B  1383               	bcf	3,7	;select IRP bank0
  3063     1C5C  0800               	movf	0,w
  3064     1C5D  1D03               	btfss	3,2
  3065     1C5E  2C60               	goto	u5401
  3066     1C5F  2C61               	goto	u5400
  3067     1C60                     u5401:
  3068     1C60  2C55               	goto	l3461
  3069     1C61                     u5400:
  3070     1C61  2C6A               	goto	l3467
  3071     1C62                     l3465:
  3072     1C62  3001               	movlw	1
  3073     1C63  00FF               	movwf	btemp+1
  3074     1C64  087F               	movf	btemp+1,w
  3075     1C65  07F1               	addwf	strcat@cp,f
  3076     1C66  3001               	movlw	1
  3077     1C67  00FF               	movwf	btemp+1
  3078     1C68  087F               	movf	btemp+1,w
  3079     1C69  07F0               	addwf	strcat@from,f
  3080     1C6A                     l3467:
  3081     1C6A  0870               	movf	strcat@from,w
  3082     1C6B  0084               	movwf	4
  3083     1C6C  0800               	movf	0,w
  3084     1C6D  00FF               	movwf	btemp+1
  3085     1C6E  0871               	movf	strcat@cp,w
  3086     1C6F  0084               	movwf	4
  3087     1C70  087F               	movf	btemp+1,w
  3088     1C71  0080               	movwf	0
  3089     1C72  0800               	movf	0,w
  3090     1C73  1D03               	btfss	3,2
  3091     1C74  2C76               	goto	u5411
  3092     1C75  2C77               	goto	u5410
  3093     1C76                     u5411:
  3094     1C76  2C62               	goto	l3465
  3095     1C77                     u5410:
  3096     1C77                     l3469:
  3097     1C77  0872               	movf	strcat@to,w
  3098     1C78                     l827:
  3099     1C78  0008               	return
  3100     1C79                     __end_of_strcat:
  3101                           
  3102                           	psect	text16
  3103     019C                     __ptext16:	
  3104 ;; *************** function _sprintf *****************
  3105 ;; Defined at:
  3106 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  sp              1    wreg     PTR unsigned char 
  3109 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  3110 ;;		 -> STR_4(5), STR_2(5), 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;  sp              1   24[BANK1 ] PTR unsigned char 
  3113 ;;  fval            4   25[BANK1 ] PTR unsigned char 
  3114 ;;  tmpval          4   18[BANK1 ] struct .
  3115 ;;  val             4   12[BANK1 ] unsigned long 
  3116 ;;  prec            2   22[BANK1 ] int 
  3117 ;;  eexp            2   16[BANK1 ] int 
  3118 ;;  flag            2   10[BANK1 ] unsigned short 
  3119 ;;  cp              2    0        PTR const unsigned char 
  3120 ;;  len             2    0        unsigned int 
  3121 ;;  width           2    0        int 
  3122 ;;  c               1   29[BANK1 ] unsigned char 
  3123 ;;  ap              1    9[BANK1 ] PTR void [1]
  3124 ;;		 -> ?_sprintf(2), 
  3125 ;;  d               1    0        unsigned char 
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  2   74[BANK0 ] int 
  3128 ;; Registers used:
  3129 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3135 ;;      Params:         0       5       0       0       0
  3136 ;;      Locals:         0       0      25       0       0
  3137 ;;      Temps:          0       0       5       0       0
  3138 ;;      Totals:         0       5      30       0       0
  3139 ;;Total ram usage:       35 bytes
  3140 ;; Hardware stack levels used: 1
  3141 ;; Hardware stack levels required when called: 3
  3142 ;; This function calls:
  3143 ;;		___awdiv
  3144 ;;		___fladd
  3145 ;;		___fleq
  3146 ;;		___flge
  3147 ;;		___flmul
  3148 ;;		___flneg
  3149 ;;		___flsub
  3150 ;;		___fltol
  3151 ;;		___lldiv
  3152 ;;		___llmod
  3153 ;;		___wmul
  3154 ;;		___xxtofl
  3155 ;;		__div_to_l_
  3156 ;;		__tdiv_to_l_
  3157 ;;		_fround
  3158 ;;		_isdigit
  3159 ;;		_scale
  3160 ;; This function is called by:
  3161 ;;		_GetString
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165     019C                     _sprintf:	
  3166                           ;psect for function _sprintf
  3167                           
  3168                           
  3169                           ;incstack = 0
  3170                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3171                           ;sprintf@sp stored from wreg
  3172     019C  1683               	bsf	3,5	;RP0=1, select bank1
  3173     019D  1303               	bcf	3,6	;RP1=0, select bank1
  3174     019E  00B8               	movwf	sprintf@sp^(0+128)
  3175     019F                     l3249:
  3176                           
  3177                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  3178     019F  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3179     01A0  00A9               	movwf	sprintf@ap^(0+128)
  3180                           
  3181                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3182     01A1  2FDD               	goto	l3449
  3183     01A2                     l3251:
  3184                           
  3185                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3186     01A2  3025               	movlw	37
  3187     01A3  063D               	xorwf	sprintf@c^(0+128),w
  3188     01A4  1903               	btfsc	3,2
  3189     01A5  29A7               	goto	u5051
  3190     01A6  29A8               	goto	u5050
  3191     01A7                     u5051:
  3192     01A7  29B2               	goto	l3257
  3193     01A8                     u5050:
  3194     01A8                     l3253:
  3195                           
  3196                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3197     01A8  0838               	movf	sprintf@sp^(0+128),w
  3198     01A9  0084               	movwf	4
  3199     01AA  083D               	movf	sprintf@c^(0+128),w
  3200     01AB  1383               	bcf	3,7	;select IRP bank0
  3201     01AC  0080               	movwf	0
  3202     01AD                     l3255:
  3203     01AD  3001               	movlw	1
  3204     01AE  00FF               	movwf	btemp+1
  3205     01AF  087F               	movf	btemp+1,w
  3206     01B0  07B8               	addwf	sprintf@sp^(0+128),f
  3207                           
  3208                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  3209     01B1  2FDD               	goto	l3449
  3210     01B2                     l3257:
  3211                           
  3212                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3213     01B2  01AA               	clrf	sprintf@flag^(0+128)
  3214     01B3  01AB               	clrf	(sprintf@flag+1)^(0+128)
  3215     01B4                     l3259:
  3216                           
  3217                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  3218     01B4  1283               	bcf	3,5	;RP0=0, select bank0
  3219     01B5  1303               	bcf	3,6	;RP1=0, select bank0
  3220     01B6  086A               	movf	sprintf@f,w
  3221     01B7  0084               	movwf	4
  3222     01B8  120A  158A  200A  120A  118A  	fcall	stringdir
  3223     01BD  3A2E               	xorlw	46
  3224     01BE  1D03               	skipz
  3225     01BF  29C1               	goto	u5061
  3226     01C0  29C2               	goto	u5060
  3227     01C1                     u5061:
  3228     01C1  2A14               	goto	l3275
  3229     01C2                     u5060:
  3230     01C2                     l3261:
  3231                           
  3232                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  3233     01C2  1683               	bsf	3,5	;RP0=1, select bank1
  3234     01C3  1303               	bcf	3,6	;RP1=0, select bank1
  3235     01C4  172B               	bsf	(sprintf@flag^(0+128)+1),6
  3236     01C5                     l3263:
  3237                           
  3238                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 630:    f++;
  3239     01C5  3001               	movlw	1
  3240     01C6  00FF               	movwf	btemp+1
  3241     01C7  087F               	movf	btemp+1,w
  3242     01C8  1283               	bcf	3,5	;RP0=0, select bank0
  3243     01C9  1303               	bcf	3,6	;RP1=0, select bank0
  3244     01CA  07EA               	addwf	sprintf@f,f
  3245     01CB                     l3265:
  3246                           
  3247                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  3248     01CB  1683               	bsf	3,5	;RP0=1, select bank1
  3249     01CC  1303               	bcf	3,6	;RP1=0, select bank1
  3250     01CD  01B6               	clrf	sprintf@prec^(0+128)
  3251     01CE  01B7               	clrf	(sprintf@prec+1)^(0+128)
  3252                           
  3253                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  3254     01CF  2A02               	goto	l3273
  3255     01D0                     l3267:
  3256                           
  3257                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  3258     01D0  300A               	movlw	10
  3259     01D1  00F0               	movwf	___wmul@multiplier
  3260     01D2  3000               	movlw	0
  3261     01D3  00F1               	movwf	___wmul@multiplier+1
  3262     01D4  1683               	bsf	3,5	;RP0=1, select bank1
  3263     01D5  1303               	bcf	3,6	;RP1=0, select bank1
  3264     01D6  0837               	movf	(sprintf@prec+1)^(0+128),w
  3265     01D7  00F3               	movwf	___wmul@multiplicand+1
  3266     01D8  0836               	movf	sprintf@prec^(0+128),w
  3267     01D9  00F2               	movwf	___wmul@multiplicand
  3268     01DA  160A  158A  23DF  120A  118A  	fcall	___wmul
  3269     01DF  0871               	movf	?___wmul+1,w
  3270     01E0  1683               	bsf	3,5	;RP0=1, select bank1
  3271     01E1  1303               	bcf	3,6	;RP1=0, select bank1
  3272     01E2  00B7               	movwf	(sprintf@prec+1)^(0+128)
  3273     01E3  0870               	movf	?___wmul,w
  3274     01E4  00B6               	movwf	sprintf@prec^(0+128)
  3275     01E5                     l3269:
  3276                           
  3277                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  3278     01E5  1283               	bcf	3,5	;RP0=0, select bank0
  3279     01E6  1303               	bcf	3,6	;RP1=0, select bank0
  3280     01E7  086A               	movf	sprintf@f,w
  3281     01E8  0084               	movwf	4
  3282     01E9  120A  158A  200A  120A  118A  	fcall	stringdir
  3283     01EE  3ED0               	addlw	208
  3284     01EF  1683               	bsf	3,5	;RP0=1, select bank1
  3285     01F0  1303               	bcf	3,6	;RP1=0, select bank1
  3286     01F1  00A0               	movwf	??_sprintf^(0+128)
  3287     01F2  30FF               	movlw	255
  3288     01F3  1803               	skipnc
  3289     01F4  3000               	movlw	0
  3290     01F5  00A1               	movwf	(??_sprintf^(0+128)+1)
  3291     01F6  0820               	movf	??_sprintf^(0+128),w
  3292     01F7  07B6               	addwf	sprintf@prec^(0+128),f
  3293     01F8  1803               	skipnc
  3294     01F9  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  3295     01FA  0821               	movf	(??_sprintf+1)^(0+128),w
  3296     01FB  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  3297     01FC                     l3271:
  3298     01FC  3001               	movlw	1
  3299     01FD  00FF               	movwf	btemp+1
  3300     01FE  087F               	movf	btemp+1,w
  3301     01FF  1283               	bcf	3,5	;RP0=0, select bank0
  3302     0200  1303               	bcf	3,6	;RP1=0, select bank0
  3303     0201  07EA               	addwf	sprintf@f,f
  3304     0202                     l3273:
  3305                           
  3306                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  3307     0202  1283               	bcf	3,5	;RP0=0, select bank0
  3308     0203  086A               	movf	sprintf@f,w
  3309     0204  0084               	movwf	4
  3310     0205  120A  158A  200A  120A  118A  	fcall	stringdir
  3311     020A  160A  158A  2369  120A  118A  	fcall	_isdigit
  3312     020F  1803               	btfsc	3,0
  3313     0210  2A12               	goto	u5071
  3314     0211  2A13               	goto	u5070
  3315     0212                     u5071:
  3316     0212  29D0               	goto	l3267
  3317     0213                     u5070:
  3318     0213  2A1C               	goto	l3281
  3319     0214                     l3275:
  3320                           
  3321                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  3322     0214  1683               	bsf	3,5	;RP0=1, select bank1
  3323     0215  1303               	bcf	3,6	;RP1=0, select bank1
  3324     0216  01B6               	clrf	sprintf@prec^(0+128)
  3325     0217  01B7               	clrf	(sprintf@prec+1)^(0+128)
  3326     0218                     l3277:
  3327                           
  3328                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  3329     0218  162B               	bsf	(sprintf@flag^(0+128)+1),4
  3330     0219  2A1C               	goto	l3281
  3331     021A                     l276:	
  3332                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  3333                           
  3334                           
  3335                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  3336     021A  152B               	bsf	(sprintf@flag^(0+128)+1),2
  3337                           
  3338                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 690:    break;
  3339     021B  2A3A               	goto	l3283
  3340     021C                     l3281:
  3341     021C  3001               	movlw	1
  3342     021D  1283               	bcf	3,5	;RP0=0, select bank0
  3343     021E  1303               	bcf	3,6	;RP1=0, select bank0
  3344     021F  07EA               	addwf	sprintf@f,f
  3345     0220  30FF               	movlw	-1
  3346     0221  076A               	addwf	sprintf@f,w
  3347     0222  0084               	movwf	4
  3348     0223  120A  158A  200A  120A  118A  	fcall	stringdir
  3349     0228  1683               	bsf	3,5	;RP0=1, select bank1
  3350     0229  1303               	bcf	3,6	;RP1=0, select bank1
  3351     022A  00BD               	movwf	sprintf@c^(0+128)
  3352     022B  00A0               	movwf	??_sprintf^(0+128)
  3353     022C  01A1               	clrf	(??_sprintf^(0+128)+1)
  3354                           
  3355                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3356                           ; Switch size 1, requested type "simple"
  3357                           ; Number of cases is 1, Range of values is 0 to 0
  3358                           ; switch strategies available:
  3359                           ; Name         Instructions Cycles
  3360                           ; simple_byte            4     3 (average)
  3361                           ; direct_byte           11     8 (fixed)
  3362                           ; jumptable            260     6 (fixed)
  3363                           ;	Chosen strategy is simple_byte
  3364     022D  0821               	movf	(??_sprintf+1)^(0+128),w
  3365     022E  3A00               	xorlw	0	; case 0
  3366     022F  1903               	skipnz
  3367     0230  2A32               	goto	l3701
  3368     0231  2FDD               	goto	l3449
  3369     0232                     l3701:
  3370                           
  3371                           ; Switch size 1, requested type "simple"
  3372                           ; Number of cases is 2, Range of values is 0 to 102
  3373                           ; switch strategies available:
  3374                           ; Name         Instructions Cycles
  3375                           ; simple_byte            7     4 (average)
  3376                           ; jumptable            260     6 (fixed)
  3377                           ;	Chosen strategy is simple_byte
  3378     0232  0820               	movf	??_sprintf^(0+128),w
  3379     0233  3A00               	xorlw	0	; case 0
  3380     0234  1903               	skipnz
  3381     0235  2FF1               	goto	l3451
  3382     0236  3A66               	xorlw	102	; case 102
  3383     0237  1903               	skipnz
  3384     0238  2A1A               	goto	l276
  3385     0239  2FDD               	goto	l3449
  3386     023A                     l3283:
  3387                           
  3388                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  3389     023A  3000               	movlw	0
  3390     023B  052A               	andwf	sprintf@flag^(0+128),w
  3391     023C  00A0               	movwf	??_sprintf^(0+128)
  3392     023D  3007               	movlw	7
  3393     023E  052B               	andwf	(sprintf@flag+1)^(0+128),w
  3394     023F  00A1               	movwf	(??_sprintf+1)^(0+128)
  3395     0240  0820               	movf	??_sprintf^(0+128),w
  3396     0241  0421               	iorwf	(??_sprintf^(0+128)+1),w
  3397     0242  1903               	btfsc	3,2
  3398     0243  2A45               	goto	u5081
  3399     0244  2A46               	goto	u5080
  3400     0245                     u5081:
  3401     0245  2F97               	goto	l3431
  3402     0246                     u5080:
  3403     0246                     l3285:
  3404                           
  3405                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  3406     0246  1E2B               	btfss	(sprintf@flag+1)^(0+128),4
  3407     0247  2A49               	goto	u5091
  3408     0248  2A4A               	goto	u5090
  3409     0249                     u5091:
  3410     0249  2A4E               	goto	l3289
  3411     024A                     u5090:
  3412     024A                     l3287:
  3413                           
  3414                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  3415     024A  3006               	movlw	6
  3416     024B  00B6               	movwf	sprintf@prec^(0+128)
  3417     024C  3000               	movlw	0
  3418     024D  00B7               	movwf	(sprintf@prec^(0+128)+1)
  3419     024E                     l3289:
  3420                           
  3421                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  3422     024E  0829               	movf	sprintf@ap^(0+128),w
  3423     024F  0084               	movwf	4
  3424     0250  1383               	bcf	3,7	;select IRP bank0
  3425     0251  0800               	movf	0,w
  3426     0252  00B9               	movwf	sprintf@fval^(0+128)
  3427     0253  0A84               	incf	4,f
  3428     0254  0800               	movf	0,w
  3429     0255  00BA               	movwf	(sprintf@fval+1)^(0+128)
  3430     0256  0A84               	incf	4,f
  3431     0257  0800               	movf	0,w
  3432     0258  00BB               	movwf	(sprintf@fval+2)^(0+128)
  3433     0259  0A84               	incf	4,f
  3434     025A  0800               	movf	0,w
  3435     025B  00BC               	movwf	(sprintf@fval+3)^(0+128)
  3436     025C                     l3291:
  3437     025C  3004               	movlw	4
  3438     025D  00FF               	movwf	btemp+1
  3439     025E  087F               	movf	btemp+1,w
  3440     025F  07A9               	addwf	sprintf@ap^(0+128),f
  3441     0260                     l3293:
  3442                           
  3443                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  3444     0260  083C               	movf	(sprintf@fval+3)^(0+128),w
  3445     0261  00F3               	movwf	___flge@ff1+3
  3446     0262  083B               	movf	(sprintf@fval+2)^(0+128),w
  3447     0263  00F2               	movwf	___flge@ff1+2
  3448     0264  083A               	movf	(sprintf@fval+1)^(0+128),w
  3449     0265  00F1               	movwf	___flge@ff1+1
  3450     0266  0839               	movf	sprintf@fval^(0+128),w
  3451     0267  00F0               	movwf	___flge@ff1
  3452     0268  3000               	movlw	0
  3453     0269  00F7               	movwf	___flge@ff2+3
  3454     026A  3000               	movlw	0
  3455     026B  00F6               	movwf	___flge@ff2+2
  3456     026C  3000               	movlw	0
  3457     026D  00F5               	movwf	___flge@ff2+1
  3458     026E  3000               	movlw	0
  3459     026F  00F4               	movwf	___flge@ff2
  3460     0270  160A  118A  20D2  120A  118A  	fcall	___flge
  3461     0275  1803               	btfsc	3,0
  3462     0276  2A78               	goto	u5101
  3463     0277  2A79               	goto	u5100
  3464     0278                     u5101:
  3465     0278  2A96               	goto	l3299
  3466     0279                     u5100:
  3467     0279                     l3295:
  3468                           
  3469                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  3470     0279  1683               	bsf	3,5	;RP0=1, select bank1
  3471     027A  1303               	bcf	3,6	;RP1=0, select bank1
  3472     027B  083C               	movf	(sprintf@fval+3)^(0+128),w
  3473     027C  00F3               	movwf	___flneg@f1+3
  3474     027D  083B               	movf	(sprintf@fval+2)^(0+128),w
  3475     027E  00F2               	movwf	___flneg@f1+2
  3476     027F  083A               	movf	(sprintf@fval+1)^(0+128),w
  3477     0280  00F1               	movwf	___flneg@f1+1
  3478     0281  0839               	movf	sprintf@fval^(0+128),w
  3479     0282  00F0               	movwf	___flneg@f1
  3480     0283  160A  158A  2341  120A  118A  	fcall	___flneg
  3481     0288  0873               	movf	?___flneg+3,w
  3482     0289  1683               	bsf	3,5	;RP0=1, select bank1
  3483     028A  1303               	bcf	3,6	;RP1=0, select bank1
  3484     028B  00BC               	movwf	(sprintf@fval+3)^(0+128)
  3485     028C  0872               	movf	?___flneg+2,w
  3486     028D  00BB               	movwf	(sprintf@fval+2)^(0+128)
  3487     028E  0871               	movf	?___flneg+1,w
  3488     028F  00BA               	movwf	(sprintf@fval+1)^(0+128)
  3489     0290  0870               	movf	?___flneg,w
  3490     0291  00B9               	movwf	sprintf@fval^(0+128)
  3491     0292                     l3297:
  3492                           
  3493                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  3494     0292  3003               	movlw	3
  3495     0293  04AA               	iorwf	sprintf@flag^(0+128),f
  3496     0294  3000               	movlw	0
  3497     0295  04AB               	iorwf	(sprintf@flag+1)^(0+128),f
  3498     0296                     l3299:
  3499                           
  3500                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  3501     0296  1683               	bsf	3,5	;RP0=1, select bank1
  3502     0297  1303               	bcf	3,6	;RP1=0, select bank1
  3503     0298  01B0               	clrf	sprintf@eexp^(0+128)
  3504     0299  01B1               	clrf	(sprintf@eexp+1)^(0+128)
  3505     029A                     l3301:
  3506                           
  3507                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  3508     029A  083C               	movf	(sprintf@fval+3)^(0+128),w
  3509     029B  00F3               	movwf	___fleq@ff1+3
  3510     029C  083B               	movf	(sprintf@fval+2)^(0+128),w
  3511     029D  00F2               	movwf	___fleq@ff1+2
  3512     029E  083A               	movf	(sprintf@fval+1)^(0+128),w
  3513     029F  00F1               	movwf	___fleq@ff1+1
  3514     02A0  0839               	movf	sprintf@fval^(0+128),w
  3515     02A1  00F0               	movwf	___fleq@ff1
  3516     02A2  3000               	movlw	0
  3517     02A3  00F7               	movwf	___fleq@ff2+3
  3518     02A4  3000               	movlw	0
  3519     02A5  00F6               	movwf	___fleq@ff2+2
  3520     02A6  3000               	movlw	0
  3521     02A7  00F5               	movwf	___fleq@ff2+1
  3522     02A8  3000               	movlw	0
  3523     02A9  00F4               	movwf	___fleq@ff2
  3524     02AA  160A  158A  2614  120A  118A  	fcall	___fleq
  3525     02AF  1803               	btfsc	3,0
  3526     02B0  2AB2               	goto	u5111
  3527     02B1  2AB3               	goto	u5110
  3528     02B2                     u5111:
  3529     02B2  2BA3               	goto	l3327
  3530     02B3                     u5110:
  3531     02B3                     l3303:
  3532                           
  3533                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  3534     02B3  1003               	clrc
  3535     02B4  1683               	bsf	3,5	;RP0=1, select bank1
  3536     02B5  1303               	bcf	3,6	;RP1=0, select bank1
  3537     02B6  0D3B               	rlf	(sprintf@fval+2)^(0+128),w
  3538     02B7  0D3C               	rlf	(sprintf@fval+3)^(0+128),w
  3539     02B8  3E82               	addlw	130
  3540     02B9  00B0               	movwf	sprintf@eexp^(0+128)
  3541     02BA  30FF               	movlw	255
  3542     02BB  1803               	skipnc
  3543     02BC  3000               	movlw	0
  3544     02BD  00B1               	movwf	(sprintf@eexp^(0+128)+1)
  3545     02BE                     l3305:
  3546                           
  3547                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  3548     02BE  30FF               	movlw	255
  3549     02BF  07B0               	addwf	sprintf@eexp^(0+128),f
  3550     02C0  1803               	skipnc
  3551     02C1  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  3552     02C2  30FF               	movlw	255
  3553     02C3  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  3554     02C4                     l3307:
  3555                           
  3556                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  3557     02C4  3003               	movlw	3
  3558     02C5  00F0               	movwf	___wmul@multiplier
  3559     02C6  3000               	movlw	0
  3560     02C7  00F1               	movwf	___wmul@multiplier+1
  3561     02C8  0831               	movf	(sprintf@eexp+1)^(0+128),w
  3562     02C9  00F3               	movwf	___wmul@multiplicand+1
  3563     02CA  0830               	movf	sprintf@eexp^(0+128),w
  3564     02CB  00F2               	movwf	___wmul@multiplicand
  3565     02CC  160A  158A  23DF  120A  118A  	fcall	___wmul
  3566     02D1  0871               	movf	?___wmul+1,w
  3567     02D2  1683               	bsf	3,5	;RP0=1, select bank1
  3568     02D3  1303               	bcf	3,6	;RP1=0, select bank1
  3569     02D4  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  3570     02D5  0870               	movf	?___wmul,w
  3571     02D6  00B0               	movwf	sprintf@eexp^(0+128)
  3572     02D7                     l3309:
  3573                           
  3574                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  3575     02D7  300A               	movlw	10
  3576     02D8  00F6               	movwf	___awdiv@divisor
  3577     02D9  3000               	movlw	0
  3578     02DA  00F7               	movwf	___awdiv@divisor+1
  3579     02DB  0831               	movf	(sprintf@eexp+1)^(0+128),w
  3580     02DC  00F9               	movwf	___awdiv@dividend+1
  3581     02DD  0830               	movf	sprintf@eexp^(0+128),w
  3582     02DE  00F8               	movwf	___awdiv@dividend
  3583     02DF  160A  158A  2721  120A  118A  	fcall	___awdiv
  3584     02E4  0877               	movf	?___awdiv+1,w
  3585     02E5  1683               	bsf	3,5	;RP0=1, select bank1
  3586     02E6  1303               	bcf	3,6	;RP1=0, select bank1
  3587     02E7  00B1               	movwf	(sprintf@eexp+1)^(0+128)
  3588     02E8  0876               	movf	?___awdiv,w
  3589     02E9  00B0               	movwf	sprintf@eexp^(0+128)
  3590     02EA                     l3311:
  3591                           
  3592                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  3593     02EA  1FB1               	btfss	(sprintf@eexp+1)^(0+128),7
  3594     02EB  2AED               	goto	u5121
  3595     02EC  2AEE               	goto	u5120
  3596     02ED                     u5121:
  3597     02ED  2AF4               	goto	l3315
  3598     02EE                     u5120:
  3599     02EE                     l3313:
  3600                           
  3601                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  3602     02EE  30FF               	movlw	255
  3603     02EF  07B0               	addwf	sprintf@eexp^(0+128),f
  3604     02F0  1803               	skipnc
  3605     02F1  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  3606     02F2  30FF               	movlw	255
  3607     02F3  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  3608     02F4                     l3315:
  3609                           
  3610                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  3611     02F4  0330               	decf	sprintf@eexp^(0+128),w
  3612     02F5  3AFF               	xorlw	255
  3613     02F6  120A  158A  24A1  120A  118A  	fcall	_scale
  3614     02FB  1283               	bcf	3,5	;RP0=0, select bank0
  3615     02FC  1303               	bcf	3,6	;RP1=0, select bank0
  3616     02FD  083D               	movf	?_scale+3,w
  3617     02FE  1683               	bsf	3,5	;RP0=1, select bank1
  3618     02FF  1303               	bcf	3,6	;RP1=0, select bank1
  3619     0300  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  3620     0301  1283               	bcf	3,5	;RP0=0, select bank0
  3621     0302  1303               	bcf	3,6	;RP1=0, select bank0
  3622     0303  083C               	movf	?_scale+2,w
  3623     0304  1683               	bsf	3,5	;RP0=1, select bank1
  3624     0305  1303               	bcf	3,6	;RP1=0, select bank1
  3625     0306  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  3626     0307  1283               	bcf	3,5	;RP0=0, select bank0
  3627     0308  1303               	bcf	3,6	;RP1=0, select bank0
  3628     0309  083B               	movf	?_scale+1,w
  3629     030A  1683               	bsf	3,5	;RP0=1, select bank1
  3630     030B  1303               	bcf	3,6	;RP1=0, select bank1
  3631     030C  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  3632     030D  1283               	bcf	3,5	;RP0=0, select bank0
  3633     030E  1303               	bcf	3,6	;RP1=0, select bank0
  3634     030F  083A               	movf	?_scale,w
  3635     0310  1683               	bsf	3,5	;RP0=1, select bank1
  3636     0311  1303               	bcf	3,6	;RP1=0, select bank1
  3637     0312  00B2               	movwf	sprintf@tmpval^(0+128)
  3638     0313                     l3317:
  3639                           
  3640                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  3641     0313  083C               	movf	(sprintf@fval+3)^(0+128),w
  3642     0314  1283               	bcf	3,5	;RP0=0, select bank0
  3643     0315  1303               	bcf	3,6	;RP1=0, select bank0
  3644     0316  00A3               	movwf	___flmul@b+3
  3645     0317  1683               	bsf	3,5	;RP0=1, select bank1
  3646     0318  1303               	bcf	3,6	;RP1=0, select bank1
  3647     0319  083B               	movf	(sprintf@fval+2)^(0+128),w
  3648     031A  1283               	bcf	3,5	;RP0=0, select bank0
  3649     031B  1303               	bcf	3,6	;RP1=0, select bank0
  3650     031C  00A2               	movwf	___flmul@b+2
  3651     031D  1683               	bsf	3,5	;RP0=1, select bank1
  3652     031E  1303               	bcf	3,6	;RP1=0, select bank1
  3653     031F  083A               	movf	(sprintf@fval+1)^(0+128),w
  3654     0320  1283               	bcf	3,5	;RP0=0, select bank0
  3655     0321  1303               	bcf	3,6	;RP1=0, select bank0
  3656     0322  00A1               	movwf	___flmul@b+1
  3657     0323  1683               	bsf	3,5	;RP0=1, select bank1
  3658     0324  1303               	bcf	3,6	;RP1=0, select bank1
  3659     0325  0839               	movf	sprintf@fval^(0+128),w
  3660     0326  1283               	bcf	3,5	;RP0=0, select bank0
  3661     0327  1303               	bcf	3,6	;RP1=0, select bank0
  3662     0328  00A0               	movwf	___flmul@b
  3663     0329  1683               	bsf	3,5	;RP0=1, select bank1
  3664     032A  1303               	bcf	3,6	;RP1=0, select bank1
  3665     032B  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  3666     032C  1283               	bcf	3,5	;RP0=0, select bank0
  3667     032D  1303               	bcf	3,6	;RP1=0, select bank0
  3668     032E  00A7               	movwf	___flmul@a+3
  3669     032F  1683               	bsf	3,5	;RP0=1, select bank1
  3670     0330  1303               	bcf	3,6	;RP1=0, select bank1
  3671     0331  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  3672     0332  1283               	bcf	3,5	;RP0=0, select bank0
  3673     0333  1303               	bcf	3,6	;RP1=0, select bank0
  3674     0334  00A6               	movwf	___flmul@a+2
  3675     0335  1683               	bsf	3,5	;RP0=1, select bank1
  3676     0336  1303               	bcf	3,6	;RP1=0, select bank1
  3677     0337  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  3678     0338  1283               	bcf	3,5	;RP0=0, select bank0
  3679     0339  1303               	bcf	3,6	;RP1=0, select bank0
  3680     033A  00A5               	movwf	___flmul@a+1
  3681     033B  1683               	bsf	3,5	;RP0=1, select bank1
  3682     033C  1303               	bcf	3,6	;RP1=0, select bank1
  3683     033D  0832               	movf	sprintf@tmpval^(0+128),w
  3684     033E  1283               	bcf	3,5	;RP0=0, select bank0
  3685     033F  1303               	bcf	3,6	;RP1=0, select bank0
  3686     0340  00A4               	movwf	___flmul@a
  3687     0341  120A  158A  215C  120A  118A  	fcall	___flmul
  3688     0346  1283               	bcf	3,5	;RP0=0, select bank0
  3689     0347  1303               	bcf	3,6	;RP1=0, select bank0
  3690     0348  0823               	movf	?___flmul+3,w
  3691     0349  1683               	bsf	3,5	;RP0=1, select bank1
  3692     034A  1303               	bcf	3,6	;RP1=0, select bank1
  3693     034B  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  3694     034C  1283               	bcf	3,5	;RP0=0, select bank0
  3695     034D  1303               	bcf	3,6	;RP1=0, select bank0
  3696     034E  0822               	movf	?___flmul+2,w
  3697     034F  1683               	bsf	3,5	;RP0=1, select bank1
  3698     0350  1303               	bcf	3,6	;RP1=0, select bank1
  3699     0351  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  3700     0352  1283               	bcf	3,5	;RP0=0, select bank0
  3701     0353  1303               	bcf	3,6	;RP1=0, select bank0
  3702     0354  0821               	movf	?___flmul+1,w
  3703     0355  1683               	bsf	3,5	;RP0=1, select bank1
  3704     0356  1303               	bcf	3,6	;RP1=0, select bank1
  3705     0357  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  3706     0358  1283               	bcf	3,5	;RP0=0, select bank0
  3707     0359  1303               	bcf	3,6	;RP1=0, select bank0
  3708     035A  0820               	movf	?___flmul,w
  3709     035B  1683               	bsf	3,5	;RP0=1, select bank1
  3710     035C  1303               	bcf	3,6	;RP1=0, select bank1
  3711     035D  00B2               	movwf	sprintf@tmpval^(0+128)
  3712     035E                     l3319:
  3713                           
  3714                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  3715     035E  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  3716     035F  00F3               	movwf	___flge@ff1+3
  3717     0360  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  3718     0361  00F2               	movwf	___flge@ff1+2
  3719     0362  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  3720     0363  00F1               	movwf	___flge@ff1+1
  3721     0364  0832               	movf	sprintf@tmpval^(0+128),w
  3722     0365  00F0               	movwf	___flge@ff1
  3723     0366  303F               	movlw	63
  3724     0367  00F7               	movwf	___flge@ff2+3
  3725     0368  3080               	movlw	128
  3726     0369  00F6               	movwf	___flge@ff2+2
  3727     036A  3000               	movlw	0
  3728     036B  00F5               	movwf	___flge@ff2+1
  3729     036C  3000               	movlw	0
  3730     036D  00F4               	movwf	___flge@ff2
  3731     036E  160A  118A  20D2  120A  118A  	fcall	___flge
  3732     0373  1803               	btfsc	3,0
  3733     0374  2B76               	goto	u5131
  3734     0375  2B77               	goto	u5130
  3735     0376                     u5131:
  3736     0376  2B80               	goto	l3323
  3737     0377                     u5130:
  3738     0377                     l3321:
  3739                           
  3740                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  3741     0377  30FF               	movlw	255
  3742     0378  1683               	bsf	3,5	;RP0=1, select bank1
  3743     0379  1303               	bcf	3,6	;RP1=0, select bank1
  3744     037A  07B0               	addwf	sprintf@eexp^(0+128),f
  3745     037B  1803               	skipnc
  3746     037C  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  3747     037D  30FF               	movlw	255
  3748     037E  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  3749     037F  2BA3               	goto	l3327
  3750     0380                     l3323:
  3751     0380  1683               	bsf	3,5	;RP0=1, select bank1
  3752     0381  1303               	bcf	3,6	;RP1=0, select bank1
  3753     0382  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  3754     0383  00F3               	movwf	___flge@ff1+3
  3755     0384  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  3756     0385  00F2               	movwf	___flge@ff1+2
  3757     0386  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  3758     0387  00F1               	movwf	___flge@ff1+1
  3759     0388  0832               	movf	sprintf@tmpval^(0+128),w
  3760     0389  00F0               	movwf	___flge@ff1
  3761     038A  3041               	movlw	65
  3762     038B  00F7               	movwf	___flge@ff2+3
  3763     038C  3020               	movlw	32
  3764     038D  00F6               	movwf	___flge@ff2+2
  3765     038E  3000               	movlw	0
  3766     038F  00F5               	movwf	___flge@ff2+1
  3767     0390  3000               	movlw	0
  3768     0391  00F4               	movwf	___flge@ff2
  3769     0392  160A  118A  20D2  120A  118A  	fcall	___flge
  3770     0397  1C03               	btfss	3,0
  3771     0398  2B9A               	goto	u5141
  3772     0399  2B9B               	goto	u5140
  3773     039A                     u5141:
  3774     039A  2BA3               	goto	l3327
  3775     039B                     u5140:
  3776     039B                     l3325:
  3777                           
  3778                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3779     039B  3001               	movlw	1
  3780     039C  1683               	bsf	3,5	;RP0=1, select bank1
  3781     039D  1303               	bcf	3,6	;RP1=0, select bank1
  3782     039E  07B0               	addwf	sprintf@eexp^(0+128),f
  3783     039F  1803               	skipnc
  3784     03A0  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  3785     03A1  3000               	movlw	0
  3786     03A2  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  3787     03A3                     l3327:
  3788                           
  3789                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  3790     03A3  1683               	bsf	3,5	;RP0=1, select bank1
  3791     03A4  1303               	bcf	3,6	;RP1=0, select bank1
  3792     03A5  0837               	movf	(sprintf@prec+1)^(0+128),w
  3793     03A6  3A80               	xorlw	128
  3794     03A7  00FF               	movwf	btemp+1
  3795     03A8  3080               	movlw	128
  3796     03A9  027F               	subwf	btemp+1,w
  3797     03AA  1D03               	skipz
  3798     03AB  2BAE               	goto	u5155
  3799     03AC  300D               	movlw	13
  3800     03AD  0236               	subwf	sprintf@prec^(0+128),w
  3801     03AE                     u5155:
  3802     03AE  1803               	skipnc
  3803     03AF  2BB1               	goto	u5151
  3804     03B0  2BB2               	goto	u5150
  3805     03B1                     u5151:
  3806     03B1  2BF9               	goto	l3331
  3807     03B2                     u5150:
  3808     03B2                     l3329:
  3809                           
  3810                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  3811     03B2  1683               	bsf	3,5	;RP0=1, select bank1
  3812     03B3  1303               	bcf	3,6	;RP1=0, select bank1
  3813     03B4  0836               	movf	sprintf@prec^(0+128),w
  3814     03B5  160A  118A  239D  120A  118A  	fcall	_fround
  3815     03BA  1283               	bcf	3,5	;RP0=0, select bank0
  3816     03BB  1303               	bcf	3,6	;RP1=0, select bank0
  3817     03BC  083D               	movf	?_fround+3,w
  3818     03BD  00D1               	movwf	___fladd@b+3
  3819     03BE  083C               	movf	?_fround+2,w
  3820     03BF  00D0               	movwf	___fladd@b+2
  3821     03C0  083B               	movf	?_fround+1,w
  3822     03C1  00CF               	movwf	___fladd@b+1
  3823     03C2  083A               	movf	?_fround,w
  3824     03C3  00CE               	movwf	___fladd@b
  3825     03C4  1683               	bsf	3,5	;RP0=1, select bank1
  3826     03C5  1303               	bcf	3,6	;RP1=0, select bank1
  3827     03C6  083C               	movf	(sprintf@fval+3)^(0+128),w
  3828     03C7  1283               	bcf	3,5	;RP0=0, select bank0
  3829     03C8  1303               	bcf	3,6	;RP1=0, select bank0
  3830     03C9  00D5               	movwf	___fladd@a+3
  3831     03CA  1683               	bsf	3,5	;RP0=1, select bank1
  3832     03CB  1303               	bcf	3,6	;RP1=0, select bank1
  3833     03CC  083B               	movf	(sprintf@fval+2)^(0+128),w
  3834     03CD  1283               	bcf	3,5	;RP0=0, select bank0
  3835     03CE  1303               	bcf	3,6	;RP1=0, select bank0
  3836     03CF  00D4               	movwf	___fladd@a+2
  3837     03D0  1683               	bsf	3,5	;RP0=1, select bank1
  3838     03D1  1303               	bcf	3,6	;RP1=0, select bank1
  3839     03D2  083A               	movf	(sprintf@fval+1)^(0+128),w
  3840     03D3  1283               	bcf	3,5	;RP0=0, select bank0
  3841     03D4  1303               	bcf	3,6	;RP1=0, select bank0
  3842     03D5  00D3               	movwf	___fladd@a+1
  3843     03D6  1683               	bsf	3,5	;RP0=1, select bank1
  3844     03D7  1303               	bcf	3,6	;RP1=0, select bank1
  3845     03D8  0839               	movf	sprintf@fval^(0+128),w
  3846     03D9  1283               	bcf	3,5	;RP0=0, select bank0
  3847     03DA  1303               	bcf	3,6	;RP1=0, select bank0
  3848     03DB  00D2               	movwf	___fladd@a
  3849     03DC  160A  118A  25A8  120A  118A  	fcall	___fladd
  3850     03E1  1283               	bcf	3,5	;RP0=0, select bank0
  3851     03E2  1303               	bcf	3,6	;RP1=0, select bank0
  3852     03E3  0851               	movf	?___fladd+3,w
  3853     03E4  1683               	bsf	3,5	;RP0=1, select bank1
  3854     03E5  1303               	bcf	3,6	;RP1=0, select bank1
  3855     03E6  00BC               	movwf	(sprintf@fval+3)^(0+128)
  3856     03E7  1283               	bcf	3,5	;RP0=0, select bank0
  3857     03E8  1303               	bcf	3,6	;RP1=0, select bank0
  3858     03E9  0850               	movf	?___fladd+2,w
  3859     03EA  1683               	bsf	3,5	;RP0=1, select bank1
  3860     03EB  1303               	bcf	3,6	;RP1=0, select bank1
  3861     03EC  00BB               	movwf	(sprintf@fval+2)^(0+128)
  3862     03ED  1283               	bcf	3,5	;RP0=0, select bank0
  3863     03EE  1303               	bcf	3,6	;RP1=0, select bank0
  3864     03EF  084F               	movf	?___fladd+1,w
  3865     03F0  1683               	bsf	3,5	;RP0=1, select bank1
  3866     03F1  1303               	bcf	3,6	;RP1=0, select bank1
  3867     03F2  00BA               	movwf	(sprintf@fval+1)^(0+128)
  3868     03F3  1283               	bcf	3,5	;RP0=0, select bank0
  3869     03F4  1303               	bcf	3,6	;RP1=0, select bank0
  3870     03F5  084E               	movf	?___fladd,w
  3871     03F6  1683               	bsf	3,5	;RP0=1, select bank1
  3872     03F7  1303               	bcf	3,6	;RP1=0, select bank1
  3873     03F8  00B9               	movwf	sprintf@fval^(0+128)
  3874     03F9                     l3331:
  3875                           
  3876                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3877     03F9  1683               	bsf	3,5	;RP0=1, select bank1
  3878     03FA  1303               	bcf	3,6	;RP1=0, select bank1
  3879     03FB  0831               	movf	(sprintf@eexp+1)^(0+128),w
  3880     03FC  3A80               	xorlw	128
  3881     03FD  00FF               	movwf	btemp+1
  3882     03FE  3080               	movlw	128
  3883     03FF  027F               	subwf	btemp+1,w
  3884     0400  1D03               	skipz
  3885     0401  2C04               	goto	u5165
  3886     0402  300A               	movlw	10
  3887     0403  0230               	subwf	sprintf@eexp^(0+128),w
  3888     0404                     u5165:
  3889     0404  1803               	skipnc
  3890     0405  2C07               	goto	u5161
  3891     0406  2C08               	goto	u5160
  3892     0407                     u5161:
  3893     0407  2C59               	goto	l3339
  3894     0408                     u5160:
  3895     0408                     l3333:
  3896     0408  1683               	bsf	3,5	;RP0=1, select bank1
  3897     0409  1303               	bcf	3,6	;RP1=0, select bank1
  3898     040A  083C               	movf	(sprintf@fval+3)^(0+128),w
  3899     040B  00F3               	movwf	___fleq@ff1+3
  3900     040C  083B               	movf	(sprintf@fval+2)^(0+128),w
  3901     040D  00F2               	movwf	___fleq@ff1+2
  3902     040E  083A               	movf	(sprintf@fval+1)^(0+128),w
  3903     040F  00F1               	movwf	___fleq@ff1+1
  3904     0410  0839               	movf	sprintf@fval^(0+128),w
  3905     0411  00F0               	movwf	___fleq@ff1
  3906     0412  3000               	movlw	0
  3907     0413  00F7               	movwf	___fleq@ff2+3
  3908     0414  3000               	movlw	0
  3909     0415  00F6               	movwf	___fleq@ff2+2
  3910     0416  3000               	movlw	0
  3911     0417  00F5               	movwf	___fleq@ff2+1
  3912     0418  3000               	movlw	0
  3913     0419  00F4               	movwf	___fleq@ff2
  3914     041A  160A  158A  2614  120A  118A  	fcall	___fleq
  3915     041F  1803               	btfsc	3,0
  3916     0420  2C22               	goto	u5171
  3917     0421  2C23               	goto	u5170
  3918     0422                     u5171:
  3919     0422  2CCB               	goto	l3353
  3920     0423                     u5170:
  3921     0423                     l3335:
  3922     0423  1683               	bsf	3,5	;RP0=1, select bank1
  3923     0424  1303               	bcf	3,6	;RP1=0, select bank1
  3924     0425  083C               	movf	(sprintf@fval+3)^(0+128),w
  3925     0426  1283               	bcf	3,5	;RP0=0, select bank0
  3926     0427  1303               	bcf	3,6	;RP1=0, select bank0
  3927     0428  00D0               	movwf	___fltol@f1+3
  3928     0429  1683               	bsf	3,5	;RP0=1, select bank1
  3929     042A  1303               	bcf	3,6	;RP1=0, select bank1
  3930     042B  083B               	movf	(sprintf@fval+2)^(0+128),w
  3931     042C  1283               	bcf	3,5	;RP0=0, select bank0
  3932     042D  1303               	bcf	3,6	;RP1=0, select bank0
  3933     042E  00CF               	movwf	___fltol@f1+2
  3934     042F  1683               	bsf	3,5	;RP0=1, select bank1
  3935     0430  1303               	bcf	3,6	;RP1=0, select bank1
  3936     0431  083A               	movf	(sprintf@fval+1)^(0+128),w
  3937     0432  1283               	bcf	3,5	;RP0=0, select bank0
  3938     0433  1303               	bcf	3,6	;RP1=0, select bank0
  3939     0434  00CE               	movwf	___fltol@f1+1
  3940     0435  1683               	bsf	3,5	;RP0=1, select bank1
  3941     0436  1303               	bcf	3,6	;RP1=0, select bank1
  3942     0437  0839               	movf	sprintf@fval^(0+128),w
  3943     0438  1283               	bcf	3,5	;RP0=0, select bank0
  3944     0439  1303               	bcf	3,6	;RP1=0, select bank0
  3945     043A  00CD               	movwf	___fltol@f1
  3946     043B  160A  158A  2788  120A  118A  	fcall	___fltol
  3947     0440  1283               	bcf	3,5	;RP0=0, select bank0
  3948     0441  1303               	bcf	3,6	;RP1=0, select bank0
  3949     0442  0850               	movf	?___fltol+3,w
  3950     0443  044F               	iorwf	?___fltol+2,w
  3951     0444  044E               	iorwf	?___fltol+1,w
  3952     0445  044D               	iorwf	?___fltol,w
  3953     0446  1D03               	skipz
  3954     0447  2C49               	goto	u5181
  3955     0448  2C4A               	goto	u5180
  3956     0449                     u5181:
  3957     0449  2CCB               	goto	l3353
  3958     044A                     u5180:
  3959     044A                     l3337:
  3960     044A  1683               	bsf	3,5	;RP0=1, select bank1
  3961     044B  1303               	bcf	3,6	;RP1=0, select bank1
  3962     044C  0831               	movf	(sprintf@eexp+1)^(0+128),w
  3963     044D  3A80               	xorlw	128
  3964     044E  00FF               	movwf	btemp+1
  3965     044F  3080               	movlw	128
  3966     0450  027F               	subwf	btemp+1,w
  3967     0451  1D03               	skipz
  3968     0452  2C55               	goto	u5195
  3969     0453  3002               	movlw	2
  3970     0454  0230               	subwf	sprintf@eexp^(0+128),w
  3971     0455                     u5195:
  3972     0455  1C03               	skipc
  3973     0456  2C58               	goto	u5191
  3974     0457  2C59               	goto	u5190
  3975     0458                     u5191:
  3976     0458  2CCB               	goto	l3353
  3977     0459                     u5190:
  3978     0459                     l3339:
  3979                           
  3980                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  3981     0459  1683               	bsf	3,5	;RP0=1, select bank1
  3982     045A  1303               	bcf	3,6	;RP1=0, select bank1
  3983     045B  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  3984     045C  00F3               	movwf	___flge@ff1+3
  3985     045D  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  3986     045E  00F2               	movwf	___flge@ff1+2
  3987     045F  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  3988     0460  00F1               	movwf	___flge@ff1+1
  3989     0461  0832               	movf	sprintf@tmpval^(0+128),w
  3990     0462  00F0               	movwf	___flge@ff1
  3991     0463  3040               	movlw	64
  3992     0464  00F7               	movwf	___flge@ff2+3
  3993     0465  3089               	movlw	137
  3994     0466  00F6               	movwf	___flge@ff2+2
  3995     0467  3070               	movlw	112
  3996     0468  00F5               	movwf	___flge@ff2+1
  3997     0469  305F               	movlw	95
  3998     046A  00F4               	movwf	___flge@ff2
  3999     046B  160A  118A  20D2  120A  118A  	fcall	___flge
  4000     0470  1803               	btfsc	3,0
  4001     0471  2C73               	goto	u5201
  4002     0472  2C74               	goto	u5200
  4003     0473                     u5201:
  4004     0473  2C7D               	goto	l3343
  4005     0474                     u5200:
  4006     0474                     l3341:
  4007                           
  4008                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  4009     0474  30F7               	movlw	247
  4010     0475  1683               	bsf	3,5	;RP0=1, select bank1
  4011     0476  1303               	bcf	3,6	;RP1=0, select bank1
  4012     0477  07B0               	addwf	sprintf@eexp^(0+128),f
  4013     0478  1803               	skipnc
  4014     0479  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  4015     047A  30FF               	movlw	255
  4016     047B  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  4017                           
  4018                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1148:      }else{
  4019     047C  2C85               	goto	l3345
  4020     047D                     l3343:
  4021                           
  4022                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  4023     047D  30F8               	movlw	248
  4024     047E  1683               	bsf	3,5	;RP0=1, select bank1
  4025     047F  1303               	bcf	3,6	;RP1=0, select bank1
  4026     0480  07B0               	addwf	sprintf@eexp^(0+128),f
  4027     0481  1803               	skipnc
  4028     0482  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  4029     0483  30FF               	movlw	255
  4030     0484  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  4031     0485                     l3345:
  4032                           
  4033                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  4034     0485  0830               	movf	sprintf@eexp^(0+128),w
  4035     0486  120A  158A  24A1  120A  118A  	fcall	_scale
  4036     048B  1283               	bcf	3,5	;RP0=0, select bank0
  4037     048C  1303               	bcf	3,6	;RP1=0, select bank0
  4038     048D  083D               	movf	?_scale+3,w
  4039     048E  1683               	bsf	3,5	;RP0=1, select bank1
  4040     048F  1303               	bcf	3,6	;RP1=0, select bank1
  4041     0490  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  4042     0491  1283               	bcf	3,5	;RP0=0, select bank0
  4043     0492  1303               	bcf	3,6	;RP1=0, select bank0
  4044     0493  083C               	movf	?_scale+2,w
  4045     0494  1683               	bsf	3,5	;RP0=1, select bank1
  4046     0495  1303               	bcf	3,6	;RP1=0, select bank1
  4047     0496  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  4048     0497  1283               	bcf	3,5	;RP0=0, select bank0
  4049     0498  1303               	bcf	3,6	;RP1=0, select bank0
  4050     0499  083B               	movf	?_scale+1,w
  4051     049A  1683               	bsf	3,5	;RP0=1, select bank1
  4052     049B  1303               	bcf	3,6	;RP1=0, select bank1
  4053     049C  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  4054     049D  1283               	bcf	3,5	;RP0=0, select bank0
  4055     049E  1303               	bcf	3,6	;RP1=0, select bank0
  4056     049F  083A               	movf	?_scale,w
  4057     04A0  1683               	bsf	3,5	;RP0=1, select bank1
  4058     04A1  1303               	bcf	3,6	;RP1=0, select bank1
  4059     04A2  00B2               	movwf	sprintf@tmpval^(0+128)
  4060     04A3                     l3347:
  4061     04A3  083C               	movf	(sprintf@fval+3)^(0+128),w
  4062     04A4  00F3               	movwf	__div_to_l_@f1+3
  4063     04A5  083B               	movf	(sprintf@fval+2)^(0+128),w
  4064     04A6  00F2               	movwf	__div_to_l_@f1+2
  4065     04A7  083A               	movf	(sprintf@fval+1)^(0+128),w
  4066     04A8  00F1               	movwf	__div_to_l_@f1+1
  4067     04A9  0839               	movf	sprintf@fval^(0+128),w
  4068     04AA  00F0               	movwf	__div_to_l_@f1
  4069     04AB  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  4070     04AC  00F7               	movwf	__div_to_l_@f2+3
  4071     04AD  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  4072     04AE  00F6               	movwf	__div_to_l_@f2+2
  4073     04AF  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  4074     04B0  00F5               	movwf	__div_to_l_@f2+1
  4075     04B1  0832               	movf	sprintf@tmpval^(0+128),w
  4076     04B2  00F4               	movwf	__div_to_l_@f2
  4077     04B3  160A  118A  222B  120A  118A  	fcall	__div_to_l_
  4078     04B8  0873               	movf	?__div_to_l_+3,w
  4079     04B9  1683               	bsf	3,5	;RP0=1, select bank1
  4080     04BA  1303               	bcf	3,6	;RP1=0, select bank1
  4081     04BB  00AF               	movwf	(sprintf@val+3)^(0+128)
  4082     04BC  0872               	movf	?__div_to_l_+2,w
  4083     04BD  00AE               	movwf	(sprintf@val+2)^(0+128)
  4084     04BE  0871               	movf	?__div_to_l_+1,w
  4085     04BF  00AD               	movwf	(sprintf@val+1)^(0+128)
  4086     04C0  0870               	movf	?__div_to_l_,w
  4087     04C1  00AC               	movwf	sprintf@val^(0+128)
  4088     04C2                     l3351:
  4089                           
  4090                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  4091     04C2  3000               	movlw	0
  4092     04C3  00BC               	movwf	(sprintf@fval+3)^(0+128)
  4093     04C4  3000               	movlw	0
  4094     04C5  00BB               	movwf	(sprintf@fval+2)^(0+128)
  4095     04C6  3000               	movlw	0
  4096     04C7  00BA               	movwf	(sprintf@fval+1)^(0+128)
  4097     04C8  3000               	movlw	0
  4098     04C9  00B9               	movwf	sprintf@fval^(0+128)
  4099                           
  4100                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  4101     04CA  2D4F               	goto	l3357
  4102     04CB                     l3353:
  4103                           
  4104                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  4105     04CB  1683               	bsf	3,5	;RP0=1, select bank1
  4106     04CC  1303               	bcf	3,6	;RP1=0, select bank1
  4107     04CD  083C               	movf	(sprintf@fval+3)^(0+128),w
  4108     04CE  1283               	bcf	3,5	;RP0=0, select bank0
  4109     04CF  1303               	bcf	3,6	;RP1=0, select bank0
  4110     04D0  00D0               	movwf	___fltol@f1+3
  4111     04D1  1683               	bsf	3,5	;RP0=1, select bank1
  4112     04D2  1303               	bcf	3,6	;RP1=0, select bank1
  4113     04D3  083B               	movf	(sprintf@fval+2)^(0+128),w
  4114     04D4  1283               	bcf	3,5	;RP0=0, select bank0
  4115     04D5  1303               	bcf	3,6	;RP1=0, select bank0
  4116     04D6  00CF               	movwf	___fltol@f1+2
  4117     04D7  1683               	bsf	3,5	;RP0=1, select bank1
  4118     04D8  1303               	bcf	3,6	;RP1=0, select bank1
  4119     04D9  083A               	movf	(sprintf@fval+1)^(0+128),w
  4120     04DA  1283               	bcf	3,5	;RP0=0, select bank0
  4121     04DB  1303               	bcf	3,6	;RP1=0, select bank0
  4122     04DC  00CE               	movwf	___fltol@f1+1
  4123     04DD  1683               	bsf	3,5	;RP0=1, select bank1
  4124     04DE  1303               	bcf	3,6	;RP1=0, select bank1
  4125     04DF  0839               	movf	sprintf@fval^(0+128),w
  4126     04E0  1283               	bcf	3,5	;RP0=0, select bank0
  4127     04E1  1303               	bcf	3,6	;RP1=0, select bank0
  4128     04E2  00CD               	movwf	___fltol@f1
  4129     04E3  160A  158A  2788  120A  118A  	fcall	___fltol
  4130     04E8  1283               	bcf	3,5	;RP0=0, select bank0
  4131     04E9  1303               	bcf	3,6	;RP1=0, select bank0
  4132     04EA  0850               	movf	?___fltol+3,w
  4133     04EB  1683               	bsf	3,5	;RP0=1, select bank1
  4134     04EC  1303               	bcf	3,6	;RP1=0, select bank1
  4135     04ED  00AF               	movwf	(sprintf@val+3)^(0+128)
  4136     04EE  1283               	bcf	3,5	;RP0=0, select bank0
  4137     04EF  1303               	bcf	3,6	;RP1=0, select bank0
  4138     04F0  084F               	movf	?___fltol+2,w
  4139     04F1  1683               	bsf	3,5	;RP0=1, select bank1
  4140     04F2  1303               	bcf	3,6	;RP1=0, select bank1
  4141     04F3  00AE               	movwf	(sprintf@val+2)^(0+128)
  4142     04F4  1283               	bcf	3,5	;RP0=0, select bank0
  4143     04F5  1303               	bcf	3,6	;RP1=0, select bank0
  4144     04F6  084E               	movf	?___fltol+1,w
  4145     04F7  1683               	bsf	3,5	;RP0=1, select bank1
  4146     04F8  1303               	bcf	3,6	;RP1=0, select bank1
  4147     04F9  00AD               	movwf	(sprintf@val+1)^(0+128)
  4148     04FA  1283               	bcf	3,5	;RP0=0, select bank0
  4149     04FB  1303               	bcf	3,6	;RP1=0, select bank0
  4150     04FC  084D               	movf	?___fltol,w
  4151     04FD  1683               	bsf	3,5	;RP0=1, select bank1
  4152     04FE  1303               	bcf	3,6	;RP1=0, select bank1
  4153     04FF  00AC               	movwf	sprintf@val^(0+128)
  4154                           
  4155                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  4156     0500  082F               	movf	(sprintf@val+3)^(0+128),w
  4157     0501  00F9               	movwf	___xxtofl@val+3
  4158     0502  082E               	movf	(sprintf@val+2)^(0+128),w
  4159     0503  00F8               	movwf	___xxtofl@val+2
  4160     0504  082D               	movf	(sprintf@val+1)^(0+128),w
  4161     0505  00F7               	movwf	___xxtofl@val+1
  4162     0506  082C               	movf	sprintf@val^(0+128),w
  4163     0507  00F6               	movwf	___xxtofl@val
  4164     0508  3000               	movlw	0
  4165     0509  160A  118A  22E3  120A  118A  	fcall	___xxtofl
  4166     050E  0879               	movf	?___xxtofl+3,w
  4167     050F  1283               	bcf	3,5	;RP0=0, select bank0
  4168     0510  1303               	bcf	3,6	;RP1=0, select bank0
  4169     0511  00E5               	movwf	___flsub@a+3
  4170     0512  0878               	movf	?___xxtofl+2,w
  4171     0513  00E4               	movwf	___flsub@a+2
  4172     0514  0877               	movf	?___xxtofl+1,w
  4173     0515  00E3               	movwf	___flsub@a+1
  4174     0516  0876               	movf	?___xxtofl,w
  4175     0517  00E2               	movwf	___flsub@a
  4176     0518  1683               	bsf	3,5	;RP0=1, select bank1
  4177     0519  1303               	bcf	3,6	;RP1=0, select bank1
  4178     051A  083C               	movf	(sprintf@fval+3)^(0+128),w
  4179     051B  1283               	bcf	3,5	;RP0=0, select bank0
  4180     051C  1303               	bcf	3,6	;RP1=0, select bank0
  4181     051D  00E9               	movwf	___flsub@b+3
  4182     051E  1683               	bsf	3,5	;RP0=1, select bank1
  4183     051F  1303               	bcf	3,6	;RP1=0, select bank1
  4184     0520  083B               	movf	(sprintf@fval+2)^(0+128),w
  4185     0521  1283               	bcf	3,5	;RP0=0, select bank0
  4186     0522  1303               	bcf	3,6	;RP1=0, select bank0
  4187     0523  00E8               	movwf	___flsub@b+2
  4188     0524  1683               	bsf	3,5	;RP0=1, select bank1
  4189     0525  1303               	bcf	3,6	;RP1=0, select bank1
  4190     0526  083A               	movf	(sprintf@fval+1)^(0+128),w
  4191     0527  1283               	bcf	3,5	;RP0=0, select bank0
  4192     0528  1303               	bcf	3,6	;RP1=0, select bank0
  4193     0529  00E7               	movwf	___flsub@b+1
  4194     052A  1683               	bsf	3,5	;RP0=1, select bank1
  4195     052B  1303               	bcf	3,6	;RP1=0, select bank1
  4196     052C  0839               	movf	sprintf@fval^(0+128),w
  4197     052D  1283               	bcf	3,5	;RP0=0, select bank0
  4198     052E  1303               	bcf	3,6	;RP1=0, select bank0
  4199     052F  00E6               	movwf	___flsub@b
  4200     0530  160A  158A  23BB  120A  118A  	fcall	___flsub
  4201     0535  1283               	bcf	3,5	;RP0=0, select bank0
  4202     0536  1303               	bcf	3,6	;RP1=0, select bank0
  4203     0537  0865               	movf	?___flsub+3,w
  4204     0538  1683               	bsf	3,5	;RP0=1, select bank1
  4205     0539  1303               	bcf	3,6	;RP1=0, select bank1
  4206     053A  00BC               	movwf	(sprintf@fval+3)^(0+128)
  4207     053B  1283               	bcf	3,5	;RP0=0, select bank0
  4208     053C  1303               	bcf	3,6	;RP1=0, select bank0
  4209     053D  0864               	movf	?___flsub+2,w
  4210     053E  1683               	bsf	3,5	;RP0=1, select bank1
  4211     053F  1303               	bcf	3,6	;RP1=0, select bank1
  4212     0540  00BB               	movwf	(sprintf@fval+2)^(0+128)
  4213     0541  1283               	bcf	3,5	;RP0=0, select bank0
  4214     0542  1303               	bcf	3,6	;RP1=0, select bank0
  4215     0543  0863               	movf	?___flsub+1,w
  4216     0544  1683               	bsf	3,5	;RP0=1, select bank1
  4217     0545  1303               	bcf	3,6	;RP1=0, select bank1
  4218     0546  00BA               	movwf	(sprintf@fval+1)^(0+128)
  4219     0547  1283               	bcf	3,5	;RP0=0, select bank0
  4220     0548  1303               	bcf	3,6	;RP1=0, select bank0
  4221     0549  0862               	movf	?___flsub,w
  4222     054A  1683               	bsf	3,5	;RP0=1, select bank1
  4223     054B  1303               	bcf	3,6	;RP1=0, select bank1
  4224     054C  00B9               	movwf	sprintf@fval^(0+128)
  4225     054D                     l3355:
  4226                           
  4227                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  4228     054D  01B0               	clrf	sprintf@eexp^(0+128)
  4229     054E  01B1               	clrf	(sprintf@eexp+1)^(0+128)
  4230     054F                     l3357:
  4231                           
  4232                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  4233     054F  01BD               	clrf	sprintf@c^(0+128)
  4234     0550  0ABD               	incf	sprintf@c^(0+128),f
  4235     0551                     l3363:
  4236                           
  4237                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  4238     0551  083D               	movf	sprintf@c^(0+128),w
  4239     0552  00A0               	movwf	??_sprintf^(0+128)
  4240     0553  3001               	movlw	1
  4241     0554                     u5215:
  4242     0554  1003               	clrc
  4243     0555  0DA0               	rlf	??_sprintf^(0+128),f
  4244     0556  3EFF               	addlw	-1
  4245     0557  1D03               	skipz
  4246     0558  2D54               	goto	u5215
  4247     0559  1003               	clrc
  4248     055A  0D20               	rlf	??_sprintf^(0+128),w
  4249     055B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4250     055C  0084               	movwf	4
  4251     055D  120A  158A  200A  120A  118A  	fcall	stringdir
  4252     0562  00A1               	movwf	(??_sprintf+1)^(0+128)
  4253     0563  120A  158A  200A  120A  118A  	fcall	stringdir
  4254     0568  00A2               	movwf	((??_sprintf+1)^(0+128)+1)
  4255     0569  120A  158A  200A  120A  118A  	fcall	stringdir
  4256     056E  00A3               	movwf	((??_sprintf+1)^(0+128)+2)
  4257     056F  120A  158A  200A  120A  118A  	fcall	stringdir
  4258     0574  00A4               	movwf	((??_sprintf+1)^(0+128)+3)
  4259     0575  0824               	movf	(??_sprintf+4)^(0+128),w
  4260     0576  022F               	subwf	(sprintf@val+3)^(0+128),w
  4261     0577  1D03               	skipz
  4262     0578  2D83               	goto	u5225
  4263     0579  0823               	movf	(??_sprintf+3)^(0+128),w
  4264     057A  022E               	subwf	(sprintf@val+2)^(0+128),w
  4265     057B  1D03               	skipz
  4266     057C  2D83               	goto	u5225
  4267     057D  0822               	movf	(??_sprintf+2)^(0+128),w
  4268     057E  022D               	subwf	(sprintf@val+1)^(0+128),w
  4269     057F  1D03               	skipz
  4270     0580  2D83               	goto	u5225
  4271     0581  0821               	movf	(??_sprintf+1)^(0+128),w
  4272     0582  022C               	subwf	sprintf@val^(0+128),w
  4273     0583                     u5225:
  4274     0583  1803               	skipnc
  4275     0584  2D86               	goto	u5221
  4276     0585  2D87               	goto	u5220
  4277     0586                     u5221:
  4278     0586  2D88               	goto	l3367
  4279     0587                     u5220:
  4280     0587  2D92               	goto	l3371
  4281     0588                     l3367:
  4282     0588  3001               	movlw	1
  4283     0589  00FF               	movwf	btemp+1
  4284     058A  087F               	movf	btemp+1,w
  4285     058B  07BD               	addwf	sprintf@c^(0+128),f
  4286     058C                     l3369:
  4287     058C  300A               	movlw	10
  4288     058D  063D               	xorwf	sprintf@c^(0+128),w
  4289     058E  1D03               	btfss	3,2
  4290     058F  2D91               	goto	u5231
  4291     0590  2D92               	goto	u5230
  4292     0591                     u5231:
  4293     0591  2D51               	goto	l3363
  4294     0592                     u5230:
  4295     0592                     l3371:
  4296                           
  4297                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  4298     0592  3003               	movlw	3
  4299     0593  052A               	andwf	sprintf@flag^(0+128),w
  4300     0594  00A0               	movwf	??_sprintf^(0+128)
  4301     0595  3000               	movlw	0
  4302     0596  052B               	andwf	(sprintf@flag+1)^(0+128),w
  4303     0597  00A1               	movwf	(??_sprintf+1)^(0+128)
  4304     0598  0820               	movf	??_sprintf^(0+128),w
  4305     0599  0421               	iorwf	(??_sprintf^(0+128)+1),w
  4306     059A  1903               	btfsc	3,2
  4307     059B  2D9D               	goto	u5241
  4308     059C  2D9E               	goto	u5240
  4309     059D                     u5241:
  4310     059D  2E0C               	goto	l3385
  4311     059E                     u5240:
  4312     059E                     l3373:
  4313                           
  4314                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  4315     059E  0838               	movf	sprintf@sp^(0+128),w
  4316     059F  0084               	movwf	4
  4317     05A0  302D               	movlw	45
  4318     05A1  1383               	bcf	3,7	;select IRP bank0
  4319     05A2  0080               	movwf	0
  4320     05A3                     l3375:
  4321     05A3  3001               	movlw	1
  4322     05A4  00FF               	movwf	btemp+1
  4323     05A5  087F               	movf	btemp+1,w
  4324     05A6  07B8               	addwf	sprintf@sp^(0+128),f
  4325     05A7  2E0C               	goto	l3385
  4326     05A8                     l3377:
  4327                           
  4328                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  4329     05A8  083D               	movf	sprintf@c^(0+128),w
  4330     05A9  00A0               	movwf	??_sprintf^(0+128)
  4331     05AA  3001               	movlw	1
  4332     05AB                     u5255:
  4333     05AB  1003               	clrc
  4334     05AC  0DA0               	rlf	??_sprintf^(0+128),f
  4335     05AD  3EFF               	addlw	-1
  4336     05AE  1D03               	skipz
  4337     05AF  2DAB               	goto	u5255
  4338     05B0  1003               	clrc
  4339     05B1  0D20               	rlf	??_sprintf^(0+128),w
  4340     05B2  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4341     05B3  0084               	movwf	4
  4342     05B4  120A  158A  200A  120A  118A  	fcall	stringdir
  4343     05B9  00F0               	movwf	___lldiv@divisor
  4344     05BA  120A  158A  200A  120A  118A  	fcall	stringdir
  4345     05BF  00F1               	movwf	___lldiv@divisor+1
  4346     05C0  120A  158A  200A  120A  118A  	fcall	stringdir
  4347     05C5  00F2               	movwf	___lldiv@divisor+2
  4348     05C6  120A  158A  200A  120A  118A  	fcall	stringdir
  4349     05CB  00F3               	movwf	___lldiv@divisor+3
  4350     05CC  082F               	movf	(sprintf@val+3)^(0+128),w
  4351     05CD  00F7               	movwf	___lldiv@dividend+3
  4352     05CE  082E               	movf	(sprintf@val+2)^(0+128),w
  4353     05CF  00F6               	movwf	___lldiv@dividend+2
  4354     05D0  082D               	movf	(sprintf@val+1)^(0+128),w
  4355     05D1  00F5               	movwf	___lldiv@dividend+1
  4356     05D2  082C               	movf	sprintf@val^(0+128),w
  4357     05D3  00F4               	movwf	___lldiv@dividend
  4358     05D4  160A  158A  26BB  120A  118A  	fcall	___lldiv
  4359     05D9  0873               	movf	?___lldiv+3,w
  4360     05DA  1683               	bsf	3,5	;RP0=1, select bank1
  4361     05DB  1303               	bcf	3,6	;RP1=0, select bank1
  4362     05DC  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  4363     05DD  0872               	movf	?___lldiv+2,w
  4364     05DE  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  4365     05DF  0871               	movf	?___lldiv+1,w
  4366     05E0  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  4367     05E1  0870               	movf	?___lldiv,w
  4368     05E2  00B2               	movwf	sprintf@tmpval^(0+128)
  4369     05E3                     l3379:
  4370                           
  4371                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  4372     05E3  3000               	movlw	0
  4373     05E4  00F3               	movwf	___llmod@divisor+3
  4374     05E5  3000               	movlw	0
  4375     05E6  00F2               	movwf	___llmod@divisor+2
  4376     05E7  3000               	movlw	0
  4377     05E8  00F1               	movwf	___llmod@divisor+1
  4378     05E9  300A               	movlw	10
  4379     05EA  00F0               	movwf	___llmod@divisor
  4380     05EB  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  4381     05EC  00F7               	movwf	___llmod@dividend+3
  4382     05ED  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  4383     05EE  00F6               	movwf	___llmod@dividend+2
  4384     05EF  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  4385     05F0  00F5               	movwf	___llmod@dividend+1
  4386     05F1  0832               	movf	sprintf@tmpval^(0+128),w
  4387     05F2  00F4               	movwf	___llmod@dividend
  4388     05F3  160A  118A  2002  120A  118A  	fcall	___llmod
  4389     05F8  0873               	movf	?___llmod+3,w
  4390     05F9  1683               	bsf	3,5	;RP0=1, select bank1
  4391     05FA  1303               	bcf	3,6	;RP1=0, select bank1
  4392     05FB  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  4393     05FC  0872               	movf	?___llmod+2,w
  4394     05FD  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  4395     05FE  0871               	movf	?___llmod+1,w
  4396     05FF  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  4397     0600  0870               	movf	?___llmod,w
  4398     0601  00B2               	movwf	sprintf@tmpval^(0+128)
  4399     0602                     l3381:
  4400                           
  4401                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  4402     0602  0838               	movf	sprintf@sp^(0+128),w
  4403     0603  0084               	movwf	4
  4404     0604  0832               	movf	sprintf@tmpval^(0+128),w
  4405     0605  3E30               	addlw	48
  4406     0606  1383               	bcf	3,7	;select IRP bank0
  4407     0607  0080               	movwf	0
  4408     0608                     l3383:
  4409     0608  3001               	movlw	1
  4410     0609  00FF               	movwf	btemp+1
  4411     060A  087F               	movf	btemp+1,w
  4412     060B  07B8               	addwf	sprintf@sp^(0+128),f
  4413     060C                     l3385:
  4414                           
  4415                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  4416     060C  3001               	movlw	1
  4417     060D  02BD               	subwf	sprintf@c^(0+128),f
  4418     060E  0A3D               	incf	sprintf@c^(0+128),w
  4419     060F  1D03               	btfss	3,2
  4420     0610  2E12               	goto	u5261
  4421     0611  2E13               	goto	u5260
  4422     0612                     u5261:
  4423     0612  2DA8               	goto	l3377
  4424     0613                     u5260:
  4425     0613  2E25               	goto	l3393
  4426     0614                     l3387:
  4427                           
  4428                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  4429     0614  1683               	bsf	3,5	;RP0=1, select bank1
  4430     0615  1303               	bcf	3,6	;RP1=0, select bank1
  4431     0616  0838               	movf	sprintf@sp^(0+128),w
  4432     0617  0084               	movwf	4
  4433     0618  3030               	movlw	48
  4434     0619  1383               	bcf	3,7	;select IRP bank0
  4435     061A  0080               	movwf	0
  4436     061B                     l3389:
  4437     061B  3001               	movlw	1
  4438     061C  00FF               	movwf	btemp+1
  4439     061D  087F               	movf	btemp+1,w
  4440     061E  07B8               	addwf	sprintf@sp^(0+128),f
  4441     061F                     l3391:
  4442                           
  4443                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  4444     061F  30FF               	movlw	255
  4445     0620  07B0               	addwf	sprintf@eexp^(0+128),f
  4446     0621  1803               	skipnc
  4447     0622  0AB1               	incf	(sprintf@eexp+1)^(0+128),f
  4448     0623  30FF               	movlw	255
  4449     0624  07B1               	addwf	(sprintf@eexp+1)^(0+128),f
  4450     0625                     l3393:
  4451                           
  4452                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  4453     0625  0831               	movf	(sprintf@eexp+1)^(0+128),w
  4454     0626  3A80               	xorlw	128
  4455     0627  00FF               	movwf	btemp+1
  4456     0628  3080               	movlw	128
  4457     0629  027F               	subwf	btemp+1,w
  4458     062A  1D03               	skipz
  4459     062B  2E2E               	goto	u5275
  4460     062C  3001               	movlw	1
  4461     062D  0230               	subwf	sprintf@eexp^(0+128),w
  4462     062E                     u5275:
  4463     062E  1803               	skipnc
  4464     062F  2E31               	goto	u5271
  4465     0630  2E32               	goto	u5270
  4466     0631                     u5271:
  4467     0631  2E14               	goto	l3387
  4468     0632                     u5270:
  4469     0632                     l3395:
  4470                           
  4471                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  4472     0632  1683               	bsf	3,5	;RP0=1, select bank1
  4473     0633  1303               	bcf	3,6	;RP1=0, select bank1
  4474     0634  0837               	movf	(sprintf@prec+1)^(0+128),w
  4475     0635  3A80               	xorlw	128
  4476     0636  00FF               	movwf	btemp+1
  4477     0637  3080               	movlw	128
  4478     0638  027F               	subwf	btemp+1,w
  4479     0639  1D03               	skipz
  4480     063A  2E3D               	goto	u5285
  4481     063B  3009               	movlw	9
  4482     063C  0236               	subwf	sprintf@prec^(0+128),w
  4483     063D                     u5285:
  4484     063D  1C03               	skipc
  4485     063E  2E40               	goto	u5281
  4486     063F  2E41               	goto	u5280
  4487     0640                     u5281:
  4488     0640  2E46               	goto	l3399
  4489     0641                     u5280:
  4490     0641                     l3397:
  4491                           
  4492                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  4493     0641  3008               	movlw	8
  4494     0642  1683               	bsf	3,5	;RP0=1, select bank1
  4495     0643  1303               	bcf	3,6	;RP1=0, select bank1
  4496     0644  00BD               	movwf	sprintf@c^(0+128)
  4497     0645  2E4A               	goto	l309
  4498     0646                     l3399:
  4499                           
  4500                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  4501     0646  1683               	bsf	3,5	;RP0=1, select bank1
  4502     0647  1303               	bcf	3,6	;RP1=0, select bank1
  4503     0648  0836               	movf	sprintf@prec^(0+128),w
  4504     0649  00BD               	movwf	sprintf@c^(0+128)
  4505     064A                     l309:
  4506                           
  4507                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  4508     064A  083D               	movf	sprintf@c^(0+128),w
  4509     064B  00A0               	movwf	??_sprintf^(0+128)
  4510     064C  01A1               	clrf	(??_sprintf^(0+128)+1)
  4511     064D  0820               	movf	??_sprintf^(0+128),w
  4512     064E  02B6               	subwf	sprintf@prec^(0+128),f
  4513     064F  0821               	movf	(??_sprintf+1)^(0+128),w
  4514     0650  1C03               	skipc
  4515     0651  03B7               	decf	(sprintf@prec+1)^(0+128),f
  4516     0652  02B7               	subwf	(sprintf@prec+1)^(0+128),f
  4517     0653                     l3401:
  4518                           
  4519                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  4520     0653  083D               	movf	sprintf@c^(0+128),w
  4521     0654  1903               	btfsc	3,2
  4522     0655  2E57               	goto	u5291
  4523     0656  2E58               	goto	u5290
  4524     0657                     u5291:
  4525     0657  2E61               	goto	l3407
  4526     0658                     u5290:
  4527     0658                     l3403:
  4528                           
  4529                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  4530     0658  0838               	movf	sprintf@sp^(0+128),w
  4531     0659  0084               	movwf	4
  4532     065A  302E               	movlw	46
  4533     065B  1383               	bcf	3,7	;select IRP bank0
  4534     065C  0080               	movwf	0
  4535     065D                     l3405:
  4536     065D  3001               	movlw	1
  4537     065E  00FF               	movwf	btemp+1
  4538     065F  087F               	movf	btemp+1,w
  4539     0660  07B8               	addwf	sprintf@sp^(0+128),f
  4540     0661                     l3407:
  4541                           
  4542                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  4543     0661  083D               	movf	sprintf@c^(0+128),w
  4544     0662  120A  158A  24A1  120A  118A  	fcall	_scale
  4545     0667  1283               	bcf	3,5	;RP0=0, select bank0
  4546     0668  1303               	bcf	3,6	;RP1=0, select bank0
  4547     0669  083D               	movf	?_scale+3,w
  4548     066A  1683               	bsf	3,5	;RP0=1, select bank1
  4549     066B  1303               	bcf	3,6	;RP1=0, select bank1
  4550     066C  00A8               	movwf	(_sprintf$980+3)^(0+128)
  4551     066D  1283               	bcf	3,5	;RP0=0, select bank0
  4552     066E  1303               	bcf	3,6	;RP1=0, select bank0
  4553     066F  083C               	movf	?_scale+2,w
  4554     0670  1683               	bsf	3,5	;RP0=1, select bank1
  4555     0671  1303               	bcf	3,6	;RP1=0, select bank1
  4556     0672  00A7               	movwf	(_sprintf$980+2)^(0+128)
  4557     0673  1283               	bcf	3,5	;RP0=0, select bank0
  4558     0674  1303               	bcf	3,6	;RP1=0, select bank0
  4559     0675  083B               	movf	?_scale+1,w
  4560     0676  1683               	bsf	3,5	;RP0=1, select bank1
  4561     0677  1303               	bcf	3,6	;RP1=0, select bank1
  4562     0678  00A6               	movwf	(_sprintf$980+1)^(0+128)
  4563     0679  1283               	bcf	3,5	;RP0=0, select bank0
  4564     067A  1303               	bcf	3,6	;RP1=0, select bank0
  4565     067B  083A               	movf	?_scale,w
  4566     067C  1683               	bsf	3,5	;RP0=1, select bank1
  4567     067D  1303               	bcf	3,6	;RP1=0, select bank1
  4568     067E  00A5               	movwf	_sprintf$980^(0+128)
  4569     067F                     l3409:
  4570                           
  4571                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  4572     067F  0828               	movf	(_sprintf$980+3)^(0+128),w
  4573     0680  1283               	bcf	3,5	;RP0=0, select bank0
  4574     0681  1303               	bcf	3,6	;RP1=0, select bank0
  4575     0682  00A7               	movwf	___flmul@a+3
  4576     0683  1683               	bsf	3,5	;RP0=1, select bank1
  4577     0684  1303               	bcf	3,6	;RP1=0, select bank1
  4578     0685  0827               	movf	(_sprintf$980+2)^(0+128),w
  4579     0686  1283               	bcf	3,5	;RP0=0, select bank0
  4580     0687  1303               	bcf	3,6	;RP1=0, select bank0
  4581     0688  00A6               	movwf	___flmul@a+2
  4582     0689  1683               	bsf	3,5	;RP0=1, select bank1
  4583     068A  1303               	bcf	3,6	;RP1=0, select bank1
  4584     068B  0826               	movf	(_sprintf$980+1)^(0+128),w
  4585     068C  1283               	bcf	3,5	;RP0=0, select bank0
  4586     068D  1303               	bcf	3,6	;RP1=0, select bank0
  4587     068E  00A5               	movwf	___flmul@a+1
  4588     068F  1683               	bsf	3,5	;RP0=1, select bank1
  4589     0690  1303               	bcf	3,6	;RP1=0, select bank1
  4590     0691  0825               	movf	_sprintf$980^(0+128),w
  4591     0692  1283               	bcf	3,5	;RP0=0, select bank0
  4592     0693  1303               	bcf	3,6	;RP1=0, select bank0
  4593     0694  00A4               	movwf	___flmul@a
  4594     0695  1683               	bsf	3,5	;RP0=1, select bank1
  4595     0696  1303               	bcf	3,6	;RP1=0, select bank1
  4596     0697  083C               	movf	(sprintf@fval+3)^(0+128),w
  4597     0698  1283               	bcf	3,5	;RP0=0, select bank0
  4598     0699  1303               	bcf	3,6	;RP1=0, select bank0
  4599     069A  00A3               	movwf	___flmul@b+3
  4600     069B  1683               	bsf	3,5	;RP0=1, select bank1
  4601     069C  1303               	bcf	3,6	;RP1=0, select bank1
  4602     069D  083B               	movf	(sprintf@fval+2)^(0+128),w
  4603     069E  1283               	bcf	3,5	;RP0=0, select bank0
  4604     069F  1303               	bcf	3,6	;RP1=0, select bank0
  4605     06A0  00A2               	movwf	___flmul@b+2
  4606     06A1  1683               	bsf	3,5	;RP0=1, select bank1
  4607     06A2  1303               	bcf	3,6	;RP1=0, select bank1
  4608     06A3  083A               	movf	(sprintf@fval+1)^(0+128),w
  4609     06A4  1283               	bcf	3,5	;RP0=0, select bank0
  4610     06A5  1303               	bcf	3,6	;RP1=0, select bank0
  4611     06A6  00A1               	movwf	___flmul@b+1
  4612     06A7  1683               	bsf	3,5	;RP0=1, select bank1
  4613     06A8  1303               	bcf	3,6	;RP1=0, select bank1
  4614     06A9  0839               	movf	sprintf@fval^(0+128),w
  4615     06AA  1283               	bcf	3,5	;RP0=0, select bank0
  4616     06AB  1303               	bcf	3,6	;RP1=0, select bank0
  4617     06AC  00A0               	movwf	___flmul@b
  4618     06AD  120A  158A  215C  120A  118A  	fcall	___flmul
  4619     06B2  1283               	bcf	3,5	;RP0=0, select bank0
  4620     06B3  1303               	bcf	3,6	;RP1=0, select bank0
  4621     06B4  0823               	movf	?___flmul+3,w
  4622     06B5  00D0               	movwf	___fltol@f1+3
  4623     06B6  0822               	movf	?___flmul+2,w
  4624     06B7  00CF               	movwf	___fltol@f1+2
  4625     06B8  0821               	movf	?___flmul+1,w
  4626     06B9  00CE               	movwf	___fltol@f1+1
  4627     06BA  0820               	movf	?___flmul,w
  4628     06BB  00CD               	movwf	___fltol@f1
  4629     06BC  160A  158A  2788  120A  118A  	fcall	___fltol
  4630     06C1  1283               	bcf	3,5	;RP0=0, select bank0
  4631     06C2  1303               	bcf	3,6	;RP1=0, select bank0
  4632     06C3  0850               	movf	?___fltol+3,w
  4633     06C4  1683               	bsf	3,5	;RP0=1, select bank1
  4634     06C5  1303               	bcf	3,6	;RP1=0, select bank1
  4635     06C6  00AF               	movwf	(sprintf@val+3)^(0+128)
  4636     06C7  1283               	bcf	3,5	;RP0=0, select bank0
  4637     06C8  1303               	bcf	3,6	;RP1=0, select bank0
  4638     06C9  084F               	movf	?___fltol+2,w
  4639     06CA  1683               	bsf	3,5	;RP0=1, select bank1
  4640     06CB  1303               	bcf	3,6	;RP1=0, select bank1
  4641     06CC  00AE               	movwf	(sprintf@val+2)^(0+128)
  4642     06CD  1283               	bcf	3,5	;RP0=0, select bank0
  4643     06CE  1303               	bcf	3,6	;RP1=0, select bank0
  4644     06CF  084E               	movf	?___fltol+1,w
  4645     06D0  1683               	bsf	3,5	;RP0=1, select bank1
  4646     06D1  1303               	bcf	3,6	;RP1=0, select bank1
  4647     06D2  00AD               	movwf	(sprintf@val+1)^(0+128)
  4648     06D3  1283               	bcf	3,5	;RP0=0, select bank0
  4649     06D4  1303               	bcf	3,6	;RP1=0, select bank0
  4650     06D5  084D               	movf	?___fltol,w
  4651     06D6  1683               	bsf	3,5	;RP0=1, select bank1
  4652     06D7  1303               	bcf	3,6	;RP1=0, select bank1
  4653     06D8  00AC               	movwf	sprintf@val^(0+128)
  4654                           
  4655                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  4656     06D9  2F79               	goto	l3421
  4657     06DA                     l3411:
  4658                           
  4659                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  4660     06DA  083D               	movf	sprintf@c^(0+128),w
  4661     06DB  00A0               	movwf	??_sprintf^(0+128)
  4662     06DC  3001               	movlw	1
  4663     06DD                     u5305:
  4664     06DD  1003               	clrc
  4665     06DE  0DA0               	rlf	??_sprintf^(0+128),f
  4666     06DF  3EFF               	addlw	-1
  4667     06E0  1D03               	skipz
  4668     06E1  2EDD               	goto	u5305
  4669     06E2  1003               	clrc
  4670     06E3  0D20               	rlf	??_sprintf^(0+128),w
  4671     06E4  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4672     06E5  0084               	movwf	4
  4673     06E6  120A  158A  200A  120A  118A  	fcall	stringdir
  4674     06EB  00F0               	movwf	___lldiv@divisor
  4675     06EC  120A  158A  200A  120A  118A  	fcall	stringdir
  4676     06F1  00F1               	movwf	___lldiv@divisor+1
  4677     06F2  120A  158A  200A  120A  118A  	fcall	stringdir
  4678     06F7  00F2               	movwf	___lldiv@divisor+2
  4679     06F8  120A  158A  200A  120A  118A  	fcall	stringdir
  4680     06FD  00F3               	movwf	___lldiv@divisor+3
  4681     06FE  082F               	movf	(sprintf@val+3)^(0+128),w
  4682     06FF  00F7               	movwf	___lldiv@dividend+3
  4683     0700  082E               	movf	(sprintf@val+2)^(0+128),w
  4684     0701  00F6               	movwf	___lldiv@dividend+2
  4685     0702  082D               	movf	(sprintf@val+1)^(0+128),w
  4686     0703  00F5               	movwf	___lldiv@dividend+1
  4687     0704  082C               	movf	sprintf@val^(0+128),w
  4688     0705  00F4               	movwf	___lldiv@dividend
  4689     0706  160A  158A  26BB  120A  118A  	fcall	___lldiv
  4690     070B  0873               	movf	?___lldiv+3,w
  4691     070C  1683               	bsf	3,5	;RP0=1, select bank1
  4692     070D  1303               	bcf	3,6	;RP1=0, select bank1
  4693     070E  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  4694     070F  0872               	movf	?___lldiv+2,w
  4695     0710  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  4696     0711  0871               	movf	?___lldiv+1,w
  4697     0712  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  4698     0713  0870               	movf	?___lldiv,w
  4699     0714  00B2               	movwf	sprintf@tmpval^(0+128)
  4700     0715                     l3413:
  4701                           
  4702                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  4703     0715  3000               	movlw	0
  4704     0716  00F3               	movwf	___llmod@divisor+3
  4705     0717  3000               	movlw	0
  4706     0718  00F2               	movwf	___llmod@divisor+2
  4707     0719  3000               	movlw	0
  4708     071A  00F1               	movwf	___llmod@divisor+1
  4709     071B  300A               	movlw	10
  4710     071C  00F0               	movwf	___llmod@divisor
  4711     071D  0835               	movf	(sprintf@tmpval+3)^(0+128),w
  4712     071E  00F7               	movwf	___llmod@dividend+3
  4713     071F  0834               	movf	(sprintf@tmpval+2)^(0+128),w
  4714     0720  00F6               	movwf	___llmod@dividend+2
  4715     0721  0833               	movf	(sprintf@tmpval+1)^(0+128),w
  4716     0722  00F5               	movwf	___llmod@dividend+1
  4717     0723  0832               	movf	sprintf@tmpval^(0+128),w
  4718     0724  00F4               	movwf	___llmod@dividend
  4719     0725  160A  118A  2002  120A  118A  	fcall	___llmod
  4720     072A  0873               	movf	?___llmod+3,w
  4721     072B  1683               	bsf	3,5	;RP0=1, select bank1
  4722     072C  1303               	bcf	3,6	;RP1=0, select bank1
  4723     072D  00B5               	movwf	(sprintf@tmpval+3)^(0+128)
  4724     072E  0872               	movf	?___llmod+2,w
  4725     072F  00B4               	movwf	(sprintf@tmpval+2)^(0+128)
  4726     0730  0871               	movf	?___llmod+1,w
  4727     0731  00B3               	movwf	(sprintf@tmpval+1)^(0+128)
  4728     0732  0870               	movf	?___llmod,w
  4729     0733  00B2               	movwf	sprintf@tmpval^(0+128)
  4730     0734                     l3415:
  4731                           
  4732                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  4733     0734  0838               	movf	sprintf@sp^(0+128),w
  4734     0735  0084               	movwf	4
  4735     0736  0832               	movf	sprintf@tmpval^(0+128),w
  4736     0737  3E30               	addlw	48
  4737     0738  1383               	bcf	3,7	;select IRP bank0
  4738     0739  0080               	movwf	0
  4739     073A                     l3417:
  4740     073A  3001               	movlw	1
  4741     073B  00FF               	movwf	btemp+1
  4742     073C  087F               	movf	btemp+1,w
  4743     073D  07B8               	addwf	sprintf@sp^(0+128),f
  4744     073E                     l3419:
  4745                           
  4746                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  4747     073E  083D               	movf	sprintf@c^(0+128),w
  4748     073F  00A0               	movwf	??_sprintf^(0+128)
  4749     0740  3001               	movlw	1
  4750     0741                     u5315:
  4751     0741  1003               	clrc
  4752     0742  0DA0               	rlf	??_sprintf^(0+128),f
  4753     0743  3EFF               	addlw	-1
  4754     0744  1D03               	skipz
  4755     0745  2F41               	goto	u5315
  4756     0746  1003               	clrc
  4757     0747  0D20               	rlf	??_sprintf^(0+128),w
  4758     0748  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4759     0749  0084               	movwf	4
  4760     074A  120A  158A  200A  120A  118A  	fcall	stringdir
  4761     074F  00F0               	movwf	___llmod@divisor
  4762     0750  120A  158A  200A  120A  118A  	fcall	stringdir
  4763     0755  00F1               	movwf	___llmod@divisor+1
  4764     0756  120A  158A  200A  120A  118A  	fcall	stringdir
  4765     075B  00F2               	movwf	___llmod@divisor+2
  4766     075C  120A  158A  200A  120A  118A  	fcall	stringdir
  4767     0761  00F3               	movwf	___llmod@divisor+3
  4768     0762  082F               	movf	(sprintf@val+3)^(0+128),w
  4769     0763  00F7               	movwf	___llmod@dividend+3
  4770     0764  082E               	movf	(sprintf@val+2)^(0+128),w
  4771     0765  00F6               	movwf	___llmod@dividend+2
  4772     0766  082D               	movf	(sprintf@val+1)^(0+128),w
  4773     0767  00F5               	movwf	___llmod@dividend+1
  4774     0768  082C               	movf	sprintf@val^(0+128),w
  4775     0769  00F4               	movwf	___llmod@dividend
  4776     076A  160A  118A  2002  120A  118A  	fcall	___llmod
  4777     076F  0873               	movf	?___llmod+3,w
  4778     0770  1683               	bsf	3,5	;RP0=1, select bank1
  4779     0771  1303               	bcf	3,6	;RP1=0, select bank1
  4780     0772  00AF               	movwf	(sprintf@val+3)^(0+128)
  4781     0773  0872               	movf	?___llmod+2,w
  4782     0774  00AE               	movwf	(sprintf@val+2)^(0+128)
  4783     0775  0871               	movf	?___llmod+1,w
  4784     0776  00AD               	movwf	(sprintf@val+1)^(0+128)
  4785     0777  0870               	movf	?___llmod,w
  4786     0778  00AC               	movwf	sprintf@val^(0+128)
  4787     0779                     l3421:
  4788                           
  4789                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  4790     0779  3001               	movlw	1
  4791     077A  02BD               	subwf	sprintf@c^(0+128),f
  4792     077B  0A3D               	incf	sprintf@c^(0+128),w
  4793     077C  1D03               	btfss	3,2
  4794     077D  2F7F               	goto	u5321
  4795     077E  2F80               	goto	u5320
  4796     077F                     u5321:
  4797     077F  2EDA               	goto	l3411
  4798     0780                     u5320:
  4799     0780  2F90               	goto	l3429
  4800     0781                     l3423:
  4801                           
  4802                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  4803     0781  0838               	movf	sprintf@sp^(0+128),w
  4804     0782  0084               	movwf	4
  4805     0783  3030               	movlw	48
  4806     0784  1383               	bcf	3,7	;select IRP bank0
  4807     0785  0080               	movwf	0
  4808     0786                     l3425:
  4809     0786  3001               	movlw	1
  4810     0787  00FF               	movwf	btemp+1
  4811     0788  087F               	movf	btemp+1,w
  4812     0789  07B8               	addwf	sprintf@sp^(0+128),f
  4813     078A                     l3427:
  4814                           
  4815                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  4816     078A  30FF               	movlw	255
  4817     078B  07B6               	addwf	sprintf@prec^(0+128),f
  4818     078C  1803               	skipnc
  4819     078D  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  4820     078E  30FF               	movlw	255
  4821     078F  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  4822     0790                     l3429:
  4823                           
  4824                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  4825     0790  0836               	movf	sprintf@prec^(0+128),w
  4826     0791  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  4827     0792  1D03               	btfss	3,2
  4828     0793  2F95               	goto	u5331
  4829     0794  2F96               	goto	u5330
  4830     0795                     u5331:
  4831     0795  2F81               	goto	l3423
  4832     0796                     u5330:
  4833     0796  2FDD               	goto	l3449
  4834     0797                     l3431:
  4835                           
  4836                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  4837     0797  0836               	movf	sprintf@prec^(0+128),w
  4838     0798  0437               	iorwf	(sprintf@prec+1)^(0+128),w
  4839     0799  1D03               	btfss	3,2
  4840     079A  2F9C               	goto	u5341
  4841     079B  2F9D               	goto	u5340
  4842     079C                     u5341:
  4843     079C  2FAB               	goto	l317
  4844     079D                     u5340:
  4845     079D                     l3433:
  4846     079D  082F               	movf	(sprintf@val+3)^(0+128),w
  4847     079E  042E               	iorwf	(sprintf@val+2)^(0+128),w
  4848     079F  042D               	iorwf	(sprintf@val+1)^(0+128),w
  4849     07A0  042C               	iorwf	sprintf@val^(0+128),w
  4850     07A1  1D03               	skipz
  4851     07A2  2FA4               	goto	u5351
  4852     07A3  2FA5               	goto	u5350
  4853     07A4                     u5351:
  4854     07A4  2FAB               	goto	l317
  4855     07A5                     u5350:
  4856     07A5                     l3435:
  4857                           
  4858                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  4859     07A5  3001               	movlw	1
  4860     07A6  07B6               	addwf	sprintf@prec^(0+128),f
  4861     07A7  1803               	skipnc
  4862     07A8  0AB7               	incf	(sprintf@prec+1)^(0+128),f
  4863     07A9  3000               	movlw	0
  4864     07AA  07B7               	addwf	(sprintf@prec+1)^(0+128),f
  4865     07AB                     l317:
  4866                           
  4867                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  4868     07AB  0837               	movf	(sprintf@prec+1)^(0+128),w
  4869     07AC  3A80               	xorlw	128
  4870     07AD  3C80               	sublw	128
  4871     07AE  1D03               	skipz
  4872     07AF  2FB2               	goto	u5365
  4873     07B0  0836               	movf	sprintf@prec^(0+128),w
  4874     07B1  023D               	subwf	sprintf@c^(0+128),w
  4875     07B2                     u5365:
  4876     07B2  1803               	skipnc
  4877     07B3  2FB5               	goto	u5361
  4878     07B4  2FB6               	goto	u5360
  4879     07B5                     u5361:
  4880     07B5  2FB7               	goto	l3439
  4881     07B6                     u5360:
  4882     07B6                     l3437:
  4883     07B6  2FC6               	goto	l3443
  4884     07B7                     l3439:
  4885     07B7  1683               	bsf	3,5	;RP0=1, select bank1
  4886     07B8  1303               	bcf	3,6	;RP1=0, select bank1
  4887     07B9  0837               	movf	(sprintf@prec+1)^(0+128),w
  4888     07BA  3A80               	xorlw	128
  4889     07BB  00A0               	movwf	??_sprintf^(0+128)
  4890     07BC  3080               	movlw	128
  4891     07BD  0220               	subwf	??_sprintf^(0+128),w
  4892     07BE  1D03               	skipz
  4893     07BF  2FC2               	goto	u5375
  4894     07C0  083D               	movf	sprintf@c^(0+128),w
  4895     07C1  0236               	subwf	sprintf@prec^(0+128),w
  4896     07C2                     u5375:
  4897     07C2  1803               	skipnc
  4898     07C3  2FC5               	goto	u5371
  4899     07C4  2FC6               	goto	u5370
  4900     07C5                     u5371:
  4901     07C5  2FC6               	goto	l3443
  4902     07C6                     u5370:
  4903     07C6                     l3441:
  4904     07C6                     l3443:
  4905                           
  4906                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  4907     07C6  3003               	movlw	3
  4908     07C7  1683               	bsf	3,5	;RP0=1, select bank1
  4909     07C8  1303               	bcf	3,6	;RP1=0, select bank1
  4910     07C9  052A               	andwf	sprintf@flag^(0+128),w
  4911     07CA  00A0               	movwf	??_sprintf^(0+128)
  4912     07CB  3000               	movlw	0
  4913     07CC  052B               	andwf	(sprintf@flag+1)^(0+128),w
  4914     07CD  00A1               	movwf	(??_sprintf+1)^(0+128)
  4915     07CE  0820               	movf	??_sprintf^(0+128),w
  4916     07CF  0421               	iorwf	(??_sprintf^(0+128)+1),w
  4917     07D0  1903               	btfsc	3,2
  4918     07D1  2FD3               	goto	u5381
  4919     07D2  2FD4               	goto	u5380
  4920     07D3                     u5381:
  4921     07D3  2FDD               	goto	l3449
  4922     07D4                     u5380:
  4923     07D4                     l3445:
  4924                           
  4925                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4926     07D4  0838               	movf	sprintf@sp^(0+128),w
  4927     07D5  0084               	movwf	4
  4928     07D6  302D               	movlw	45
  4929     07D7  1383               	bcf	3,7	;select IRP bank0
  4930     07D8  0080               	movwf	0
  4931     07D9                     l3447:
  4932     07D9  3001               	movlw	1
  4933     07DA  00FF               	movwf	btemp+1
  4934     07DB  087F               	movf	btemp+1,w
  4935     07DC  07B8               	addwf	sprintf@sp^(0+128),f
  4936     07DD                     l3449:
  4937                           
  4938                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4939     07DD  3001               	movlw	1
  4940     07DE  1283               	bcf	3,5	;RP0=0, select bank0
  4941     07DF  1303               	bcf	3,6	;RP1=0, select bank0
  4942     07E0  07EA               	addwf	sprintf@f,f
  4943     07E1  30FF               	movlw	-1
  4944     07E2  076A               	addwf	sprintf@f,w
  4945     07E3  0084               	movwf	4
  4946     07E4  120A  158A  200A  120A  118A  	fcall	stringdir
  4947     07E9  1683               	bsf	3,5	;RP0=1, select bank1
  4948     07EA  1303               	bcf	3,6	;RP1=0, select bank1
  4949     07EB  00BD               	movwf	sprintf@c^(0+128)
  4950     07EC  083D               	movf	sprintf@c^(0+128),w
  4951     07ED  1D03               	btfss	3,2
  4952     07EE  2FF0               	goto	u5391
  4953     07EF  2FF1               	goto	u5390
  4954     07F0                     u5391:
  4955     07F0  29A2               	goto	l3251
  4956     07F1                     u5390:
  4957     07F1                     l3451:
  4958                           
  4959                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4960     07F1  0838               	movf	sprintf@sp^(0+128),w
  4961     07F2  0084               	movwf	4
  4962     07F3  1383               	bcf	3,7	;select IRP bank0
  4963     07F4  0180               	clrf	0
  4964     07F5                     l323:
  4965     07F5  0008               	return
  4966     07F6                     __end_of_sprintf:
  4967                           
  4968                           	psect	text17
  4969     0CA1                     __ptext17:	
  4970 ;; *************** function _scale *****************
  4971 ;; Defined at:
  4972 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;  scl             1    wreg     char 
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;  scl             1   44[BANK0 ] char 
  4977 ;; Return value:  Size  Location     Type
  4978 ;;                  4   26[BANK0 ] char 
  4979 ;; Registers used:
  4980 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4986 ;;      Params:         0       4       0       0       0
  4987 ;;      Locals:         0       5       0       0       0
  4988 ;;      Temps:          0      10       0       0       0
  4989 ;;      Totals:         0      19       0       0       0
  4990 ;;Total ram usage:       19 bytes
  4991 ;; Hardware stack levels used: 1
  4992 ;; Hardware stack levels required when called: 2
  4993 ;; This function calls:
  4994 ;;		___awdiv
  4995 ;;		___awmod
  4996 ;;		___flmul
  4997 ;; This function is called by:
  4998 ;;		_sprintf
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002     0CA1                     _scale:	
  5003                           ;psect for function _scale
  5004                           
  5005                           
  5006                           ;incstack = 0
  5007                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5008                           ;scale@scl stored from wreg
  5009     0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  5010     0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  5011     0CA3  00CC               	movwf	scale@scl
  5012     0CA4                     l2855:
  5013                           
  5014                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  5015     0CA4  1FCC               	btfss	scale@scl,7
  5016     0CA5  2CA7               	goto	u4061
  5017     0CA6  2CA8               	goto	u4060
  5018     0CA7                     u4061:
  5019     0CA7  2E55               	goto	l2877
  5020     0CA8                     u4060:
  5021     0CA8                     l2857:
  5022                           
  5023                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  5024     0CA8  09CC               	comf	scale@scl,f
  5025     0CA9  0ACC               	incf	scale@scl,f
  5026     0CAA                     l2859:
  5027                           
  5028                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  5029     0CAA  084C               	movf	scale@scl,w
  5030     0CAB  3A80               	xorlw	128
  5031     0CAC  3E12               	addlw	-238
  5032     0CAD  1C03               	skipc
  5033     0CAE  2CB0               	goto	u4071
  5034     0CAF  2CB1               	goto	u4070
  5035     0CB0                     u4071:
  5036     0CB0  2D99               	goto	l2867
  5037     0CB1                     u4070:
  5038     0CB1                     l2861:
  5039                           
  5040                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  5041     0CB1  300A               	movlw	10
  5042     0CB2  00F6               	movwf	___awdiv@divisor
  5043     0CB3  3000               	movlw	0
  5044     0CB4  00F7               	movwf	___awdiv@divisor+1
  5045     0CB5  084C               	movf	scale@scl,w
  5046     0CB6  00F2               	movwf	___awmod@dividend
  5047     0CB7  01F3               	clrf	___awmod@dividend+1
  5048     0CB8  1BF2               	btfsc	___awmod@dividend,7
  5049     0CB9  03F3               	decf	___awmod@dividend+1,f
  5050     0CBA  3064               	movlw	100
  5051     0CBB  00F0               	movwf	___awmod@divisor
  5052     0CBC  3000               	movlw	0
  5053     0CBD  00F1               	movwf	___awmod@divisor+1
  5054     0CBE  160A  158A  2662  120A  158A  	fcall	___awmod
  5055     0CC3  0871               	movf	?___awmod+1,w
  5056     0CC4  00F9               	movwf	___awdiv@dividend+1
  5057     0CC5  0870               	movf	?___awmod,w
  5058     0CC6  00F8               	movwf	___awdiv@dividend
  5059     0CC7  160A  158A  2721  120A  158A  	fcall	___awdiv
  5060     0CCC  0876               	movf	?___awdiv,w
  5061     0CCD  1283               	bcf	3,5	;RP0=0, select bank0
  5062     0CCE  1303               	bcf	3,6	;RP1=0, select bank0
  5063     0CCF  00BE               	movwf	??_scale
  5064     0CD0  3001               	movlw	1
  5065     0CD1                     u4085:
  5066     0CD1  1003               	clrc
  5067     0CD2  0DBE               	rlf	??_scale,f
  5068     0CD3  3EFF               	addlw	-1
  5069     0CD4  1D03               	skipz
  5070     0CD5  2CD1               	goto	u4085
  5071     0CD6  1003               	clrc
  5072     0CD7  0D3E               	rlf	??_scale,w
  5073     0CD8  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5074     0CD9  0084               	movwf	4
  5075     0CDA  120A  158A  200A  120A  158A  	fcall	stringdir
  5076     0CDF  00BF               	movwf	??_scale+1
  5077     0CE0  120A  158A  200A  120A  158A  	fcall	stringdir
  5078     0CE5  00C0               	movwf	??_scale+2
  5079     0CE6  120A  158A  200A  120A  158A  	fcall	stringdir
  5080     0CEB  00C1               	movwf	??_scale+3
  5081     0CEC  120A  158A  200A  120A  158A  	fcall	stringdir
  5082     0CF1  00C2               	movwf	??_scale+4
  5083     0CF2  0842               	movf	??_scale+4,w
  5084     0CF3  00A3               	movwf	___flmul@b+3
  5085     0CF4  0841               	movf	??_scale+3,w
  5086     0CF5  00A2               	movwf	___flmul@b+2
  5087     0CF6  0840               	movf	??_scale+2,w
  5088     0CF7  00A1               	movwf	___flmul@b+1
  5089     0CF8  083F               	movf	??_scale+1,w
  5090     0CF9  00A0               	movwf	___flmul@b
  5091     0CFA  3064               	movlw	100
  5092     0CFB  00F6               	movwf	___awdiv@divisor
  5093     0CFC  3000               	movlw	0
  5094     0CFD  00F7               	movwf	___awdiv@divisor+1
  5095     0CFE  084C               	movf	scale@scl,w
  5096     0CFF  00F8               	movwf	___awdiv@dividend
  5097     0D00  01F9               	clrf	___awdiv@dividend+1
  5098     0D01  1BF8               	btfsc	___awdiv@dividend,7
  5099     0D02  03F9               	decf	___awdiv@dividend+1,f
  5100     0D03  160A  158A  2721  120A  158A  	fcall	___awdiv
  5101     0D08  0876               	movf	?___awdiv,w
  5102     0D09  1283               	bcf	3,5	;RP0=0, select bank0
  5103     0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  5104     0D0B  00C3               	movwf	??_scale+5
  5105     0D0C  3001               	movlw	1
  5106     0D0D                     u4095:
  5107     0D0D  1003               	clrc
  5108     0D0E  0DC3               	rlf	??_scale+5,f
  5109     0D0F  3EFF               	addlw	-1
  5110     0D10  1D03               	skipz
  5111     0D11  2D0D               	goto	u4095
  5112     0D12  1003               	clrc
  5113     0D13  0D43               	rlf	??_scale+5,w
  5114     0D14  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5115     0D15  0084               	movwf	4
  5116     0D16  120A  158A  200A  120A  158A  	fcall	stringdir
  5117     0D1B  00C4               	movwf	??_scale+6
  5118     0D1C  120A  158A  200A  120A  158A  	fcall	stringdir
  5119     0D21  00C5               	movwf	??_scale+7
  5120     0D22  120A  158A  200A  120A  158A  	fcall	stringdir
  5121     0D27  00C6               	movwf	??_scale+8
  5122     0D28  120A  158A  200A  120A  158A  	fcall	stringdir
  5123     0D2D  00C7               	movwf	??_scale+9
  5124     0D2E  0847               	movf	??_scale+9,w
  5125     0D2F  00A7               	movwf	___flmul@a+3
  5126     0D30  0846               	movf	??_scale+8,w
  5127     0D31  00A6               	movwf	___flmul@a+2
  5128     0D32  0845               	movf	??_scale+7,w
  5129     0D33  00A5               	movwf	___flmul@a+1
  5130     0D34  0844               	movf	??_scale+6,w
  5131     0D35  00A4               	movwf	___flmul@a
  5132     0D36  120A  158A  215C  120A  158A  	fcall	___flmul
  5133     0D3B  1283               	bcf	3,5	;RP0=0, select bank0
  5134     0D3C  1303               	bcf	3,6	;RP1=0, select bank0
  5135     0D3D  0823               	movf	?___flmul+3,w
  5136     0D3E  00CB               	movwf	_scale$979+3
  5137     0D3F  0822               	movf	?___flmul+2,w
  5138     0D40  00CA               	movwf	_scale$979+2
  5139     0D41  0821               	movf	?___flmul+1,w
  5140     0D42  00C9               	movwf	_scale$979+1
  5141     0D43  0820               	movf	?___flmul,w
  5142     0D44  00C8               	movwf	_scale$979
  5143                           
  5144                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  5145     0D45  300A               	movlw	10
  5146     0D46  00F0               	movwf	___awmod@divisor
  5147     0D47  3000               	movlw	0
  5148     0D48  00F1               	movwf	___awmod@divisor+1
  5149     0D49  084C               	movf	scale@scl,w
  5150     0D4A  00F2               	movwf	___awmod@dividend
  5151     0D4B  01F3               	clrf	___awmod@dividend+1
  5152     0D4C  1BF2               	btfsc	___awmod@dividend,7
  5153     0D4D  03F3               	decf	___awmod@dividend+1,f
  5154     0D4E  160A  158A  2662  120A  158A  	fcall	___awmod
  5155     0D53  0870               	movf	?___awmod,w
  5156     0D54  1283               	bcf	3,5	;RP0=0, select bank0
  5157     0D55  1303               	bcf	3,6	;RP1=0, select bank0
  5158     0D56  00BE               	movwf	??_scale
  5159     0D57  3001               	movlw	1
  5160     0D58                     u4105:
  5161     0D58  1003               	clrc
  5162     0D59  0DBE               	rlf	??_scale,f
  5163     0D5A  3EFF               	addlw	-1
  5164     0D5B  1D03               	skipz
  5165     0D5C  2D58               	goto	u4105
  5166     0D5D  1003               	clrc
  5167     0D5E  0D3E               	rlf	??_scale,w
  5168     0D5F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5169     0D60  0084               	movwf	4
  5170     0D61  120A  158A  200A  120A  158A  	fcall	stringdir
  5171     0D66  00BF               	movwf	??_scale+1
  5172     0D67  120A  158A  200A  120A  158A  	fcall	stringdir
  5173     0D6C  00C0               	movwf	??_scale+2
  5174     0D6D  120A  158A  200A  120A  158A  	fcall	stringdir
  5175     0D72  00C1               	movwf	??_scale+3
  5176     0D73  120A  158A  200A  120A  158A  	fcall	stringdir
  5177     0D78  00C2               	movwf	??_scale+4
  5178     0D79  0842               	movf	??_scale+4,w
  5179     0D7A  00A3               	movwf	___flmul@b+3
  5180     0D7B  0841               	movf	??_scale+3,w
  5181     0D7C  00A2               	movwf	___flmul@b+2
  5182     0D7D  0840               	movf	??_scale+2,w
  5183     0D7E  00A1               	movwf	___flmul@b+1
  5184     0D7F  083F               	movf	??_scale+1,w
  5185     0D80  00A0               	movwf	___flmul@b
  5186     0D81  084B               	movf	_scale$979+3,w
  5187     0D82  00A7               	movwf	___flmul@a+3
  5188     0D83  084A               	movf	_scale$979+2,w
  5189     0D84  00A6               	movwf	___flmul@a+2
  5190     0D85  0849               	movf	_scale$979+1,w
  5191     0D86  00A5               	movwf	___flmul@a+1
  5192     0D87  0848               	movf	_scale$979,w
  5193     0D88  00A4               	movwf	___flmul@a
  5194     0D89  120A  158A  215C  120A  158A  	fcall	___flmul
  5195     0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  5196     0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  5197     0D90  0823               	movf	?___flmul+3,w
  5198     0D91  00BD               	movwf	?_scale+3
  5199     0D92  0822               	movf	?___flmul+2,w
  5200     0D93  00BC               	movwf	?_scale+2
  5201     0D94  0821               	movf	?___flmul+1,w
  5202     0D95  00BB               	movwf	?_scale+1
  5203     0D96  0820               	movf	?___flmul,w
  5204     0D97  00BA               	movwf	?_scale
  5205     0D98  2FFF               	goto	l257
  5206     0D99                     l2867:
  5207     0D99  084C               	movf	scale@scl,w
  5208     0D9A  3A80               	xorlw	128
  5209     0D9B  3E75               	addlw	-139
  5210     0D9C  1C03               	skipc
  5211     0D9D  2D9F               	goto	u4111
  5212     0D9E  2DA0               	goto	u4110
  5213     0D9F                     u4111:
  5214     0D9F  2E28               	goto	l2873
  5215     0DA0                     u4110:
  5216     0DA0                     l2869:
  5217                           
  5218                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  5219     0DA0  300A               	movlw	10
  5220     0DA1  00F0               	movwf	___awmod@divisor
  5221     0DA2  3000               	movlw	0
  5222     0DA3  00F1               	movwf	___awmod@divisor+1
  5223     0DA4  084C               	movf	scale@scl,w
  5224     0DA5  00F2               	movwf	___awmod@dividend
  5225     0DA6  01F3               	clrf	___awmod@dividend+1
  5226     0DA7  1BF2               	btfsc	___awmod@dividend,7
  5227     0DA8  03F3               	decf	___awmod@dividend+1,f
  5228     0DA9  160A  158A  2662  120A  158A  	fcall	___awmod
  5229     0DAE  0870               	movf	?___awmod,w
  5230     0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  5231     0DB0  1303               	bcf	3,6	;RP1=0, select bank0
  5232     0DB1  00BE               	movwf	??_scale
  5233     0DB2  3001               	movlw	1
  5234     0DB3                     u4125:
  5235     0DB3  1003               	clrc
  5236     0DB4  0DBE               	rlf	??_scale,f
  5237     0DB5  3EFF               	addlw	-1
  5238     0DB6  1D03               	skipz
  5239     0DB7  2DB3               	goto	u4125
  5240     0DB8  1003               	clrc
  5241     0DB9  0D3E               	rlf	??_scale,w
  5242     0DBA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5243     0DBB  0084               	movwf	4
  5244     0DBC  120A  158A  200A  120A  158A  	fcall	stringdir
  5245     0DC1  00BF               	movwf	??_scale+1
  5246     0DC2  120A  158A  200A  120A  158A  	fcall	stringdir
  5247     0DC7  00C0               	movwf	??_scale+2
  5248     0DC8  120A  158A  200A  120A  158A  	fcall	stringdir
  5249     0DCD  00C1               	movwf	??_scale+3
  5250     0DCE  120A  158A  200A  120A  158A  	fcall	stringdir
  5251     0DD3  00C2               	movwf	??_scale+4
  5252     0DD4  0842               	movf	??_scale+4,w
  5253     0DD5  00A3               	movwf	___flmul@b+3
  5254     0DD6  0841               	movf	??_scale+3,w
  5255     0DD7  00A2               	movwf	___flmul@b+2
  5256     0DD8  0840               	movf	??_scale+2,w
  5257     0DD9  00A1               	movwf	___flmul@b+1
  5258     0DDA  083F               	movf	??_scale+1,w
  5259     0DDB  00A0               	movwf	___flmul@b
  5260     0DDC  300A               	movlw	10
  5261     0DDD  00F6               	movwf	___awdiv@divisor
  5262     0DDE  3000               	movlw	0
  5263     0DDF  00F7               	movwf	___awdiv@divisor+1
  5264     0DE0  084C               	movf	scale@scl,w
  5265     0DE1  00F8               	movwf	___awdiv@dividend
  5266     0DE2  01F9               	clrf	___awdiv@dividend+1
  5267     0DE3  1BF8               	btfsc	___awdiv@dividend,7
  5268     0DE4  03F9               	decf	___awdiv@dividend+1,f
  5269     0DE5  160A  158A  2721  120A  158A  	fcall	___awdiv
  5270     0DEA  0876               	movf	?___awdiv,w
  5271     0DEB  1283               	bcf	3,5	;RP0=0, select bank0
  5272     0DEC  1303               	bcf	3,6	;RP1=0, select bank0
  5273     0DED  00C3               	movwf	??_scale+5
  5274     0DEE  3001               	movlw	1
  5275     0DEF                     u4135:
  5276     0DEF  1003               	clrc
  5277     0DF0  0DC3               	rlf	??_scale+5,f
  5278     0DF1  3EFF               	addlw	-1
  5279     0DF2  1D03               	skipz
  5280     0DF3  2DEF               	goto	u4135
  5281     0DF4  1003               	clrc
  5282     0DF5  0D43               	rlf	??_scale+5,w
  5283     0DF6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5284     0DF7  0084               	movwf	4
  5285     0DF8  120A  158A  200A  120A  158A  	fcall	stringdir
  5286     0DFD  00C4               	movwf	??_scale+6
  5287     0DFE  120A  158A  200A  120A  158A  	fcall	stringdir
  5288     0E03  00C5               	movwf	??_scale+7
  5289     0E04  120A  158A  200A  120A  158A  	fcall	stringdir
  5290     0E09  00C6               	movwf	??_scale+8
  5291     0E0A  120A  158A  200A  120A  158A  	fcall	stringdir
  5292     0E0F  00C7               	movwf	??_scale+9
  5293     0E10  0847               	movf	??_scale+9,w
  5294     0E11  00A7               	movwf	___flmul@a+3
  5295     0E12  0846               	movf	??_scale+8,w
  5296     0E13  00A6               	movwf	___flmul@a+2
  5297     0E14  0845               	movf	??_scale+7,w
  5298     0E15  00A5               	movwf	___flmul@a+1
  5299     0E16  0844               	movf	??_scale+6,w
  5300     0E17  00A4               	movwf	___flmul@a
  5301     0E18  120A  158A  215C  120A  158A  	fcall	___flmul
  5302     0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  5303     0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  5304     0E1F  0823               	movf	?___flmul+3,w
  5305     0E20  00BD               	movwf	?_scale+3
  5306     0E21  0822               	movf	?___flmul+2,w
  5307     0E22  00BC               	movwf	?_scale+2
  5308     0E23  0821               	movf	?___flmul+1,w
  5309     0E24  00BB               	movwf	?_scale+1
  5310     0E25  0820               	movf	?___flmul,w
  5311     0E26  00BA               	movwf	?_scale
  5312     0E27  2FFF               	goto	l257
  5313     0E28                     l2873:
  5314                           
  5315                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  5316     0E28  084C               	movf	scale@scl,w
  5317     0E29  00BE               	movwf	??_scale
  5318     0E2A  3001               	movlw	1
  5319     0E2B                     u4145:
  5320     0E2B  1003               	clrc
  5321     0E2C  0DBE               	rlf	??_scale,f
  5322     0E2D  3EFF               	addlw	-1
  5323     0E2E  1D03               	skipz
  5324     0E2F  2E2B               	goto	u4145
  5325     0E30  1003               	clrc
  5326     0E31  0D3E               	rlf	??_scale,w
  5327     0E32  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5328     0E33  0084               	movwf	4
  5329     0E34  120A  158A  200A  120A  158A  	fcall	stringdir
  5330     0E39  00BF               	movwf	??_scale+1
  5331     0E3A  120A  158A  200A  120A  158A  	fcall	stringdir
  5332     0E3F  00C0               	movwf	??_scale+2
  5333     0E40  120A  158A  200A  120A  158A  	fcall	stringdir
  5334     0E45  00C1               	movwf	??_scale+3
  5335     0E46  120A  158A  200A  120A  158A  	fcall	stringdir
  5336     0E4B  00C2               	movwf	??_scale+4
  5337     0E4C  0842               	movf	??_scale+4,w
  5338     0E4D  00BD               	movwf	?_scale+3
  5339     0E4E  0841               	movf	??_scale+3,w
  5340     0E4F  00BC               	movwf	?_scale+2
  5341     0E50  0840               	movf	??_scale+2,w
  5342     0E51  00BB               	movwf	?_scale+1
  5343     0E52  083F               	movf	??_scale+1,w
  5344     0E53  00BA               	movwf	?_scale
  5345     0E54  2FFF               	goto	l257
  5346     0E55                     l2877:
  5347                           
  5348                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  5349     0E55  084C               	movf	scale@scl,w
  5350     0E56  3A80               	xorlw	128
  5351     0E57  3E12               	addlw	-238
  5352     0E58  1C03               	skipc
  5353     0E59  2E5B               	goto	u4151
  5354     0E5A  2E5C               	goto	u4150
  5355     0E5B                     u4151:
  5356     0E5B  2F44               	goto	l2885
  5357     0E5C                     u4150:
  5358     0E5C                     l2879:
  5359                           
  5360                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  5361     0E5C  300A               	movlw	10
  5362     0E5D  00F6               	movwf	___awdiv@divisor
  5363     0E5E  3000               	movlw	0
  5364     0E5F  00F7               	movwf	___awdiv@divisor+1
  5365     0E60  084C               	movf	scale@scl,w
  5366     0E61  00F2               	movwf	___awmod@dividend
  5367     0E62  01F3               	clrf	___awmod@dividend+1
  5368     0E63  1BF2               	btfsc	___awmod@dividend,7
  5369     0E64  03F3               	decf	___awmod@dividend+1,f
  5370     0E65  3064               	movlw	100
  5371     0E66  00F0               	movwf	___awmod@divisor
  5372     0E67  3000               	movlw	0
  5373     0E68  00F1               	movwf	___awmod@divisor+1
  5374     0E69  160A  158A  2662  120A  158A  	fcall	___awmod
  5375     0E6E  0871               	movf	?___awmod+1,w
  5376     0E6F  00F9               	movwf	___awdiv@dividend+1
  5377     0E70  0870               	movf	?___awmod,w
  5378     0E71  00F8               	movwf	___awdiv@dividend
  5379     0E72  160A  158A  2721  120A  158A  	fcall	___awdiv
  5380     0E77  0876               	movf	?___awdiv,w
  5381     0E78  1283               	bcf	3,5	;RP0=0, select bank0
  5382     0E79  1303               	bcf	3,6	;RP1=0, select bank0
  5383     0E7A  00BE               	movwf	??_scale
  5384     0E7B  3001               	movlw	1
  5385     0E7C                     u4165:
  5386     0E7C  1003               	clrc
  5387     0E7D  0DBE               	rlf	??_scale,f
  5388     0E7E  3EFF               	addlw	-1
  5389     0E7F  1D03               	skipz
  5390     0E80  2E7C               	goto	u4165
  5391     0E81  1003               	clrc
  5392     0E82  0D3E               	rlf	??_scale,w
  5393     0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  5394     0E84  0084               	movwf	4
  5395     0E85  120A  158A  200A  120A  158A  	fcall	stringdir
  5396     0E8A  00BF               	movwf	??_scale+1
  5397     0E8B  120A  158A  200A  120A  158A  	fcall	stringdir
  5398     0E90  00C0               	movwf	??_scale+2
  5399     0E91  120A  158A  200A  120A  158A  	fcall	stringdir
  5400     0E96  00C1               	movwf	??_scale+3
  5401     0E97  120A  158A  200A  120A  158A  	fcall	stringdir
  5402     0E9C  00C2               	movwf	??_scale+4
  5403     0E9D  0842               	movf	??_scale+4,w
  5404     0E9E  00A3               	movwf	___flmul@b+3
  5405     0E9F  0841               	movf	??_scale+3,w
  5406     0EA0  00A2               	movwf	___flmul@b+2
  5407     0EA1  0840               	movf	??_scale+2,w
  5408     0EA2  00A1               	movwf	___flmul@b+1
  5409     0EA3  083F               	movf	??_scale+1,w
  5410     0EA4  00A0               	movwf	___flmul@b
  5411     0EA5  3064               	movlw	100
  5412     0EA6  00F6               	movwf	___awdiv@divisor
  5413     0EA7  3000               	movlw	0
  5414     0EA8  00F7               	movwf	___awdiv@divisor+1
  5415     0EA9  084C               	movf	scale@scl,w
  5416     0EAA  00F8               	movwf	___awdiv@dividend
  5417     0EAB  01F9               	clrf	___awdiv@dividend+1
  5418     0EAC  1BF8               	btfsc	___awdiv@dividend,7
  5419     0EAD  03F9               	decf	___awdiv@dividend+1,f
  5420     0EAE  160A  158A  2721  120A  158A  	fcall	___awdiv
  5421     0EB3  0876               	movf	?___awdiv,w
  5422     0EB4  1283               	bcf	3,5	;RP0=0, select bank0
  5423     0EB5  1303               	bcf	3,6	;RP1=0, select bank0
  5424     0EB6  00C3               	movwf	??_scale+5
  5425     0EB7  3001               	movlw	1
  5426     0EB8                     u4175:
  5427     0EB8  1003               	clrc
  5428     0EB9  0DC3               	rlf	??_scale+5,f
  5429     0EBA  3EFF               	addlw	-1
  5430     0EBB  1D03               	skipz
  5431     0EBC  2EB8               	goto	u4175
  5432     0EBD  1003               	clrc
  5433     0EBE  0D43               	rlf	??_scale+5,w
  5434     0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  5435     0EC0  0084               	movwf	4
  5436     0EC1  120A  158A  200A  120A  158A  	fcall	stringdir
  5437     0EC6  00C4               	movwf	??_scale+6
  5438     0EC7  120A  158A  200A  120A  158A  	fcall	stringdir
  5439     0ECC  00C5               	movwf	??_scale+7
  5440     0ECD  120A  158A  200A  120A  158A  	fcall	stringdir
  5441     0ED2  00C6               	movwf	??_scale+8
  5442     0ED3  120A  158A  200A  120A  158A  	fcall	stringdir
  5443     0ED8  00C7               	movwf	??_scale+9
  5444     0ED9  0847               	movf	??_scale+9,w
  5445     0EDA  00A7               	movwf	___flmul@a+3
  5446     0EDB  0846               	movf	??_scale+8,w
  5447     0EDC  00A6               	movwf	___flmul@a+2
  5448     0EDD  0845               	movf	??_scale+7,w
  5449     0EDE  00A5               	movwf	___flmul@a+1
  5450     0EDF  0844               	movf	??_scale+6,w
  5451     0EE0  00A4               	movwf	___flmul@a
  5452     0EE1  120A  158A  215C  120A  158A  	fcall	___flmul
  5453     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  5454     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  5455     0EE8  0823               	movf	?___flmul+3,w
  5456     0EE9  00CB               	movwf	_scale$979+3
  5457     0EEA  0822               	movf	?___flmul+2,w
  5458     0EEB  00CA               	movwf	_scale$979+2
  5459     0EEC  0821               	movf	?___flmul+1,w
  5460     0EED  00C9               	movwf	_scale$979+1
  5461     0EEE  0820               	movf	?___flmul,w
  5462     0EEF  00C8               	movwf	_scale$979
  5463                           
  5464                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  5465     0EF0  300A               	movlw	10
  5466     0EF1  00F0               	movwf	___awmod@divisor
  5467     0EF2  3000               	movlw	0
  5468     0EF3  00F1               	movwf	___awmod@divisor+1
  5469     0EF4  084C               	movf	scale@scl,w
  5470     0EF5  00F2               	movwf	___awmod@dividend
  5471     0EF6  01F3               	clrf	___awmod@dividend+1
  5472     0EF7  1BF2               	btfsc	___awmod@dividend,7
  5473     0EF8  03F3               	decf	___awmod@dividend+1,f
  5474     0EF9  160A  158A  2662  120A  158A  	fcall	___awmod
  5475     0EFE  0870               	movf	?___awmod,w
  5476     0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  5477     0F00  1303               	bcf	3,6	;RP1=0, select bank0
  5478     0F01  00BE               	movwf	??_scale
  5479     0F02  3001               	movlw	1
  5480     0F03                     u4185:
  5481     0F03  1003               	clrc
  5482     0F04  0DBE               	rlf	??_scale,f
  5483     0F05  3EFF               	addlw	-1
  5484     0F06  1D03               	skipz
  5485     0F07  2F03               	goto	u4185
  5486     0F08  1003               	clrc
  5487     0F09  0D3E               	rlf	??_scale,w
  5488     0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5489     0F0B  0084               	movwf	4
  5490     0F0C  120A  158A  200A  120A  158A  	fcall	stringdir
  5491     0F11  00BF               	movwf	??_scale+1
  5492     0F12  120A  158A  200A  120A  158A  	fcall	stringdir
  5493     0F17  00C0               	movwf	??_scale+2
  5494     0F18  120A  158A  200A  120A  158A  	fcall	stringdir
  5495     0F1D  00C1               	movwf	??_scale+3
  5496     0F1E  120A  158A  200A  120A  158A  	fcall	stringdir
  5497     0F23  00C2               	movwf	??_scale+4
  5498     0F24  0842               	movf	??_scale+4,w
  5499     0F25  00A3               	movwf	___flmul@b+3
  5500     0F26  0841               	movf	??_scale+3,w
  5501     0F27  00A2               	movwf	___flmul@b+2
  5502     0F28  0840               	movf	??_scale+2,w
  5503     0F29  00A1               	movwf	___flmul@b+1
  5504     0F2A  083F               	movf	??_scale+1,w
  5505     0F2B  00A0               	movwf	___flmul@b
  5506     0F2C  084B               	movf	_scale$979+3,w
  5507     0F2D  00A7               	movwf	___flmul@a+3
  5508     0F2E  084A               	movf	_scale$979+2,w
  5509     0F2F  00A6               	movwf	___flmul@a+2
  5510     0F30  0849               	movf	_scale$979+1,w
  5511     0F31  00A5               	movwf	___flmul@a+1
  5512     0F32  0848               	movf	_scale$979,w
  5513     0F33  00A4               	movwf	___flmul@a
  5514     0F34  120A  158A  215C  120A  158A  	fcall	___flmul
  5515     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  5516     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  5517     0F3B  0823               	movf	?___flmul+3,w
  5518     0F3C  00BD               	movwf	?_scale+3
  5519     0F3D  0822               	movf	?___flmul+2,w
  5520     0F3E  00BC               	movwf	?_scale+2
  5521     0F3F  0821               	movf	?___flmul+1,w
  5522     0F40  00BB               	movwf	?_scale+1
  5523     0F41  0820               	movf	?___flmul,w
  5524     0F42  00BA               	movwf	?_scale
  5525     0F43  2FFF               	goto	l257
  5526     0F44                     l2885:
  5527     0F44  084C               	movf	scale@scl,w
  5528     0F45  3A80               	xorlw	128
  5529     0F46  3E75               	addlw	-139
  5530     0F47  1C03               	skipc
  5531     0F48  2F4A               	goto	u4191
  5532     0F49  2F4B               	goto	u4190
  5533     0F4A                     u4191:
  5534     0F4A  2FD3               	goto	l2891
  5535     0F4B                     u4190:
  5536     0F4B                     l2887:
  5537                           
  5538                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  5539     0F4B  300A               	movlw	10
  5540     0F4C  00F0               	movwf	___awmod@divisor
  5541     0F4D  3000               	movlw	0
  5542     0F4E  00F1               	movwf	___awmod@divisor+1
  5543     0F4F  084C               	movf	scale@scl,w
  5544     0F50  00F2               	movwf	___awmod@dividend
  5545     0F51  01F3               	clrf	___awmod@dividend+1
  5546     0F52  1BF2               	btfsc	___awmod@dividend,7
  5547     0F53  03F3               	decf	___awmod@dividend+1,f
  5548     0F54  160A  158A  2662  120A  158A  	fcall	___awmod
  5549     0F59  0870               	movf	?___awmod,w
  5550     0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  5551     0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  5552     0F5C  00BE               	movwf	??_scale
  5553     0F5D  3001               	movlw	1
  5554     0F5E                     u4205:
  5555     0F5E  1003               	clrc
  5556     0F5F  0DBE               	rlf	??_scale,f
  5557     0F60  3EFF               	addlw	-1
  5558     0F61  1D03               	skipz
  5559     0F62  2F5E               	goto	u4205
  5560     0F63  1003               	clrc
  5561     0F64  0D3E               	rlf	??_scale,w
  5562     0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5563     0F66  0084               	movwf	4
  5564     0F67  120A  158A  200A  120A  158A  	fcall	stringdir
  5565     0F6C  00BF               	movwf	??_scale+1
  5566     0F6D  120A  158A  200A  120A  158A  	fcall	stringdir
  5567     0F72  00C0               	movwf	??_scale+2
  5568     0F73  120A  158A  200A  120A  158A  	fcall	stringdir
  5569     0F78  00C1               	movwf	??_scale+3
  5570     0F79  120A  158A  200A  120A  158A  	fcall	stringdir
  5571     0F7E  00C2               	movwf	??_scale+4
  5572     0F7F  0842               	movf	??_scale+4,w
  5573     0F80  00A3               	movwf	___flmul@b+3
  5574     0F81  0841               	movf	??_scale+3,w
  5575     0F82  00A2               	movwf	___flmul@b+2
  5576     0F83  0840               	movf	??_scale+2,w
  5577     0F84  00A1               	movwf	___flmul@b+1
  5578     0F85  083F               	movf	??_scale+1,w
  5579     0F86  00A0               	movwf	___flmul@b
  5580     0F87  300A               	movlw	10
  5581     0F88  00F6               	movwf	___awdiv@divisor
  5582     0F89  3000               	movlw	0
  5583     0F8A  00F7               	movwf	___awdiv@divisor+1
  5584     0F8B  084C               	movf	scale@scl,w
  5585     0F8C  00F8               	movwf	___awdiv@dividend
  5586     0F8D  01F9               	clrf	___awdiv@dividend+1
  5587     0F8E  1BF8               	btfsc	___awdiv@dividend,7
  5588     0F8F  03F9               	decf	___awdiv@dividend+1,f
  5589     0F90  160A  158A  2721  120A  158A  	fcall	___awdiv
  5590     0F95  0876               	movf	?___awdiv,w
  5591     0F96  1283               	bcf	3,5	;RP0=0, select bank0
  5592     0F97  1303               	bcf	3,6	;RP1=0, select bank0
  5593     0F98  00C3               	movwf	??_scale+5
  5594     0F99  3001               	movlw	1
  5595     0F9A                     u4215:
  5596     0F9A  1003               	clrc
  5597     0F9B  0DC3               	rlf	??_scale+5,f
  5598     0F9C  3EFF               	addlw	-1
  5599     0F9D  1D03               	skipz
  5600     0F9E  2F9A               	goto	u4215
  5601     0F9F  1003               	clrc
  5602     0FA0  0D43               	rlf	??_scale+5,w
  5603     0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  5604     0FA2  0084               	movwf	4
  5605     0FA3  120A  158A  200A  120A  158A  	fcall	stringdir
  5606     0FA8  00C4               	movwf	??_scale+6
  5607     0FA9  120A  158A  200A  120A  158A  	fcall	stringdir
  5608     0FAE  00C5               	movwf	??_scale+7
  5609     0FAF  120A  158A  200A  120A  158A  	fcall	stringdir
  5610     0FB4  00C6               	movwf	??_scale+8
  5611     0FB5  120A  158A  200A  120A  158A  	fcall	stringdir
  5612     0FBA  00C7               	movwf	??_scale+9
  5613     0FBB  0847               	movf	??_scale+9,w
  5614     0FBC  00A7               	movwf	___flmul@a+3
  5615     0FBD  0846               	movf	??_scale+8,w
  5616     0FBE  00A6               	movwf	___flmul@a+2
  5617     0FBF  0845               	movf	??_scale+7,w
  5618     0FC0  00A5               	movwf	___flmul@a+1
  5619     0FC1  0844               	movf	??_scale+6,w
  5620     0FC2  00A4               	movwf	___flmul@a
  5621     0FC3  120A  158A  215C  120A  158A  	fcall	___flmul
  5622     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  5623     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  5624     0FCA  0823               	movf	?___flmul+3,w
  5625     0FCB  00BD               	movwf	?_scale+3
  5626     0FCC  0822               	movf	?___flmul+2,w
  5627     0FCD  00BC               	movwf	?_scale+2
  5628     0FCE  0821               	movf	?___flmul+1,w
  5629     0FCF  00BB               	movwf	?_scale+1
  5630     0FD0  0820               	movf	?___flmul,w
  5631     0FD1  00BA               	movwf	?_scale
  5632     0FD2  2FFF               	goto	l257
  5633     0FD3                     l2891:
  5634                           
  5635                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  5636     0FD3  084C               	movf	scale@scl,w
  5637     0FD4  00BE               	movwf	??_scale
  5638     0FD5  3001               	movlw	1
  5639     0FD6                     u4225:
  5640     0FD6  1003               	clrc
  5641     0FD7  0DBE               	rlf	??_scale,f
  5642     0FD8  3EFF               	addlw	-1
  5643     0FD9  1D03               	skipz
  5644     0FDA  2FD6               	goto	u4225
  5645     0FDB  1003               	clrc
  5646     0FDC  0D3E               	rlf	??_scale,w
  5647     0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5648     0FDE  0084               	movwf	4
  5649     0FDF  120A  158A  200A  120A  158A  	fcall	stringdir
  5650     0FE4  00BF               	movwf	??_scale+1
  5651     0FE5  120A  158A  200A  120A  158A  	fcall	stringdir
  5652     0FEA  00C0               	movwf	??_scale+2
  5653     0FEB  120A  158A  200A  120A  158A  	fcall	stringdir
  5654     0FF0  00C1               	movwf	??_scale+3
  5655     0FF1  120A  158A  200A  120A  158A  	fcall	stringdir
  5656     0FF6  00C2               	movwf	??_scale+4
  5657     0FF7  0842               	movf	??_scale+4,w
  5658     0FF8  00BD               	movwf	?_scale+3
  5659     0FF9  0841               	movf	??_scale+3,w
  5660     0FFA  00BC               	movwf	?_scale+2
  5661     0FFB  0840               	movf	??_scale+2,w
  5662     0FFC  00BB               	movwf	?_scale+1
  5663     0FFD  083F               	movf	??_scale+1,w
  5664     0FFE  00BA               	movwf	?_scale
  5665     0FFF                     l257:
  5666     0FFF  0008               	return
  5667     1000                     __end_of_scale:
  5668                           
  5669                           	psect	text18
  5670     1E62                     __ptext18:	
  5671 ;; *************** function ___awmod *****************
  5672 ;; Defined at:
  5673 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;  divisor         2    0[COMMON] int 
  5676 ;;  dividend        2    2[COMMON] int 
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;  sign            1    5[COMMON] unsigned char 
  5679 ;;  counter         1    4[COMMON] unsigned char 
  5680 ;; Return value:  Size  Location     Type
  5681 ;;                  2    0[COMMON] int 
  5682 ;; Registers used:
  5683 ;;		wreg, status,2, status,0, btemp+1
  5684 ;; Tracked objects:
  5685 ;;		On entry : 0/0
  5686 ;;		On exit  : 0/0
  5687 ;;		Unchanged: 0/0
  5688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5689 ;;      Params:         4       0       0       0       0
  5690 ;;      Locals:         2       0       0       0       0
  5691 ;;      Temps:          0       0       0       0       0
  5692 ;;      Totals:         6       0       0       0       0
  5693 ;;Total ram usage:        6 bytes
  5694 ;; Hardware stack levels used: 1
  5695 ;; This function calls:
  5696 ;;		Nothing
  5697 ;; This function is called by:
  5698 ;;		_scale
  5699 ;; This function uses a non-reentrant model
  5700 ;;
  5701                           
  5702     1E62                     ___awmod:	
  5703                           ;psect for function ___awmod
  5704                           
  5705     1E62                     l2389:	
  5706                           ;incstack = 0
  5707                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  5708                           
  5709     1E62  01F5               	clrf	___awmod@sign
  5710     1E63                     l2391:
  5711     1E63  1FF3               	btfss	___awmod@dividend+1,7
  5712     1E64  2E66               	goto	u2921
  5713     1E65  2E67               	goto	u2920
  5714     1E66                     u2921:
  5715     1E66  2E6E               	goto	l2397
  5716     1E67                     u2920:
  5717     1E67                     l2393:
  5718     1E67  09F2               	comf	___awmod@dividend,f
  5719     1E68  09F3               	comf	___awmod@dividend+1,f
  5720     1E69  0AF2               	incf	___awmod@dividend,f
  5721     1E6A  1903               	skipnz
  5722     1E6B  0AF3               	incf	___awmod@dividend+1,f
  5723     1E6C                     l2395:
  5724     1E6C  01F5               	clrf	___awmod@sign
  5725     1E6D  0AF5               	incf	___awmod@sign,f
  5726     1E6E                     l2397:
  5727     1E6E  1FF1               	btfss	___awmod@divisor+1,7
  5728     1E6F  2E71               	goto	u2931
  5729     1E70  2E72               	goto	u2930
  5730     1E71                     u2931:
  5731     1E71  2E77               	goto	l2401
  5732     1E72                     u2930:
  5733     1E72                     l2399:
  5734     1E72  09F0               	comf	___awmod@divisor,f
  5735     1E73  09F1               	comf	___awmod@divisor+1,f
  5736     1E74  0AF0               	incf	___awmod@divisor,f
  5737     1E75  1903               	skipnz
  5738     1E76  0AF1               	incf	___awmod@divisor+1,f
  5739     1E77                     l2401:
  5740     1E77  0870               	movf	___awmod@divisor,w
  5741     1E78  0471               	iorwf	___awmod@divisor+1,w
  5742     1E79  1903               	btfsc	3,2
  5743     1E7A  2E7C               	goto	u2941
  5744     1E7B  2E7D               	goto	u2940
  5745     1E7C                     u2941:
  5746     1E7C  2EAC               	goto	l2419
  5747     1E7D                     u2940:
  5748     1E7D                     l2403:
  5749     1E7D  01F4               	clrf	___awmod@counter
  5750     1E7E  0AF4               	incf	___awmod@counter,f
  5751     1E7F  2E8B               	goto	l2409
  5752     1E80                     l2405:
  5753     1E80  3001               	movlw	1
  5754     1E81                     u2955:
  5755     1E81  1003               	clrc
  5756     1E82  0DF0               	rlf	___awmod@divisor,f
  5757     1E83  0DF1               	rlf	___awmod@divisor+1,f
  5758     1E84  3EFF               	addlw	-1
  5759     1E85  1D03               	skipz
  5760     1E86  2E81               	goto	u2955
  5761     1E87                     l2407:
  5762     1E87  3001               	movlw	1
  5763     1E88  00FF               	movwf	btemp+1
  5764     1E89  087F               	movf	btemp+1,w
  5765     1E8A  07F4               	addwf	___awmod@counter,f
  5766     1E8B                     l2409:
  5767     1E8B  1FF1               	btfss	___awmod@divisor+1,7
  5768     1E8C  2E8E               	goto	u2961
  5769     1E8D  2E8F               	goto	u2960
  5770     1E8E                     u2961:
  5771     1E8E  2E80               	goto	l2405
  5772     1E8F                     u2960:
  5773     1E8F                     l2411:
  5774     1E8F  0871               	movf	___awmod@divisor+1,w
  5775     1E90  0273               	subwf	___awmod@dividend+1,w
  5776     1E91  1D03               	skipz
  5777     1E92  2E95               	goto	u2975
  5778     1E93  0870               	movf	___awmod@divisor,w
  5779     1E94  0272               	subwf	___awmod@dividend,w
  5780     1E95                     u2975:
  5781     1E95  1C03               	skipc
  5782     1E96  2E98               	goto	u2971
  5783     1E97  2E99               	goto	u2970
  5784     1E98                     u2971:
  5785     1E98  2E9F               	goto	l2415
  5786     1E99                     u2970:
  5787     1E99                     l2413:
  5788     1E99  0870               	movf	___awmod@divisor,w
  5789     1E9A  02F2               	subwf	___awmod@dividend,f
  5790     1E9B  0871               	movf	___awmod@divisor+1,w
  5791     1E9C  1C03               	skipc
  5792     1E9D  03F3               	decf	___awmod@dividend+1,f
  5793     1E9E  02F3               	subwf	___awmod@dividend+1,f
  5794     1E9F                     l2415:
  5795     1E9F  3001               	movlw	1
  5796     1EA0                     u2985:
  5797     1EA0  1003               	clrc
  5798     1EA1  0CF1               	rrf	___awmod@divisor+1,f
  5799     1EA2  0CF0               	rrf	___awmod@divisor,f
  5800     1EA3  3EFF               	addlw	-1
  5801     1EA4  1D03               	skipz
  5802     1EA5  2EA0               	goto	u2985
  5803     1EA6                     l2417:
  5804     1EA6  3001               	movlw	1
  5805     1EA7  02F4               	subwf	___awmod@counter,f
  5806     1EA8  1D03               	btfss	3,2
  5807     1EA9  2EAB               	goto	u2991
  5808     1EAA  2EAC               	goto	u2990
  5809     1EAB                     u2991:
  5810     1EAB  2E8F               	goto	l2411
  5811     1EAC                     u2990:
  5812     1EAC                     l2419:
  5813     1EAC  0875               	movf	___awmod@sign,w
  5814     1EAD  1903               	btfsc	3,2
  5815     1EAE  2EB0               	goto	u3001
  5816     1EAF  2EB1               	goto	u3000
  5817     1EB0                     u3001:
  5818     1EB0  2EB6               	goto	l2423
  5819     1EB1                     u3000:
  5820     1EB1                     l2421:
  5821     1EB1  09F2               	comf	___awmod@dividend,f
  5822     1EB2  09F3               	comf	___awmod@dividend+1,f
  5823     1EB3  0AF2               	incf	___awmod@dividend,f
  5824     1EB4  1903               	skipnz
  5825     1EB5  0AF3               	incf	___awmod@dividend+1,f
  5826     1EB6                     l2423:
  5827     1EB6  0873               	movf	___awmod@dividend+1,w
  5828     1EB7  00F1               	movwf	?___awmod+1
  5829     1EB8  0872               	movf	___awmod@dividend,w
  5830     1EB9  00F0               	movwf	?___awmod
  5831     1EBA                     l493:
  5832     1EBA  0008               	return
  5833     1EBB                     __end_of___awmod:
  5834                           
  5835                           	psect	text19
  5836     1F21                     __ptext19:	
  5837 ;; *************** function ___awdiv *****************
  5838 ;; Defined at:
  5839 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  5840 ;; Parameters:    Size  Location     Type
  5841 ;;  divisor         2    6[COMMON] int 
  5842 ;;  dividend        2    8[COMMON] int 
  5843 ;; Auto vars:     Size  Location     Type
  5844 ;;  quotient        2   12[COMMON] int 
  5845 ;;  sign            1   11[COMMON] unsigned char 
  5846 ;;  counter         1   10[COMMON] unsigned char 
  5847 ;; Return value:  Size  Location     Type
  5848 ;;                  2    6[COMMON] int 
  5849 ;; Registers used:
  5850 ;;		wreg, status,2, status,0, btemp+1
  5851 ;; Tracked objects:
  5852 ;;		On entry : 0/0
  5853 ;;		On exit  : 0/0
  5854 ;;		Unchanged: 0/0
  5855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5856 ;;      Params:         4       0       0       0       0
  5857 ;;      Locals:         4       0       0       0       0
  5858 ;;      Temps:          0       0       0       0       0
  5859 ;;      Totals:         8       0       0       0       0
  5860 ;;Total ram usage:        8 bytes
  5861 ;; Hardware stack levels used: 1
  5862 ;; This function calls:
  5863 ;;		Nothing
  5864 ;; This function is called by:
  5865 ;;		_scale
  5866 ;;		_sprintf
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869                           
  5870     1F21                     ___awdiv:	
  5871                           ;psect for function ___awdiv
  5872                           
  5873     1F21                     l2345:	
  5874                           ;incstack = 0
  5875                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  5876                           
  5877     1F21  01FB               	clrf	___awdiv@sign
  5878     1F22                     l2347:
  5879     1F22  1FF7               	btfss	___awdiv@divisor+1,7
  5880     1F23  2F25               	goto	u2821
  5881     1F24  2F26               	goto	u2820
  5882     1F25                     u2821:
  5883     1F25  2F2D               	goto	l2353
  5884     1F26                     u2820:
  5885     1F26                     l2349:
  5886     1F26  09F6               	comf	___awdiv@divisor,f
  5887     1F27  09F7               	comf	___awdiv@divisor+1,f
  5888     1F28  0AF6               	incf	___awdiv@divisor,f
  5889     1F29  1903               	skipnz
  5890     1F2A  0AF7               	incf	___awdiv@divisor+1,f
  5891     1F2B                     l2351:
  5892     1F2B  01FB               	clrf	___awdiv@sign
  5893     1F2C  0AFB               	incf	___awdiv@sign,f
  5894     1F2D                     l2353:
  5895     1F2D  1FF9               	btfss	___awdiv@dividend+1,7
  5896     1F2E  2F30               	goto	u2831
  5897     1F2F  2F31               	goto	u2830
  5898     1F30                     u2831:
  5899     1F30  2F3A               	goto	l2359
  5900     1F31                     u2830:
  5901     1F31                     l2355:
  5902     1F31  09F8               	comf	___awdiv@dividend,f
  5903     1F32  09F9               	comf	___awdiv@dividend+1,f
  5904     1F33  0AF8               	incf	___awdiv@dividend,f
  5905     1F34  1903               	skipnz
  5906     1F35  0AF9               	incf	___awdiv@dividend+1,f
  5907     1F36                     l2357:
  5908     1F36  3001               	movlw	1
  5909     1F37  00FF               	movwf	btemp+1
  5910     1F38  087F               	movf	btemp+1,w
  5911     1F39  06FB               	xorwf	___awdiv@sign,f
  5912     1F3A                     l2359:
  5913     1F3A  01FC               	clrf	___awdiv@quotient
  5914     1F3B  01FD               	clrf	___awdiv@quotient+1
  5915     1F3C                     l2361:
  5916     1F3C  0876               	movf	___awdiv@divisor,w
  5917     1F3D  0477               	iorwf	___awdiv@divisor+1,w
  5918     1F3E  1903               	btfsc	3,2
  5919     1F3F  2F41               	goto	u2841
  5920     1F40  2F42               	goto	u2840
  5921     1F41                     u2841:
  5922     1F41  2F79               	goto	l2381
  5923     1F42                     u2840:
  5924     1F42                     l2363:
  5925     1F42  01FA               	clrf	___awdiv@counter
  5926     1F43  0AFA               	incf	___awdiv@counter,f
  5927     1F44  2F50               	goto	l2369
  5928     1F45                     l2365:
  5929     1F45  3001               	movlw	1
  5930     1F46                     u2855:
  5931     1F46  1003               	clrc
  5932     1F47  0DF6               	rlf	___awdiv@divisor,f
  5933     1F48  0DF7               	rlf	___awdiv@divisor+1,f
  5934     1F49  3EFF               	addlw	-1
  5935     1F4A  1D03               	skipz
  5936     1F4B  2F46               	goto	u2855
  5937     1F4C                     l2367:
  5938     1F4C  3001               	movlw	1
  5939     1F4D  00FF               	movwf	btemp+1
  5940     1F4E  087F               	movf	btemp+1,w
  5941     1F4F  07FA               	addwf	___awdiv@counter,f
  5942     1F50                     l2369:
  5943     1F50  1FF7               	btfss	___awdiv@divisor+1,7
  5944     1F51  2F53               	goto	u2861
  5945     1F52  2F54               	goto	u2860
  5946     1F53                     u2861:
  5947     1F53  2F45               	goto	l2365
  5948     1F54                     u2860:
  5949     1F54                     l2371:
  5950     1F54  3001               	movlw	1
  5951     1F55                     u2875:
  5952     1F55  1003               	clrc
  5953     1F56  0DFC               	rlf	___awdiv@quotient,f
  5954     1F57  0DFD               	rlf	___awdiv@quotient+1,f
  5955     1F58  3EFF               	addlw	-1
  5956     1F59  1D03               	skipz
  5957     1F5A  2F55               	goto	u2875
  5958     1F5B  0877               	movf	___awdiv@divisor+1,w
  5959     1F5C  0279               	subwf	___awdiv@dividend+1,w
  5960     1F5D  1D03               	skipz
  5961     1F5E  2F61               	goto	u2885
  5962     1F5F  0876               	movf	___awdiv@divisor,w
  5963     1F60  0278               	subwf	___awdiv@dividend,w
  5964     1F61                     u2885:
  5965     1F61  1C03               	skipc
  5966     1F62  2F64               	goto	u2881
  5967     1F63  2F65               	goto	u2880
  5968     1F64                     u2881:
  5969     1F64  2F6C               	goto	l2377
  5970     1F65                     u2880:
  5971     1F65                     l2373:
  5972     1F65  0876               	movf	___awdiv@divisor,w
  5973     1F66  02F8               	subwf	___awdiv@dividend,f
  5974     1F67  0877               	movf	___awdiv@divisor+1,w
  5975     1F68  1C03               	skipc
  5976     1F69  03F9               	decf	___awdiv@dividend+1,f
  5977     1F6A  02F9               	subwf	___awdiv@dividend+1,f
  5978     1F6B                     l2375:
  5979     1F6B  147C               	bsf	___awdiv@quotient,0
  5980     1F6C                     l2377:
  5981     1F6C  3001               	movlw	1
  5982     1F6D                     u2895:
  5983     1F6D  1003               	clrc
  5984     1F6E  0CF7               	rrf	___awdiv@divisor+1,f
  5985     1F6F  0CF6               	rrf	___awdiv@divisor,f
  5986     1F70  3EFF               	addlw	-1
  5987     1F71  1D03               	skipz
  5988     1F72  2F6D               	goto	u2895
  5989     1F73                     l2379:
  5990     1F73  3001               	movlw	1
  5991     1F74  02FA               	subwf	___awdiv@counter,f
  5992     1F75  1D03               	btfss	3,2
  5993     1F76  2F78               	goto	u2901
  5994     1F77  2F79               	goto	u2900
  5995     1F78                     u2901:
  5996     1F78  2F54               	goto	l2371
  5997     1F79                     u2900:
  5998     1F79                     l2381:
  5999     1F79  087B               	movf	___awdiv@sign,w
  6000     1F7A  1903               	btfsc	3,2
  6001     1F7B  2F7D               	goto	u2911
  6002     1F7C  2F7E               	goto	u2910
  6003     1F7D                     u2911:
  6004     1F7D  2F83               	goto	l2385
  6005     1F7E                     u2910:
  6006     1F7E                     l2383:
  6007     1F7E  09FC               	comf	___awdiv@quotient,f
  6008     1F7F  09FD               	comf	___awdiv@quotient+1,f
  6009     1F80  0AFC               	incf	___awdiv@quotient,f
  6010     1F81  1903               	skipnz
  6011     1F82  0AFD               	incf	___awdiv@quotient+1,f
  6012     1F83                     l2385:
  6013     1F83  087D               	movf	___awdiv@quotient+1,w
  6014     1F84  00F7               	movwf	?___awdiv+1
  6015     1F85  087C               	movf	___awdiv@quotient,w
  6016     1F86  00F6               	movwf	?___awdiv
  6017     1F87                     l480:
  6018     1F87  0008               	return
  6019     1F88                     __end_of___awdiv:
  6020                           
  6021                           	psect	text20
  6022     1B69                     __ptext20:	
  6023 ;; *************** function _isdigit *****************
  6024 ;; Defined at:
  6025 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  6026 ;; Parameters:    Size  Location     Type
  6027 ;;  c               1    wreg     unsigned char 
  6028 ;; Auto vars:     Size  Location     Type
  6029 ;;  c               1    1[COMMON] unsigned char 
  6030 ;; Return value:  Size  Location     Type
  6031 ;;		None               void
  6032 ;; Registers used:
  6033 ;;		wreg, status,2, status,0
  6034 ;; Tracked objects:
  6035 ;;		On entry : 0/0
  6036 ;;		On exit  : 0/0
  6037 ;;		Unchanged: 0/0
  6038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6039 ;;      Params:         0       0       0       0       0
  6040 ;;      Locals:         2       0       0       0       0
  6041 ;;      Temps:          0       0       0       0       0
  6042 ;;      Totals:         2       0       0       0       0
  6043 ;;Total ram usage:        2 bytes
  6044 ;; Hardware stack levels used: 1
  6045 ;; This function calls:
  6046 ;;		Nothing
  6047 ;; This function is called by:
  6048 ;;		_sprintf
  6049 ;; This function uses a non-reentrant model
  6050 ;;
  6051                           
  6052     1B69                     _isdigit:	
  6053                           ;psect for function _isdigit
  6054                           
  6055                           
  6056                           ;incstack = 0
  6057                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6058                           ;isdigit@c stored from wreg
  6059     1B69  00F1               	movwf	isdigit@c
  6060     1B6A                     l2895:
  6061     1B6A  01F0               	clrf	_isdigit$762
  6062     1B6B                     l2897:
  6063     1B6B  303A               	movlw	58
  6064     1B6C  0271               	subwf	isdigit@c,w
  6065     1B6D  1803               	skipnc
  6066     1B6E  2B70               	goto	u4231
  6067     1B6F  2B71               	goto	u4230
  6068     1B70                     u4231:
  6069     1B70  2B79               	goto	l2903
  6070     1B71                     u4230:
  6071     1B71                     l2899:
  6072     1B71  3030               	movlw	48
  6073     1B72  0271               	subwf	isdigit@c,w
  6074     1B73  1C03               	skipc
  6075     1B74  2B76               	goto	u4241
  6076     1B75  2B77               	goto	u4240
  6077     1B76                     u4241:
  6078     1B76  2B79               	goto	l2903
  6079     1B77                     u4240:
  6080     1B77                     l2901:
  6081     1B77  01F0               	clrf	_isdigit$762
  6082     1B78  0AF0               	incf	_isdigit$762,f
  6083     1B79                     l2903:
  6084     1B79  0C70               	rrf	_isdigit$762,w
  6085     1B7A                     l814:
  6086     1B7A  0008               	return
  6087     1B7B                     __end_of_isdigit:
  6088                           
  6089                           	psect	text21
  6090     139D                     __ptext21:	
  6091 ;; *************** function _fround *****************
  6092 ;; Defined at:
  6093 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  prec            1    wreg     unsigned char 
  6096 ;; Auto vars:     Size  Location     Type
  6097 ;;  prec            1   45[BANK0 ] unsigned char 
  6098 ;; Return value:  Size  Location     Type
  6099 ;;                  4   26[BANK0 ] unsigned char 
  6100 ;; Registers used:
  6101 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6102 ;; Tracked objects:
  6103 ;;		On entry : 0/0
  6104 ;;		On exit  : 0/0
  6105 ;;		Unchanged: 0/0
  6106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6107 ;;      Params:         0       4       0       0       0
  6108 ;;      Locals:         0       9       0       0       0
  6109 ;;      Temps:          0       7       0       0       0
  6110 ;;      Totals:         0      20       0       0       0
  6111 ;;Total ram usage:       20 bytes
  6112 ;; Hardware stack levels used: 1
  6113 ;; Hardware stack levels required when called: 2
  6114 ;; This function calls:
  6115 ;;		___flmul
  6116 ;;		___lwdiv
  6117 ;;		___lwmod
  6118 ;; This function is called by:
  6119 ;;		_sprintf
  6120 ;; This function uses a non-reentrant model
  6121 ;;
  6122                           
  6123     139D                     _fround:	
  6124                           ;psect for function _fround
  6125                           
  6126                           
  6127                           ;incstack = 0
  6128                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6129                           ;fround@prec stored from wreg
  6130     139D  1283               	bcf	3,5	;RP0=0, select bank0
  6131     139E  1303               	bcf	3,6	;RP1=0, select bank0
  6132     139F  00CD               	movwf	fround@prec
  6133     13A0                     l2837:
  6134                           
  6135                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  6136     13A0  306E               	movlw	110
  6137     13A1  024D               	subwf	fround@prec,w
  6138     13A2  1C03               	skipc
  6139     13A3  2BA5               	goto	u3981
  6140     13A4  2BA6               	goto	u3980
  6141     13A5                     u3981:
  6142     13A5  2CB3               	goto	l2845
  6143     13A6                     u3980:
  6144     13A6                     l2839:
  6145                           
  6146                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  6147     13A6  303F               	movlw	63
  6148     13A7  00A3               	movwf	___flmul@b+3
  6149     13A8  3000               	movlw	0
  6150     13A9  00A2               	movwf	___flmul@b+2
  6151     13AA  3000               	movlw	0
  6152     13AB  00A1               	movwf	___flmul@b+1
  6153     13AC  3000               	movlw	0
  6154     13AD  00A0               	movwf	___flmul@b
  6155     13AE  3064               	movlw	100
  6156     13AF  00F5               	movwf	___lwdiv@divisor
  6157     13B0  3000               	movlw	0
  6158     13B1  00F6               	movwf	___lwdiv@divisor+1
  6159     13B2  084D               	movf	fround@prec,w
  6160     13B3  00BE               	movwf	??_fround
  6161     13B4  01BF               	clrf	??_fround+1
  6162     13B5  083E               	movf	??_fround,w
  6163     13B6  00F7               	movwf	___lwdiv@dividend
  6164     13B7  083F               	movf	??_fround+1,w
  6165     13B8  00F8               	movwf	___lwdiv@dividend+1
  6166     13B9  160A  158A  25D0  160A  118A  	fcall	___lwdiv
  6167     13BE  0875               	movf	?___lwdiv,w
  6168     13BF  1283               	bcf	3,5	;RP0=0, select bank0
  6169     13C0  1303               	bcf	3,6	;RP1=0, select bank0
  6170     13C1  00C0               	movwf	??_fround+2
  6171     13C2  3001               	movlw	1
  6172     13C3                     u3995:
  6173     13C3  1003               	clrc
  6174     13C4  0DC0               	rlf	??_fround+2,f
  6175     13C5  3EFF               	addlw	-1
  6176     13C6  1D03               	skipz
  6177     13C7  2BC3               	goto	u3995
  6178     13C8  1003               	clrc
  6179     13C9  0D40               	rlf	??_fround+2,w
  6180     13CA  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  6181     13CB  0084               	movwf	4
  6182     13CC  120A  158A  200A  160A  118A  	fcall	stringdir
  6183     13D1  00C1               	movwf	??_fround+3
  6184     13D2  120A  158A  200A  160A  118A  	fcall	stringdir
  6185     13D7  00C2               	movwf	??_fround+4
  6186     13D8  120A  158A  200A  160A  118A  	fcall	stringdir
  6187     13DD  00C3               	movwf	??_fround+5
  6188     13DE  120A  158A  200A  160A  118A  	fcall	stringdir
  6189     13E3  00C4               	movwf	??_fround+6
  6190     13E4  0844               	movf	??_fround+6,w
  6191     13E5  00A7               	movwf	___flmul@a+3
  6192     13E6  0843               	movf	??_fround+5,w
  6193     13E7  00A6               	movwf	___flmul@a+2
  6194     13E8  0842               	movf	??_fround+4,w
  6195     13E9  00A5               	movwf	___flmul@a+1
  6196     13EA  0841               	movf	??_fround+3,w
  6197     13EB  00A4               	movwf	___flmul@a
  6198     13EC  120A  158A  215C  160A  118A  	fcall	___flmul
  6199     13F1  1283               	bcf	3,5	;RP0=0, select bank0
  6200     13F2  1303               	bcf	3,6	;RP1=0, select bank0
  6201     13F3  0823               	movf	?___flmul+3,w
  6202     13F4  00CC               	movwf	_fround$977+3
  6203     13F5  0822               	movf	?___flmul+2,w
  6204     13F6  00CB               	movwf	_fround$977+2
  6205     13F7  0821               	movf	?___flmul+1,w
  6206     13F8  00CA               	movwf	_fround$977+1
  6207     13F9  0820               	movf	?___flmul,w
  6208     13FA  00C9               	movwf	_fround$977
  6209                           
  6210                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  6211     13FB  300A               	movlw	10
  6212     13FC  00F5               	movwf	___lwdiv@divisor
  6213     13FD  3000               	movlw	0
  6214     13FE  00F6               	movwf	___lwdiv@divisor+1
  6215     13FF  084D               	movf	fround@prec,w
  6216     1400  00BE               	movwf	??_fround
  6217     1401  01BF               	clrf	??_fround+1
  6218     1402  083E               	movf	??_fround,w
  6219     1403  00F2               	movwf	___lwmod@dividend
  6220     1404  083F               	movf	??_fround+1,w
  6221     1405  00F3               	movwf	___lwmod@dividend+1
  6222     1406  3064               	movlw	100
  6223     1407  00F0               	movwf	___lwmod@divisor
  6224     1408  3000               	movlw	0
  6225     1409  00F1               	movwf	___lwmod@divisor+1
  6226     140A  120A  118A  2003  160A  118A  	fcall	___lwmod
  6227     140F  0871               	movf	?___lwmod+1,w
  6228     1410  00F8               	movwf	___lwdiv@dividend+1
  6229     1411  0870               	movf	?___lwmod,w
  6230     1412  00F7               	movwf	___lwdiv@dividend
  6231     1413  160A  158A  25D0  160A  118A  	fcall	___lwdiv
  6232     1418  0875               	movf	?___lwdiv,w
  6233     1419  1283               	bcf	3,5	;RP0=0, select bank0
  6234     141A  1303               	bcf	3,6	;RP1=0, select bank0
  6235     141B  00C0               	movwf	??_fround+2
  6236     141C  3001               	movlw	1
  6237     141D                     u4005:
  6238     141D  1003               	clrc
  6239     141E  0DC0               	rlf	??_fround+2,f
  6240     141F  3EFF               	addlw	-1
  6241     1420  1D03               	skipz
  6242     1421  2C1D               	goto	u4005
  6243     1422  1003               	clrc
  6244     1423  0D40               	rlf	??_fround+2,w
  6245     1424  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  6246     1425  0084               	movwf	4
  6247     1426  120A  158A  200A  160A  118A  	fcall	stringdir
  6248     142B  00C1               	movwf	??_fround+3
  6249     142C  120A  158A  200A  160A  118A  	fcall	stringdir
  6250     1431  00C2               	movwf	??_fround+4
  6251     1432  120A  158A  200A  160A  118A  	fcall	stringdir
  6252     1437  00C3               	movwf	??_fround+5
  6253     1438  120A  158A  200A  160A  118A  	fcall	stringdir
  6254     143D  00C4               	movwf	??_fround+6
  6255     143E  0844               	movf	??_fround+6,w
  6256     143F  00A3               	movwf	___flmul@b+3
  6257     1440  0843               	movf	??_fround+5,w
  6258     1441  00A2               	movwf	___flmul@b+2
  6259     1442  0842               	movf	??_fround+4,w
  6260     1443  00A1               	movwf	___flmul@b+1
  6261     1444  0841               	movf	??_fround+3,w
  6262     1445  00A0               	movwf	___flmul@b
  6263     1446  084C               	movf	_fround$977+3,w
  6264     1447  00A7               	movwf	___flmul@a+3
  6265     1448  084B               	movf	_fround$977+2,w
  6266     1449  00A6               	movwf	___flmul@a+2
  6267     144A  084A               	movf	_fround$977+1,w
  6268     144B  00A5               	movwf	___flmul@a+1
  6269     144C  0849               	movf	_fround$977,w
  6270     144D  00A4               	movwf	___flmul@a
  6271     144E  120A  158A  215C  160A  118A  	fcall	___flmul
  6272     1453  1283               	bcf	3,5	;RP0=0, select bank0
  6273     1454  1303               	bcf	3,6	;RP1=0, select bank0
  6274     1455  0823               	movf	?___flmul+3,w
  6275     1456  00C8               	movwf	_fround$978+3
  6276     1457  0822               	movf	?___flmul+2,w
  6277     1458  00C7               	movwf	_fround$978+2
  6278     1459  0821               	movf	?___flmul+1,w
  6279     145A  00C6               	movwf	_fround$978+1
  6280     145B  0820               	movf	?___flmul,w
  6281     145C  00C5               	movwf	_fround$978
  6282                           
  6283                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  6284     145D  300A               	movlw	10
  6285     145E  00F0               	movwf	___lwmod@divisor
  6286     145F  3000               	movlw	0
  6287     1460  00F1               	movwf	___lwmod@divisor+1
  6288     1461  084D               	movf	fround@prec,w
  6289     1462  00BE               	movwf	??_fround
  6290     1463  01BF               	clrf	??_fround+1
  6291     1464  083E               	movf	??_fround,w
  6292     1465  00F2               	movwf	___lwmod@dividend
  6293     1466  083F               	movf	??_fround+1,w
  6294     1467  00F3               	movwf	___lwmod@dividend+1
  6295     1468  120A  118A  2003  160A  118A  	fcall	___lwmod
  6296     146D  0870               	movf	?___lwmod,w
  6297     146E  1283               	bcf	3,5	;RP0=0, select bank0
  6298     146F  1303               	bcf	3,6	;RP1=0, select bank0
  6299     1470  00C0               	movwf	??_fround+2
  6300     1471  3001               	movlw	1
  6301     1472                     u4015:
  6302     1472  1003               	clrc
  6303     1473  0DC0               	rlf	??_fround+2,f
  6304     1474  3EFF               	addlw	-1
  6305     1475  1D03               	skipz
  6306     1476  2C72               	goto	u4015
  6307     1477  1003               	clrc
  6308     1478  0D40               	rlf	??_fround+2,w
  6309     1479  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6310     147A  0084               	movwf	4
  6311     147B  120A  158A  200A  160A  118A  	fcall	stringdir
  6312     1480  00C1               	movwf	??_fround+3
  6313     1481  120A  158A  200A  160A  118A  	fcall	stringdir
  6314     1486  00C2               	movwf	??_fround+4
  6315     1487  120A  158A  200A  160A  118A  	fcall	stringdir
  6316     148C  00C3               	movwf	??_fround+5
  6317     148D  120A  158A  200A  160A  118A  	fcall	stringdir
  6318     1492  00C4               	movwf	??_fround+6
  6319     1493  0844               	movf	??_fround+6,w
  6320     1494  00A3               	movwf	___flmul@b+3
  6321     1495  0843               	movf	??_fround+5,w
  6322     1496  00A2               	movwf	___flmul@b+2
  6323     1497  0842               	movf	??_fround+4,w
  6324     1498  00A1               	movwf	___flmul@b+1
  6325     1499  0841               	movf	??_fround+3,w
  6326     149A  00A0               	movwf	___flmul@b
  6327     149B  0848               	movf	_fround$978+3,w
  6328     149C  00A7               	movwf	___flmul@a+3
  6329     149D  0847               	movf	_fround$978+2,w
  6330     149E  00A6               	movwf	___flmul@a+2
  6331     149F  0846               	movf	_fround$978+1,w
  6332     14A0  00A5               	movwf	___flmul@a+1
  6333     14A1  0845               	movf	_fround$978,w
  6334     14A2  00A4               	movwf	___flmul@a
  6335     14A3  120A  158A  215C  160A  118A  	fcall	___flmul
  6336     14A8  1283               	bcf	3,5	;RP0=0, select bank0
  6337     14A9  1303               	bcf	3,6	;RP1=0, select bank0
  6338     14AA  0823               	movf	?___flmul+3,w
  6339     14AB  00BD               	movwf	?_fround+3
  6340     14AC  0822               	movf	?___flmul+2,w
  6341     14AD  00BC               	movwf	?_fround+2
  6342     14AE  0821               	movf	?___flmul+1,w
  6343     14AF  00BB               	movwf	?_fround+1
  6344     14B0  0820               	movf	?___flmul,w
  6345     14B1  00BA               	movwf	?_fround
  6346     14B2  2DA7               	goto	l250
  6347     14B3                     l2845:
  6348     14B3  300B               	movlw	11
  6349     14B4  024D               	subwf	fround@prec,w
  6350     14B5  1C03               	skipc
  6351     14B6  2CB8               	goto	u4021
  6352     14B7  2CB9               	goto	u4020
  6353     14B8                     u4021:
  6354     14B8  2D64               	goto	l2851
  6355     14B9                     u4020:
  6356     14B9                     l2847:
  6357                           
  6358                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6359     14B9  303F               	movlw	63
  6360     14BA  00A3               	movwf	___flmul@b+3
  6361     14BB  3000               	movlw	0
  6362     14BC  00A2               	movwf	___flmul@b+2
  6363     14BD  3000               	movlw	0
  6364     14BE  00A1               	movwf	___flmul@b+1
  6365     14BF  3000               	movlw	0
  6366     14C0  00A0               	movwf	___flmul@b
  6367     14C1  300A               	movlw	10
  6368     14C2  00F5               	movwf	___lwdiv@divisor
  6369     14C3  3000               	movlw	0
  6370     14C4  00F6               	movwf	___lwdiv@divisor+1
  6371     14C5  084D               	movf	fround@prec,w
  6372     14C6  00BE               	movwf	??_fround
  6373     14C7  01BF               	clrf	??_fround+1
  6374     14C8  083E               	movf	??_fround,w
  6375     14C9  00F7               	movwf	___lwdiv@dividend
  6376     14CA  083F               	movf	??_fround+1,w
  6377     14CB  00F8               	movwf	___lwdiv@dividend+1
  6378     14CC  160A  158A  25D0  160A  118A  	fcall	___lwdiv
  6379     14D1  0875               	movf	?___lwdiv,w
  6380     14D2  1283               	bcf	3,5	;RP0=0, select bank0
  6381     14D3  1303               	bcf	3,6	;RP1=0, select bank0
  6382     14D4  00C0               	movwf	??_fround+2
  6383     14D5  3001               	movlw	1
  6384     14D6                     u4035:
  6385     14D6  1003               	clrc
  6386     14D7  0DC0               	rlf	??_fround+2,f
  6387     14D8  3EFF               	addlw	-1
  6388     14D9  1D03               	skipz
  6389     14DA  2CD6               	goto	u4035
  6390     14DB  1003               	clrc
  6391     14DC  0D40               	rlf	??_fround+2,w
  6392     14DD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  6393     14DE  0084               	movwf	4
  6394     14DF  120A  158A  200A  160A  118A  	fcall	stringdir
  6395     14E4  00C1               	movwf	??_fround+3
  6396     14E5  120A  158A  200A  160A  118A  	fcall	stringdir
  6397     14EA  00C2               	movwf	??_fround+4
  6398     14EB  120A  158A  200A  160A  118A  	fcall	stringdir
  6399     14F0  00C3               	movwf	??_fround+5
  6400     14F1  120A  158A  200A  160A  118A  	fcall	stringdir
  6401     14F6  00C4               	movwf	??_fround+6
  6402     14F7  0844               	movf	??_fround+6,w
  6403     14F8  00A7               	movwf	___flmul@a+3
  6404     14F9  0843               	movf	??_fround+5,w
  6405     14FA  00A6               	movwf	___flmul@a+2
  6406     14FB  0842               	movf	??_fround+4,w
  6407     14FC  00A5               	movwf	___flmul@a+1
  6408     14FD  0841               	movf	??_fround+3,w
  6409     14FE  00A4               	movwf	___flmul@a
  6410     14FF  120A  158A  215C  160A  118A  	fcall	___flmul
  6411     1504  1283               	bcf	3,5	;RP0=0, select bank0
  6412     1505  1303               	bcf	3,6	;RP1=0, select bank0
  6413     1506  0823               	movf	?___flmul+3,w
  6414     1507  00CC               	movwf	_fround$977+3
  6415     1508  0822               	movf	?___flmul+2,w
  6416     1509  00CB               	movwf	_fround$977+2
  6417     150A  0821               	movf	?___flmul+1,w
  6418     150B  00CA               	movwf	_fround$977+1
  6419     150C  0820               	movf	?___flmul,w
  6420     150D  00C9               	movwf	_fround$977
  6421                           
  6422                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6423     150E  300A               	movlw	10
  6424     150F  00F0               	movwf	___lwmod@divisor
  6425     1510  3000               	movlw	0
  6426     1511  00F1               	movwf	___lwmod@divisor+1
  6427     1512  084D               	movf	fround@prec,w
  6428     1513  00BE               	movwf	??_fround
  6429     1514  01BF               	clrf	??_fround+1
  6430     1515  083E               	movf	??_fround,w
  6431     1516  00F2               	movwf	___lwmod@dividend
  6432     1517  083F               	movf	??_fround+1,w
  6433     1518  00F3               	movwf	___lwmod@dividend+1
  6434     1519  120A  118A  2003  160A  118A  	fcall	___lwmod
  6435     151E  0870               	movf	?___lwmod,w
  6436     151F  1283               	bcf	3,5	;RP0=0, select bank0
  6437     1520  1303               	bcf	3,6	;RP1=0, select bank0
  6438     1521  00C0               	movwf	??_fround+2
  6439     1522  3001               	movlw	1
  6440     1523                     u4045:
  6441     1523  1003               	clrc
  6442     1524  0DC0               	rlf	??_fround+2,f
  6443     1525  3EFF               	addlw	-1
  6444     1526  1D03               	skipz
  6445     1527  2D23               	goto	u4045
  6446     1528  1003               	clrc
  6447     1529  0D40               	rlf	??_fround+2,w
  6448     152A  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6449     152B  0084               	movwf	4
  6450     152C  120A  158A  200A  160A  118A  	fcall	stringdir
  6451     1531  00C1               	movwf	??_fround+3
  6452     1532  120A  158A  200A  160A  118A  	fcall	stringdir
  6453     1537  00C2               	movwf	??_fround+4
  6454     1538  120A  158A  200A  160A  118A  	fcall	stringdir
  6455     153D  00C3               	movwf	??_fround+5
  6456     153E  120A  158A  200A  160A  118A  	fcall	stringdir
  6457     1543  00C4               	movwf	??_fround+6
  6458     1544  0844               	movf	??_fround+6,w
  6459     1545  00A3               	movwf	___flmul@b+3
  6460     1546  0843               	movf	??_fround+5,w
  6461     1547  00A2               	movwf	___flmul@b+2
  6462     1548  0842               	movf	??_fround+4,w
  6463     1549  00A1               	movwf	___flmul@b+1
  6464     154A  0841               	movf	??_fround+3,w
  6465     154B  00A0               	movwf	___flmul@b
  6466     154C  084C               	movf	_fround$977+3,w
  6467     154D  00A7               	movwf	___flmul@a+3
  6468     154E  084B               	movf	_fround$977+2,w
  6469     154F  00A6               	movwf	___flmul@a+2
  6470     1550  084A               	movf	_fround$977+1,w
  6471     1551  00A5               	movwf	___flmul@a+1
  6472     1552  0849               	movf	_fround$977,w
  6473     1553  00A4               	movwf	___flmul@a
  6474     1554  120A  158A  215C  160A  118A  	fcall	___flmul
  6475     1559  1283               	bcf	3,5	;RP0=0, select bank0
  6476     155A  1303               	bcf	3,6	;RP1=0, select bank0
  6477     155B  0823               	movf	?___flmul+3,w
  6478     155C  00BD               	movwf	?_fround+3
  6479     155D  0822               	movf	?___flmul+2,w
  6480     155E  00BC               	movwf	?_fround+2
  6481     155F  0821               	movf	?___flmul+1,w
  6482     1560  00BB               	movwf	?_fround+1
  6483     1561  0820               	movf	?___flmul,w
  6484     1562  00BA               	movwf	?_fround
  6485     1563  2DA7               	goto	l250
  6486     1564                     l2851:
  6487                           
  6488                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  6489     1564  303F               	movlw	63
  6490     1565  00A3               	movwf	___flmul@b+3
  6491     1566  3000               	movlw	0
  6492     1567  00A2               	movwf	___flmul@b+2
  6493     1568  3000               	movlw	0
  6494     1569  00A1               	movwf	___flmul@b+1
  6495     156A  3000               	movlw	0
  6496     156B  00A0               	movwf	___flmul@b
  6497     156C  084D               	movf	fround@prec,w
  6498     156D  00BE               	movwf	??_fround
  6499     156E  3001               	movlw	1
  6500     156F                     u4055:
  6501     156F  1003               	clrc
  6502     1570  0DBE               	rlf	??_fround,f
  6503     1571  3EFF               	addlw	-1
  6504     1572  1D03               	skipz
  6505     1573  2D6F               	goto	u4055
  6506     1574  1003               	clrc
  6507     1575  0D3E               	rlf	??_fround,w
  6508     1576  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6509     1577  0084               	movwf	4
  6510     1578  120A  158A  200A  160A  118A  	fcall	stringdir
  6511     157D  00BF               	movwf	??_fround+1
  6512     157E  120A  158A  200A  160A  118A  	fcall	stringdir
  6513     1583  00C0               	movwf	??_fround+2
  6514     1584  120A  158A  200A  160A  118A  	fcall	stringdir
  6515     1589  00C1               	movwf	??_fround+3
  6516     158A  120A  158A  200A  160A  118A  	fcall	stringdir
  6517     158F  00C2               	movwf	??_fround+4
  6518     1590  0842               	movf	??_fround+4,w
  6519     1591  00A7               	movwf	___flmul@a+3
  6520     1592  0841               	movf	??_fround+3,w
  6521     1593  00A6               	movwf	___flmul@a+2
  6522     1594  0840               	movf	??_fround+2,w
  6523     1595  00A5               	movwf	___flmul@a+1
  6524     1596  083F               	movf	??_fround+1,w
  6525     1597  00A4               	movwf	___flmul@a
  6526     1598  120A  158A  215C  160A  118A  	fcall	___flmul
  6527     159D  1283               	bcf	3,5	;RP0=0, select bank0
  6528     159E  1303               	bcf	3,6	;RP1=0, select bank0
  6529     159F  0823               	movf	?___flmul+3,w
  6530     15A0  00BD               	movwf	?_fround+3
  6531     15A1  0822               	movf	?___flmul+2,w
  6532     15A2  00BC               	movwf	?_fround+2
  6533     15A3  0821               	movf	?___flmul+1,w
  6534     15A4  00BB               	movwf	?_fround+1
  6535     15A5  0820               	movf	?___flmul,w
  6536     15A6  00BA               	movwf	?_fround
  6537     15A7                     l250:
  6538     15A7  0008               	return
  6539     15A8                     __end_of_fround:
  6540                           
  6541                           	psect	text22
  6542     0003                     __ptext22:	
  6543 ;; *************** function ___lwmod *****************
  6544 ;; Defined at:
  6545 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;  divisor         2    0[COMMON] unsigned int 
  6548 ;;  dividend        2    2[COMMON] unsigned int 
  6549 ;; Auto vars:     Size  Location     Type
  6550 ;;  counter         1    4[COMMON] unsigned char 
  6551 ;; Return value:  Size  Location     Type
  6552 ;;                  2    0[COMMON] unsigned int 
  6553 ;; Registers used:
  6554 ;;		wreg, status,2, status,0, btemp+1
  6555 ;; Tracked objects:
  6556 ;;		On entry : 0/0
  6557 ;;		On exit  : 0/0
  6558 ;;		Unchanged: 0/0
  6559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6560 ;;      Params:         4       0       0       0       0
  6561 ;;      Locals:         1       0       0       0       0
  6562 ;;      Temps:          0       0       0       0       0
  6563 ;;      Totals:         5       0       0       0       0
  6564 ;;Total ram usage:        5 bytes
  6565 ;; Hardware stack levels used: 1
  6566 ;; This function calls:
  6567 ;;		Nothing
  6568 ;; This function is called by:
  6569 ;;		_fround
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573     0003                     ___lwmod:	
  6574                           ;psect for function ___lwmod
  6575                           
  6576     0003                     l2453:	
  6577                           ;incstack = 0
  6578                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  6579                           
  6580     0003  0870               	movf	___lwmod@divisor,w
  6581     0004  0471               	iorwf	___lwmod@divisor+1,w
  6582     0005  1903               	btfsc	3,2
  6583     0006  2808               	goto	u3081
  6584     0007  2809               	goto	u3080
  6585     0008                     u3081:
  6586     0008  2838               	goto	l2471
  6587     0009                     u3080:
  6588     0009                     l2455:
  6589     0009  01F4               	clrf	___lwmod@counter
  6590     000A  0AF4               	incf	___lwmod@counter,f
  6591     000B  2817               	goto	l2461
  6592     000C                     l2457:
  6593     000C  3001               	movlw	1
  6594     000D                     u3095:
  6595     000D  1003               	clrc
  6596     000E  0DF0               	rlf	___lwmod@divisor,f
  6597     000F  0DF1               	rlf	___lwmod@divisor+1,f
  6598     0010  3EFF               	addlw	-1
  6599     0011  1D03               	skipz
  6600     0012  280D               	goto	u3095
  6601     0013                     l2459:
  6602     0013  3001               	movlw	1
  6603     0014  00FF               	movwf	btemp+1
  6604     0015  087F               	movf	btemp+1,w
  6605     0016  07F4               	addwf	___lwmod@counter,f
  6606     0017                     l2461:
  6607     0017  1FF1               	btfss	___lwmod@divisor+1,7
  6608     0018  281A               	goto	u3101
  6609     0019  281B               	goto	u3100
  6610     001A                     u3101:
  6611     001A  280C               	goto	l2457
  6612     001B                     u3100:
  6613     001B                     l2463:
  6614     001B  0871               	movf	___lwmod@divisor+1,w
  6615     001C  0273               	subwf	___lwmod@dividend+1,w
  6616     001D  1D03               	skipz
  6617     001E  2821               	goto	u3115
  6618     001F  0870               	movf	___lwmod@divisor,w
  6619     0020  0272               	subwf	___lwmod@dividend,w
  6620     0021                     u3115:
  6621     0021  1C03               	skipc
  6622     0022  2824               	goto	u3111
  6623     0023  2825               	goto	u3110
  6624     0024                     u3111:
  6625     0024  282B               	goto	l2467
  6626     0025                     u3110:
  6627     0025                     l2465:
  6628     0025  0870               	movf	___lwmod@divisor,w
  6629     0026  02F2               	subwf	___lwmod@dividend,f
  6630     0027  0871               	movf	___lwmod@divisor+1,w
  6631     0028  1C03               	skipc
  6632     0029  03F3               	decf	___lwmod@dividend+1,f
  6633     002A  02F3               	subwf	___lwmod@dividend+1,f
  6634     002B                     l2467:
  6635     002B  3001               	movlw	1
  6636     002C                     u3125:
  6637     002C  1003               	clrc
  6638     002D  0CF1               	rrf	___lwmod@divisor+1,f
  6639     002E  0CF0               	rrf	___lwmod@divisor,f
  6640     002F  3EFF               	addlw	-1
  6641     0030  1D03               	skipz
  6642     0031  282C               	goto	u3125
  6643     0032                     l2469:
  6644     0032  3001               	movlw	1
  6645     0033  02F4               	subwf	___lwmod@counter,f
  6646     0034  1D03               	btfss	3,2
  6647     0035  2837               	goto	u3131
  6648     0036  2838               	goto	u3130
  6649     0037                     u3131:
  6650     0037  281B               	goto	l2463
  6651     0038                     u3130:
  6652     0038                     l2471:
  6653     0038  0873               	movf	___lwmod@dividend+1,w
  6654     0039  00F1               	movwf	?___lwmod+1
  6655     003A  0872               	movf	___lwmod@dividend,w
  6656     003B  00F0               	movwf	?___lwmod
  6657     003C                     l643:
  6658     003C  0008               	return
  6659     003D                     __end_of___lwmod:
  6660                           
  6661                           	psect	text23
  6662     1DD0                     __ptext23:	
  6663 ;; *************** function ___lwdiv *****************
  6664 ;; Defined at:
  6665 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  6666 ;; Parameters:    Size  Location     Type
  6667 ;;  divisor         2    5[COMMON] unsigned int 
  6668 ;;  dividend        2    7[COMMON] unsigned int 
  6669 ;; Auto vars:     Size  Location     Type
  6670 ;;  quotient        2    9[COMMON] unsigned int 
  6671 ;;  counter         1   11[COMMON] unsigned char 
  6672 ;; Return value:  Size  Location     Type
  6673 ;;                  2    5[COMMON] unsigned int 
  6674 ;; Registers used:
  6675 ;;		wreg, status,2, status,0, btemp+1
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6681 ;;      Params:         4       0       0       0       0
  6682 ;;      Locals:         3       0       0       0       0
  6683 ;;      Temps:          0       0       0       0       0
  6684 ;;      Totals:         7       0       0       0       0
  6685 ;;Total ram usage:        7 bytes
  6686 ;; Hardware stack levels used: 1
  6687 ;; This function calls:
  6688 ;;		Nothing
  6689 ;; This function is called by:
  6690 ;;		_fround
  6691 ;; This function uses a non-reentrant model
  6692 ;;
  6693                           
  6694     1DD0                     ___lwdiv:	
  6695                           ;psect for function ___lwdiv
  6696                           
  6697     1DD0                     l2427:	
  6698                           ;incstack = 0
  6699                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  6700                           
  6701     1DD0  01F9               	clrf	___lwdiv@quotient
  6702     1DD1  01FA               	clrf	___lwdiv@quotient+1
  6703     1DD2                     l2429:
  6704     1DD2  0875               	movf	___lwdiv@divisor,w
  6705     1DD3  0476               	iorwf	___lwdiv@divisor+1,w
  6706     1DD4  1903               	btfsc	3,2
  6707     1DD5  2DD7               	goto	u3011
  6708     1DD6  2DD8               	goto	u3010
  6709     1DD7                     u3011:
  6710     1DD7  2E0F               	goto	l2449
  6711     1DD8                     u3010:
  6712     1DD8                     l2431:
  6713     1DD8  01FB               	clrf	___lwdiv@counter
  6714     1DD9  0AFB               	incf	___lwdiv@counter,f
  6715     1DDA  2DE6               	goto	l2437
  6716     1DDB                     l2433:
  6717     1DDB  3001               	movlw	1
  6718     1DDC                     u3025:
  6719     1DDC  1003               	clrc
  6720     1DDD  0DF5               	rlf	___lwdiv@divisor,f
  6721     1DDE  0DF6               	rlf	___lwdiv@divisor+1,f
  6722     1DDF  3EFF               	addlw	-1
  6723     1DE0  1D03               	skipz
  6724     1DE1  2DDC               	goto	u3025
  6725     1DE2                     l2435:
  6726     1DE2  3001               	movlw	1
  6727     1DE3  00FF               	movwf	btemp+1
  6728     1DE4  087F               	movf	btemp+1,w
  6729     1DE5  07FB               	addwf	___lwdiv@counter,f
  6730     1DE6                     l2437:
  6731     1DE6  1FF6               	btfss	___lwdiv@divisor+1,7
  6732     1DE7  2DE9               	goto	u3031
  6733     1DE8  2DEA               	goto	u3030
  6734     1DE9                     u3031:
  6735     1DE9  2DDB               	goto	l2433
  6736     1DEA                     u3030:
  6737     1DEA                     l2439:
  6738     1DEA  3001               	movlw	1
  6739     1DEB                     u3045:
  6740     1DEB  1003               	clrc
  6741     1DEC  0DF9               	rlf	___lwdiv@quotient,f
  6742     1DED  0DFA               	rlf	___lwdiv@quotient+1,f
  6743     1DEE  3EFF               	addlw	-1
  6744     1DEF  1D03               	skipz
  6745     1DF0  2DEB               	goto	u3045
  6746     1DF1  0876               	movf	___lwdiv@divisor+1,w
  6747     1DF2  0278               	subwf	___lwdiv@dividend+1,w
  6748     1DF3  1D03               	skipz
  6749     1DF4  2DF7               	goto	u3055
  6750     1DF5  0875               	movf	___lwdiv@divisor,w
  6751     1DF6  0277               	subwf	___lwdiv@dividend,w
  6752     1DF7                     u3055:
  6753     1DF7  1C03               	skipc
  6754     1DF8  2DFA               	goto	u3051
  6755     1DF9  2DFB               	goto	u3050
  6756     1DFA                     u3051:
  6757     1DFA  2E02               	goto	l2445
  6758     1DFB                     u3050:
  6759     1DFB                     l2441:
  6760     1DFB  0875               	movf	___lwdiv@divisor,w
  6761     1DFC  02F7               	subwf	___lwdiv@dividend,f
  6762     1DFD  0876               	movf	___lwdiv@divisor+1,w
  6763     1DFE  1C03               	skipc
  6764     1DFF  03F8               	decf	___lwdiv@dividend+1,f
  6765     1E00  02F8               	subwf	___lwdiv@dividend+1,f
  6766     1E01                     l2443:
  6767     1E01  1479               	bsf	___lwdiv@quotient,0
  6768     1E02                     l2445:
  6769     1E02  3001               	movlw	1
  6770     1E03                     u3065:
  6771     1E03  1003               	clrc
  6772     1E04  0CF6               	rrf	___lwdiv@divisor+1,f
  6773     1E05  0CF5               	rrf	___lwdiv@divisor,f
  6774     1E06  3EFF               	addlw	-1
  6775     1E07  1D03               	skipz
  6776     1E08  2E03               	goto	u3065
  6777     1E09                     l2447:
  6778     1E09  3001               	movlw	1
  6779     1E0A  02FB               	subwf	___lwdiv@counter,f
  6780     1E0B  1D03               	btfss	3,2
  6781     1E0C  2E0E               	goto	u3071
  6782     1E0D  2E0F               	goto	u3070
  6783     1E0E                     u3071:
  6784     1E0E  2DEA               	goto	l2439
  6785     1E0F                     u3070:
  6786     1E0F                     l2449:
  6787     1E0F  087A               	movf	___lwdiv@quotient+1,w
  6788     1E10  00F6               	movwf	?___lwdiv+1
  6789     1E11  0879               	movf	___lwdiv@quotient,w
  6790     1E12  00F5               	movwf	?___lwdiv
  6791     1E13                     l633:
  6792     1E13  0008               	return
  6793     1E14                     __end_of___lwdiv:
  6794                           
  6795                           	psect	text24
  6796     095C                     __ptext24:	
  6797 ;; *************** function ___flmul *****************
  6798 ;; Defined at:
  6799 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcmul.c"
  6800 ;; Parameters:    Size  Location     Type
  6801 ;;  b               4    0[BANK0 ] unsigned int 
  6802 ;;  a               4    4[BANK0 ] unsigned int 
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;  prod            4   20[BANK0 ] struct .
  6805 ;;  grs             4   14[BANK0 ] unsigned long 
  6806 ;;  temp            2   24[BANK0 ] struct .
  6807 ;;  bexp            1   19[BANK0 ] unsigned char 
  6808 ;;  aexp            1   18[BANK0 ] unsigned char 
  6809 ;;  sign            1   13[BANK0 ] unsigned char 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  4    0[BANK0 ] unsigned char 
  6812 ;; Registers used:
  6813 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6819 ;;      Params:         0       8       0       0       0
  6820 ;;      Locals:         0      13       0       0       0
  6821 ;;      Temps:          0       5       0       0       0
  6822 ;;      Totals:         0      26       0       0       0
  6823 ;;Total ram usage:       26 bytes
  6824 ;; Hardware stack levels used: 1
  6825 ;; Hardware stack levels required when called: 1
  6826 ;; This function calls:
  6827 ;;		__Umul8_16
  6828 ;; This function is called by:
  6829 ;;		_fround
  6830 ;;		_scale
  6831 ;;		_sprintf
  6832 ;; This function uses a non-reentrant model
  6833 ;;
  6834                           
  6835     095C                     ___flmul:	
  6836                           ;psect for function ___flmul
  6837                           
  6838     095C                     l2675:	
  6839                           ;incstack = 0
  6840                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6841                           
  6842     095C  1283               	bcf	3,5	;RP0=0, select bank0
  6843     095D  1303               	bcf	3,6	;RP1=0, select bank0
  6844     095E  0823               	movf	___flmul@b+3,w
  6845     095F  3980               	andlw	128
  6846     0960  00AD               	movwf	___flmul@sign
  6847     0961                     l2677:
  6848     0961  0823               	movf	___flmul@b+3,w
  6849     0962  00A8               	movwf	??___flmul
  6850     0963  0728               	addwf	??___flmul,w
  6851     0964  00B3               	movwf	___flmul@bexp
  6852     0965                     l2679:
  6853     0965  1FA2               	btfss	___flmul@b+2,7
  6854     0966  2968               	goto	u3601
  6855     0967  2969               	goto	u3600
  6856     0968                     u3601:
  6857     0968  296A               	goto	l2683
  6858     0969                     u3600:
  6859     0969                     l2681:
  6860     0969  1433               	bsf	___flmul@bexp,0
  6861     096A                     l2683:
  6862     096A  0833               	movf	___flmul@bexp,w
  6863     096B  1903               	btfsc	3,2
  6864     096C  296E               	goto	u3611
  6865     096D  296F               	goto	u3610
  6866     096E                     u3611:
  6867     096E  297E               	goto	l2691
  6868     096F                     u3610:
  6869     096F                     l2685:
  6870     096F  0A33               	incf	___flmul@bexp,w
  6871     0970  1D03               	btfss	3,2
  6872     0971  2973               	goto	u3621
  6873     0972  2974               	goto	u3620
  6874     0973                     u3621:
  6875     0973  297C               	goto	l2689
  6876     0974                     u3620:
  6877     0974                     l2687:
  6878     0974  3000               	movlw	0
  6879     0975  00A3               	movwf	___flmul@b+3
  6880     0976  3000               	movlw	0
  6881     0977  00A2               	movwf	___flmul@b+2
  6882     0978  3000               	movlw	0
  6883     0979  00A1               	movwf	___flmul@b+1
  6884     097A  3000               	movlw	0
  6885     097B  00A0               	movwf	___flmul@b
  6886     097C                     l2689:
  6887     097C  17A2               	bsf	___flmul@b+2,7
  6888     097D  2986               	goto	l2693
  6889     097E                     l2691:
  6890     097E  3000               	movlw	0
  6891     097F  00A3               	movwf	___flmul@b+3
  6892     0980  3000               	movlw	0
  6893     0981  00A2               	movwf	___flmul@b+2
  6894     0982  3000               	movlw	0
  6895     0983  00A1               	movwf	___flmul@b+1
  6896     0984  3000               	movlw	0
  6897     0985  00A0               	movwf	___flmul@b
  6898     0986                     l2693:
  6899     0986  0827               	movf	___flmul@a+3,w
  6900     0987  3980               	andlw	128
  6901     0988  00FF               	movwf	btemp+1
  6902     0989  087F               	movf	btemp+1,w
  6903     098A  06AD               	xorwf	___flmul@sign,f
  6904     098B                     l2695:
  6905     098B  0827               	movf	___flmul@a+3,w
  6906     098C  00A8               	movwf	??___flmul
  6907     098D  0728               	addwf	??___flmul,w
  6908     098E  00B2               	movwf	___flmul@aexp
  6909     098F                     l2697:
  6910     098F  1FA6               	btfss	___flmul@a+2,7
  6911     0990  2992               	goto	u3631
  6912     0991  2993               	goto	u3630
  6913     0992                     u3631:
  6914     0992  2994               	goto	l2701
  6915     0993                     u3630:
  6916     0993                     l2699:
  6917     0993  1432               	bsf	___flmul@aexp,0
  6918     0994                     l2701:
  6919     0994  0832               	movf	___flmul@aexp,w
  6920     0995  1903               	btfsc	3,2
  6921     0996  2998               	goto	u3641
  6922     0997  2999               	goto	u3640
  6923     0998                     u3641:
  6924     0998  29A8               	goto	l2709
  6925     0999                     u3640:
  6926     0999                     l2703:
  6927     0999  0A32               	incf	___flmul@aexp,w
  6928     099A  1D03               	btfss	3,2
  6929     099B  299D               	goto	u3651
  6930     099C  299E               	goto	u3650
  6931     099D                     u3651:
  6932     099D  29A6               	goto	l2707
  6933     099E                     u3650:
  6934     099E                     l2705:
  6935     099E  3000               	movlw	0
  6936     099F  00A7               	movwf	___flmul@a+3
  6937     09A0  3000               	movlw	0
  6938     09A1  00A6               	movwf	___flmul@a+2
  6939     09A2  3000               	movlw	0
  6940     09A3  00A5               	movwf	___flmul@a+1
  6941     09A4  3000               	movlw	0
  6942     09A5  00A4               	movwf	___flmul@a
  6943     09A6                     l2707:
  6944     09A6  17A6               	bsf	___flmul@a+2,7
  6945     09A7  29B0               	goto	l2711
  6946     09A8                     l2709:
  6947     09A8  3000               	movlw	0
  6948     09A9  00A7               	movwf	___flmul@a+3
  6949     09AA  3000               	movlw	0
  6950     09AB  00A6               	movwf	___flmul@a+2
  6951     09AC  3000               	movlw	0
  6952     09AD  00A5               	movwf	___flmul@a+1
  6953     09AE  3000               	movlw	0
  6954     09AF  00A4               	movwf	___flmul@a
  6955     09B0                     l2711:
  6956     09B0  0832               	movf	___flmul@aexp,w
  6957     09B1  1903               	btfsc	3,2
  6958     09B2  29B4               	goto	u3661
  6959     09B3  29B5               	goto	u3660
  6960     09B4                     u3661:
  6961     09B4  29BA               	goto	l2715
  6962     09B5                     u3660:
  6963     09B5                     l2713:
  6964     09B5  0833               	movf	___flmul@bexp,w
  6965     09B6  1D03               	btfss	3,2
  6966     09B7  29B9               	goto	u3671
  6967     09B8  29BA               	goto	u3670
  6968     09B9                     u3671:
  6969     09B9  29C3               	goto	l2719
  6970     09BA                     u3670:
  6971     09BA                     l2715:
  6972     09BA  3000               	movlw	0
  6973     09BB  00A3               	movwf	?___flmul+3
  6974     09BC  3000               	movlw	0
  6975     09BD  00A2               	movwf	?___flmul+2
  6976     09BE  3000               	movlw	0
  6977     09BF  00A1               	movwf	?___flmul+1
  6978     09C0  3000               	movlw	0
  6979     09C1  00A0               	movwf	?___flmul
  6980     09C2  2CA0               	goto	l750
  6981     09C3                     l2719:
  6982     09C3  0820               	movf	___flmul@b,w
  6983     09C4  00F0               	movwf	__Umul8_16@multiplicand
  6984     09C5  0826               	movf	___flmul@a+2,w
  6985     09C6  160A  158A  242A  120A  158A  	fcall	__Umul8_16
  6986     09CB  0871               	movf	?__Umul8_16+1,w
  6987     09CC  1283               	bcf	3,5	;RP0=0, select bank0
  6988     09CD  1303               	bcf	3,6	;RP1=0, select bank0
  6989     09CE  00B9               	movwf	___flmul@temp+1
  6990     09CF  0870               	movf	?__Umul8_16,w
  6991     09D0  00B8               	movwf	___flmul@temp
  6992     09D1                     l2721:
  6993     09D1  0838               	movf	___flmul@temp,w
  6994     09D2  00A8               	movwf	??___flmul
  6995     09D3  01A9               	clrf	??___flmul+1
  6996     09D4  01AA               	clrf	??___flmul+2
  6997     09D5  01AB               	clrf	??___flmul+3
  6998     09D6  082B               	movf	??___flmul+3,w
  6999     09D7  00B1               	movwf	___flmul@grs+3
  7000     09D8  082A               	movf	??___flmul+2,w
  7001     09D9  00B0               	movwf	___flmul@grs+2
  7002     09DA  0829               	movf	??___flmul+1,w
  7003     09DB  00AF               	movwf	___flmul@grs+1
  7004     09DC  0828               	movf	??___flmul,w
  7005     09DD  00AE               	movwf	___flmul@grs
  7006     09DE                     l2723:
  7007     09DE  0839               	movf	___flmul@temp+1,w
  7008     09DF  00A8               	movwf	??___flmul
  7009     09E0  01A9               	clrf	??___flmul+1
  7010     09E1  01AA               	clrf	??___flmul+2
  7011     09E2  01AB               	clrf	??___flmul+3
  7012     09E3  082B               	movf	??___flmul+3,w
  7013     09E4  00B7               	movwf	___flmul@prod+3
  7014     09E5  082A               	movf	??___flmul+2,w
  7015     09E6  00B6               	movwf	___flmul@prod+2
  7016     09E7  0829               	movf	??___flmul+1,w
  7017     09E8  00B5               	movwf	___flmul@prod+1
  7018     09E9  0828               	movf	??___flmul,w
  7019     09EA  00B4               	movwf	___flmul@prod
  7020     09EB  0821               	movf	___flmul@b+1,w
  7021     09EC  00F0               	movwf	__Umul8_16@multiplicand
  7022     09ED  0825               	movf	___flmul@a+1,w
  7023     09EE  160A  158A  242A  120A  158A  	fcall	__Umul8_16
  7024     09F3  0871               	movf	?__Umul8_16+1,w
  7025     09F4  1283               	bcf	3,5	;RP0=0, select bank0
  7026     09F5  1303               	bcf	3,6	;RP1=0, select bank0
  7027     09F6  00B9               	movwf	___flmul@temp+1
  7028     09F7  0870               	movf	?__Umul8_16,w
  7029     09F8  00B8               	movwf	___flmul@temp
  7030     09F9                     l2725:
  7031     09F9  0838               	movf	___flmul@temp,w
  7032     09FA  00A8               	movwf	??___flmul
  7033     09FB  01A9               	clrf	??___flmul+1
  7034     09FC  01AA               	clrf	??___flmul+2
  7035     09FD  01AB               	clrf	??___flmul+3
  7036     09FE  0828               	movf	??___flmul,w
  7037     09FF  07AE               	addwf	___flmul@grs,f
  7038     0A00  0829               	movf	??___flmul+1,w
  7039     0A01  1103               	clrz
  7040     0A02  1803               	skipnc
  7041     0A03  3E01               	addlw	1
  7042     0A04  1903               	skipnz
  7043     0A05  2A07               	goto	u3681
  7044     0A06  07AF               	addwf	___flmul@grs+1,f
  7045     0A07                     u3681:
  7046     0A07  082A               	movf	??___flmul+2,w
  7047     0A08  1103               	clrz
  7048     0A09  1803               	skipnc
  7049     0A0A  3E01               	addlw	1
  7050     0A0B  1903               	skipnz
  7051     0A0C  2A0E               	goto	u3682
  7052     0A0D  07B0               	addwf	___flmul@grs+2,f
  7053     0A0E                     u3682:
  7054     0A0E  082B               	movf	??___flmul+3,w
  7055     0A0F  1103               	clrz
  7056     0A10  1803               	skipnc
  7057     0A11  3E01               	addlw	1
  7058     0A12  1903               	skipnz
  7059     0A13  2A15               	goto	u3683
  7060     0A14  07B1               	addwf	___flmul@grs+3,f
  7061     0A15                     u3683:
  7062     0A15                     l2727:
  7063     0A15  0839               	movf	___flmul@temp+1,w
  7064     0A16  00A8               	movwf	??___flmul
  7065     0A17  01A9               	clrf	??___flmul+1
  7066     0A18  01AA               	clrf	??___flmul+2
  7067     0A19  01AB               	clrf	??___flmul+3
  7068     0A1A  0828               	movf	??___flmul,w
  7069     0A1B  07B4               	addwf	___flmul@prod,f
  7070     0A1C  0829               	movf	??___flmul+1,w
  7071     0A1D  1103               	clrz
  7072     0A1E  1803               	skipnc
  7073     0A1F  3E01               	addlw	1
  7074     0A20  1903               	skipnz
  7075     0A21  2A23               	goto	u3691
  7076     0A22  07B5               	addwf	___flmul@prod+1,f
  7077     0A23                     u3691:
  7078     0A23  082A               	movf	??___flmul+2,w
  7079     0A24  1103               	clrz
  7080     0A25  1803               	skipnc
  7081     0A26  3E01               	addlw	1
  7082     0A27  1903               	skipnz
  7083     0A28  2A2A               	goto	u3692
  7084     0A29  07B6               	addwf	___flmul@prod+2,f
  7085     0A2A                     u3692:
  7086     0A2A  082B               	movf	??___flmul+3,w
  7087     0A2B  1103               	clrz
  7088     0A2C  1803               	skipnc
  7089     0A2D  3E01               	addlw	1
  7090     0A2E  1903               	skipnz
  7091     0A2F  2A31               	goto	u3693
  7092     0A30  07B7               	addwf	___flmul@prod+3,f
  7093     0A31                     u3693:
  7094     0A31  0822               	movf	___flmul@b+2,w
  7095     0A32  00F0               	movwf	__Umul8_16@multiplicand
  7096     0A33  0824               	movf	___flmul@a,w
  7097     0A34  160A  158A  242A  120A  158A  	fcall	__Umul8_16
  7098     0A39  0871               	movf	?__Umul8_16+1,w
  7099     0A3A  1283               	bcf	3,5	;RP0=0, select bank0
  7100     0A3B  1303               	bcf	3,6	;RP1=0, select bank0
  7101     0A3C  00B9               	movwf	___flmul@temp+1
  7102     0A3D  0870               	movf	?__Umul8_16,w
  7103     0A3E  00B8               	movwf	___flmul@temp
  7104     0A3F                     l2729:
  7105     0A3F  0838               	movf	___flmul@temp,w
  7106     0A40  00A8               	movwf	??___flmul
  7107     0A41  01A9               	clrf	??___flmul+1
  7108     0A42  01AA               	clrf	??___flmul+2
  7109     0A43  01AB               	clrf	??___flmul+3
  7110     0A44  0828               	movf	??___flmul,w
  7111     0A45  07AE               	addwf	___flmul@grs,f
  7112     0A46  0829               	movf	??___flmul+1,w
  7113     0A47  1103               	clrz
  7114     0A48  1803               	skipnc
  7115     0A49  3E01               	addlw	1
  7116     0A4A  1903               	skipnz
  7117     0A4B  2A4D               	goto	u3701
  7118     0A4C  07AF               	addwf	___flmul@grs+1,f
  7119     0A4D                     u3701:
  7120     0A4D  082A               	movf	??___flmul+2,w
  7121     0A4E  1103               	clrz
  7122     0A4F  1803               	skipnc
  7123     0A50  3E01               	addlw	1
  7124     0A51  1903               	skipnz
  7125     0A52  2A54               	goto	u3702
  7126     0A53  07B0               	addwf	___flmul@grs+2,f
  7127     0A54                     u3702:
  7128     0A54  082B               	movf	??___flmul+3,w
  7129     0A55  1103               	clrz
  7130     0A56  1803               	skipnc
  7131     0A57  3E01               	addlw	1
  7132     0A58  1903               	skipnz
  7133     0A59  2A5B               	goto	u3703
  7134     0A5A  07B1               	addwf	___flmul@grs+3,f
  7135     0A5B                     u3703:
  7136     0A5B                     l2731:
  7137     0A5B  0839               	movf	___flmul@temp+1,w
  7138     0A5C  00A8               	movwf	??___flmul
  7139     0A5D  01A9               	clrf	??___flmul+1
  7140     0A5E  01AA               	clrf	??___flmul+2
  7141     0A5F  01AB               	clrf	??___flmul+3
  7142     0A60  0828               	movf	??___flmul,w
  7143     0A61  07B4               	addwf	___flmul@prod,f
  7144     0A62  0829               	movf	??___flmul+1,w
  7145     0A63  1103               	clrz
  7146     0A64  1803               	skipnc
  7147     0A65  3E01               	addlw	1
  7148     0A66  1903               	skipnz
  7149     0A67  2A69               	goto	u3711
  7150     0A68  07B5               	addwf	___flmul@prod+1,f
  7151     0A69                     u3711:
  7152     0A69  082A               	movf	??___flmul+2,w
  7153     0A6A  1103               	clrz
  7154     0A6B  1803               	skipnc
  7155     0A6C  3E01               	addlw	1
  7156     0A6D  1903               	skipnz
  7157     0A6E  2A70               	goto	u3712
  7158     0A6F  07B6               	addwf	___flmul@prod+2,f
  7159     0A70                     u3712:
  7160     0A70  082B               	movf	??___flmul+3,w
  7161     0A71  1103               	clrz
  7162     0A72  1803               	skipnc
  7163     0A73  3E01               	addlw	1
  7164     0A74  1903               	skipnz
  7165     0A75  2A77               	goto	u3713
  7166     0A76  07B7               	addwf	___flmul@prod+3,f
  7167     0A77                     u3713:
  7168     0A77                     l2733:
  7169     0A77  3008               	movlw	8
  7170     0A78  00A8               	movwf	??___flmul
  7171     0A79                     u3725:
  7172     0A79  1003               	clrc
  7173     0A7A  0DAE               	rlf	___flmul@grs,f
  7174     0A7B  0DAF               	rlf	___flmul@grs+1,f
  7175     0A7C  0DB0               	rlf	___flmul@grs+2,f
  7176     0A7D  0DB1               	rlf	___flmul@grs+3,f
  7177     0A7E  0BA8               	decfsz	??___flmul,f
  7178     0A7F  2A79               	goto	u3725
  7179     0A80                     l2735:
  7180     0A80  0821               	movf	___flmul@b+1,w
  7181     0A81  00F0               	movwf	__Umul8_16@multiplicand
  7182     0A82  0824               	movf	___flmul@a,w
  7183     0A83  160A  158A  242A  120A  158A  	fcall	__Umul8_16
  7184     0A88  0871               	movf	?__Umul8_16+1,w
  7185     0A89  1283               	bcf	3,5	;RP0=0, select bank0
  7186     0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  7187     0A8B  00B9               	movwf	___flmul@temp+1
  7188     0A8C  0870               	movf	?__Umul8_16,w
  7189     0A8D  00B8               	movwf	___flmul@temp
  7190     0A8E                     l2737:
  7191     0A8E  0838               	movf	___flmul@temp,w
  7192     0A8F  00A8               	movwf	??___flmul
  7193     0A90  0839               	movf	___flmul@temp+1,w
  7194     0A91  00A9               	movwf	??___flmul+1
  7195     0A92  01AA               	clrf	??___flmul+2
  7196     0A93  01AB               	clrf	??___flmul+3
  7197     0A94  0828               	movf	??___flmul,w
  7198     0A95  07AE               	addwf	___flmul@grs,f
  7199     0A96  0829               	movf	??___flmul+1,w
  7200     0A97  1103               	clrz
  7201     0A98  1803               	skipnc
  7202     0A99  3E01               	addlw	1
  7203     0A9A  1903               	skipnz
  7204     0A9B  2A9D               	goto	u3731
  7205     0A9C  07AF               	addwf	___flmul@grs+1,f
  7206     0A9D                     u3731:
  7207     0A9D  082A               	movf	??___flmul+2,w
  7208     0A9E  1103               	clrz
  7209     0A9F  1803               	skipnc
  7210     0AA0  3E01               	addlw	1
  7211     0AA1  1903               	skipnz
  7212     0AA2  2AA4               	goto	u3732
  7213     0AA3  07B0               	addwf	___flmul@grs+2,f
  7214     0AA4                     u3732:
  7215     0AA4  082B               	movf	??___flmul+3,w
  7216     0AA5  1103               	clrz
  7217     0AA6  1803               	skipnc
  7218     0AA7  3E01               	addlw	1
  7219     0AA8  1903               	skipnz
  7220     0AA9  2AAB               	goto	u3733
  7221     0AAA  07B1               	addwf	___flmul@grs+3,f
  7222     0AAB                     u3733:
  7223     0AAB                     l2739:
  7224     0AAB  0820               	movf	___flmul@b,w
  7225     0AAC  00F0               	movwf	__Umul8_16@multiplicand
  7226     0AAD  0825               	movf	___flmul@a+1,w
  7227     0AAE  160A  158A  242A  120A  158A  	fcall	__Umul8_16
  7228     0AB3  0871               	movf	?__Umul8_16+1,w
  7229     0AB4  1283               	bcf	3,5	;RP0=0, select bank0
  7230     0AB5  1303               	bcf	3,6	;RP1=0, select bank0
  7231     0AB6  00B9               	movwf	___flmul@temp+1
  7232     0AB7  0870               	movf	?__Umul8_16,w
  7233     0AB8  00B8               	movwf	___flmul@temp
  7234     0AB9                     l2741:
  7235     0AB9  0838               	movf	___flmul@temp,w
  7236     0ABA  00A8               	movwf	??___flmul
  7237     0ABB  0839               	movf	___flmul@temp+1,w
  7238     0ABC  00A9               	movwf	??___flmul+1
  7239     0ABD  01AA               	clrf	??___flmul+2
  7240     0ABE  01AB               	clrf	??___flmul+3
  7241     0ABF  0828               	movf	??___flmul,w
  7242     0AC0  07AE               	addwf	___flmul@grs,f
  7243     0AC1  0829               	movf	??___flmul+1,w
  7244     0AC2  1103               	clrz
  7245     0AC3  1803               	skipnc
  7246     0AC4  3E01               	addlw	1
  7247     0AC5  1903               	skipnz
  7248     0AC6  2AC8               	goto	u3741
  7249     0AC7  07AF               	addwf	___flmul@grs+1,f
  7250     0AC8                     u3741:
  7251     0AC8  082A               	movf	??___flmul+2,w
  7252     0AC9  1103               	clrz
  7253     0ACA  1803               	skipnc
  7254     0ACB  3E01               	addlw	1
  7255     0ACC  1903               	skipnz
  7256     0ACD  2ACF               	goto	u3742
  7257     0ACE  07B0               	addwf	___flmul@grs+2,f
  7258     0ACF                     u3742:
  7259     0ACF  082B               	movf	??___flmul+3,w
  7260     0AD0  1103               	clrz
  7261     0AD1  1803               	skipnc
  7262     0AD2  3E01               	addlw	1
  7263     0AD3  1903               	skipnz
  7264     0AD4  2AD6               	goto	u3743
  7265     0AD5  07B1               	addwf	___flmul@grs+3,f
  7266     0AD6                     u3743:
  7267     0AD6                     l2743:
  7268     0AD6  3008               	movlw	8
  7269     0AD7  00A8               	movwf	??___flmul
  7270     0AD8                     u3755:
  7271     0AD8  1003               	clrc
  7272     0AD9  0DAE               	rlf	___flmul@grs,f
  7273     0ADA  0DAF               	rlf	___flmul@grs+1,f
  7274     0ADB  0DB0               	rlf	___flmul@grs+2,f
  7275     0ADC  0DB1               	rlf	___flmul@grs+3,f
  7276     0ADD  0BA8               	decfsz	??___flmul,f
  7277     0ADE  2AD8               	goto	u3755
  7278     0ADF  0820               	movf	___flmul@b,w
  7279     0AE0  00F0               	movwf	__Umul8_16@multiplicand
  7280     0AE1  0824               	movf	___flmul@a,w
  7281     0AE2  160A  158A  242A  120A  158A  	fcall	__Umul8_16
  7282     0AE7  0871               	movf	?__Umul8_16+1,w
  7283     0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  7284     0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  7285     0AEA  00B9               	movwf	___flmul@temp+1
  7286     0AEB  0870               	movf	?__Umul8_16,w
  7287     0AEC  00B8               	movwf	___flmul@temp
  7288     0AED                     l2745:
  7289     0AED  0838               	movf	___flmul@temp,w
  7290     0AEE  00A8               	movwf	??___flmul
  7291     0AEF  0839               	movf	___flmul@temp+1,w
  7292     0AF0  00A9               	movwf	??___flmul+1
  7293     0AF1  01AA               	clrf	??___flmul+2
  7294     0AF2  01AB               	clrf	??___flmul+3
  7295     0AF3  0828               	movf	??___flmul,w
  7296     0AF4  07AE               	addwf	___flmul@grs,f
  7297     0AF5  0829               	movf	??___flmul+1,w
  7298     0AF6  1103               	clrz
  7299     0AF7  1803               	skipnc
  7300     0AF8  3E01               	addlw	1
  7301     0AF9  1903               	skipnz
  7302     0AFA  2AFC               	goto	u3761
  7303     0AFB  07AF               	addwf	___flmul@grs+1,f
  7304     0AFC                     u3761:
  7305     0AFC  082A               	movf	??___flmul+2,w
  7306     0AFD  1103               	clrz
  7307     0AFE  1803               	skipnc
  7308     0AFF  3E01               	addlw	1
  7309     0B00  1903               	skipnz
  7310     0B01  2B03               	goto	u3762
  7311     0B02  07B0               	addwf	___flmul@grs+2,f
  7312     0B03                     u3762:
  7313     0B03  082B               	movf	??___flmul+3,w
  7314     0B04  1103               	clrz
  7315     0B05  1803               	skipnc
  7316     0B06  3E01               	addlw	1
  7317     0B07  1903               	skipnz
  7318     0B08  2B0A               	goto	u3763
  7319     0B09  07B1               	addwf	___flmul@grs+3,f
  7320     0B0A                     u3763:
  7321     0B0A                     l2747:
  7322     0B0A  0821               	movf	___flmul@b+1,w
  7323     0B0B  00F0               	movwf	__Umul8_16@multiplicand
  7324     0B0C  0826               	movf	___flmul@a+2,w
  7325     0B0D  160A  158A  242A  120A  158A  	fcall	__Umul8_16
  7326     0B12  0871               	movf	?__Umul8_16+1,w
  7327     0B13  1283               	bcf	3,5	;RP0=0, select bank0
  7328     0B14  1303               	bcf	3,6	;RP1=0, select bank0
  7329     0B15  00B9               	movwf	___flmul@temp+1
  7330     0B16  0870               	movf	?__Umul8_16,w
  7331     0B17  00B8               	movwf	___flmul@temp
  7332     0B18  0838               	movf	___flmul@temp,w
  7333     0B19  00A8               	movwf	??___flmul
  7334     0B1A  0839               	movf	___flmul@temp+1,w
  7335     0B1B  00A9               	movwf	??___flmul+1
  7336     0B1C  01AA               	clrf	??___flmul+2
  7337     0B1D  01AB               	clrf	??___flmul+3
  7338     0B1E  0828               	movf	??___flmul,w
  7339     0B1F  07B4               	addwf	___flmul@prod,f
  7340     0B20  0829               	movf	??___flmul+1,w
  7341     0B21  1103               	clrz
  7342     0B22  1803               	skipnc
  7343     0B23  3E01               	addlw	1
  7344     0B24  1903               	skipnz
  7345     0B25  2B27               	goto	u3771
  7346     0B26  07B5               	addwf	___flmul@prod+1,f
  7347     0B27                     u3771:
  7348     0B27  082A               	movf	??___flmul+2,w
  7349     0B28  1103               	clrz
  7350     0B29  1803               	skipnc
  7351     0B2A  3E01               	addlw	1
  7352     0B2B  1903               	skipnz
  7353     0B2C  2B2E               	goto	u3772
  7354     0B2D  07B6               	addwf	___flmul@prod+2,f
  7355     0B2E                     u3772:
  7356     0B2E  082B               	movf	??___flmul+3,w
  7357     0B2F  1103               	clrz
  7358     0B30  1803               	skipnc
  7359     0B31  3E01               	addlw	1
  7360     0B32  1903               	skipnz
  7361     0B33  2B35               	goto	u3773
  7362     0B34  07B7               	addwf	___flmul@prod+3,f
  7363     0B35                     u3773:
  7364     0B35                     l2749:
  7365     0B35  0822               	movf	___flmul@b+2,w
  7366     0B36  00F0               	movwf	__Umul8_16@multiplicand
  7367     0B37  0825               	movf	___flmul@a+1,w
  7368     0B38  160A  158A  242A  120A  158A  	fcall	__Umul8_16
  7369     0B3D  0871               	movf	?__Umul8_16+1,w
  7370     0B3E  1283               	bcf	3,5	;RP0=0, select bank0
  7371     0B3F  1303               	bcf	3,6	;RP1=0, select bank0
  7372     0B40  00B9               	movwf	___flmul@temp+1
  7373     0B41  0870               	movf	?__Umul8_16,w
  7374     0B42  00B8               	movwf	___flmul@temp
  7375     0B43                     l2751:
  7376     0B43  0838               	movf	___flmul@temp,w
  7377     0B44  00A8               	movwf	??___flmul
  7378     0B45  0839               	movf	___flmul@temp+1,w
  7379     0B46  00A9               	movwf	??___flmul+1
  7380     0B47  01AA               	clrf	??___flmul+2
  7381     0B48  01AB               	clrf	??___flmul+3
  7382     0B49  0828               	movf	??___flmul,w
  7383     0B4A  07B4               	addwf	___flmul@prod,f
  7384     0B4B  0829               	movf	??___flmul+1,w
  7385     0B4C  1103               	clrz
  7386     0B4D  1803               	skipnc
  7387     0B4E  3E01               	addlw	1
  7388     0B4F  1903               	skipnz
  7389     0B50  2B52               	goto	u3781
  7390     0B51  07B5               	addwf	___flmul@prod+1,f
  7391     0B52                     u3781:
  7392     0B52  082A               	movf	??___flmul+2,w
  7393     0B53  1103               	clrz
  7394     0B54  1803               	skipnc
  7395     0B55  3E01               	addlw	1
  7396     0B56  1903               	skipnz
  7397     0B57  2B59               	goto	u3782
  7398     0B58  07B6               	addwf	___flmul@prod+2,f
  7399     0B59                     u3782:
  7400     0B59  082B               	movf	??___flmul+3,w
  7401     0B5A  1103               	clrz
  7402     0B5B  1803               	skipnc
  7403     0B5C  3E01               	addlw	1
  7404     0B5D  1903               	skipnz
  7405     0B5E  2B60               	goto	u3783
  7406     0B5F  07B7               	addwf	___flmul@prod+3,f
  7407     0B60                     u3783:
  7408     0B60  0822               	movf	___flmul@b+2,w
  7409     0B61  00F0               	movwf	__Umul8_16@multiplicand
  7410     0B62  0826               	movf	___flmul@a+2,w
  7411     0B63  160A  158A  242A  120A  158A  	fcall	__Umul8_16
  7412     0B68  0871               	movf	?__Umul8_16+1,w
  7413     0B69  1283               	bcf	3,5	;RP0=0, select bank0
  7414     0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  7415     0B6B  00B9               	movwf	___flmul@temp+1
  7416     0B6C  0870               	movf	?__Umul8_16,w
  7417     0B6D  00B8               	movwf	___flmul@temp
  7418     0B6E                     l2753:
  7419     0B6E  0838               	movf	___flmul@temp,w
  7420     0B6F  00A8               	movwf	??___flmul
  7421     0B70  0839               	movf	___flmul@temp+1,w
  7422     0B71  00A9               	movwf	??___flmul+1
  7423     0B72  01AA               	clrf	??___flmul+2
  7424     0B73  01AB               	clrf	??___flmul+3
  7425     0B74  3008               	movlw	8
  7426     0B75                     u3795:
  7427     0B75  1003               	clrc
  7428     0B76  0DA8               	rlf	??___flmul,f
  7429     0B77  0DA9               	rlf	??___flmul+1,f
  7430     0B78  0DAA               	rlf	??___flmul+2,f
  7431     0B79  0DAB               	rlf	??___flmul+3,f
  7432     0B7A                     u3790:
  7433     0B7A  3EFF               	addlw	-1
  7434     0B7B  1D03               	skipz
  7435     0B7C  2B75               	goto	u3795
  7436     0B7D  0828               	movf	??___flmul,w
  7437     0B7E  07B4               	addwf	___flmul@prod,f
  7438     0B7F  0829               	movf	??___flmul+1,w
  7439     0B80  1103               	clrz
  7440     0B81  1803               	skipnc
  7441     0B82  3E01               	addlw	1
  7442     0B83  1903               	skipnz
  7443     0B84  2B86               	goto	u3801
  7444     0B85  07B5               	addwf	___flmul@prod+1,f
  7445     0B86                     u3801:
  7446     0B86  082A               	movf	??___flmul+2,w
  7447     0B87  1103               	clrz
  7448     0B88  1803               	skipnc
  7449     0B89  3E01               	addlw	1
  7450     0B8A  1903               	skipnz
  7451     0B8B  2B8D               	goto	u3802
  7452     0B8C  07B6               	addwf	___flmul@prod+2,f
  7453     0B8D                     u3802:
  7454     0B8D  082B               	movf	??___flmul+3,w
  7455     0B8E  1103               	clrz
  7456     0B8F  1803               	skipnc
  7457     0B90  3E01               	addlw	1
  7458     0B91  1903               	skipnz
  7459     0B92  2B94               	goto	u3803
  7460     0B93  07B7               	addwf	___flmul@prod+3,f
  7461     0B94                     u3803:
  7462     0B94                     l2755:
  7463     0B94  082E               	movf	___flmul@grs,w
  7464     0B95  00A8               	movwf	??___flmul
  7465     0B96  082F               	movf	___flmul@grs+1,w
  7466     0B97  00A9               	movwf	??___flmul+1
  7467     0B98  0830               	movf	___flmul@grs+2,w
  7468     0B99  00AA               	movwf	??___flmul+2
  7469     0B9A  0831               	movf	___flmul@grs+3,w
  7470     0B9B  00AB               	movwf	??___flmul+3
  7471     0B9C  3018               	movlw	24
  7472     0B9D                     u3815:
  7473     0B9D  1003               	clrc
  7474     0B9E  0CAB               	rrf	??___flmul+3,f
  7475     0B9F  0CAA               	rrf	??___flmul+2,f
  7476     0BA0  0CA9               	rrf	??___flmul+1,f
  7477     0BA1  0CA8               	rrf	??___flmul,f
  7478     0BA2                     u3810:
  7479     0BA2  3EFF               	addlw	-1
  7480     0BA3  1D03               	skipz
  7481     0BA4  2B9D               	goto	u3815
  7482     0BA5  0828               	movf	??___flmul,w
  7483     0BA6  07B4               	addwf	___flmul@prod,f
  7484     0BA7  0829               	movf	??___flmul+1,w
  7485     0BA8  1103               	clrz
  7486     0BA9  1803               	skipnc
  7487     0BAA  3E01               	addlw	1
  7488     0BAB  1903               	skipnz
  7489     0BAC  2BAE               	goto	u3821
  7490     0BAD  07B5               	addwf	___flmul@prod+1,f
  7491     0BAE                     u3821:
  7492     0BAE  082A               	movf	??___flmul+2,w
  7493     0BAF  1103               	clrz
  7494     0BB0  1803               	skipnc
  7495     0BB1  3E01               	addlw	1
  7496     0BB2  1903               	skipnz
  7497     0BB3  2BB5               	goto	u3822
  7498     0BB4  07B6               	addwf	___flmul@prod+2,f
  7499     0BB5                     u3822:
  7500     0BB5  082B               	movf	??___flmul+3,w
  7501     0BB6  1103               	clrz
  7502     0BB7  1803               	skipnc
  7503     0BB8  3E01               	addlw	1
  7504     0BB9  1903               	skipnz
  7505     0BBA  2BBC               	goto	u3823
  7506     0BBB  07B7               	addwf	___flmul@prod+3,f
  7507     0BBC                     u3823:
  7508     0BBC                     l2757:
  7509     0BBC  3008               	movlw	8
  7510     0BBD  00A8               	movwf	??___flmul
  7511     0BBE                     u3835:
  7512     0BBE  1003               	clrc
  7513     0BBF  0DAE               	rlf	___flmul@grs,f
  7514     0BC0  0DAF               	rlf	___flmul@grs+1,f
  7515     0BC1  0DB0               	rlf	___flmul@grs+2,f
  7516     0BC2  0DB1               	rlf	___flmul@grs+3,f
  7517     0BC3  0BA8               	decfsz	??___flmul,f
  7518     0BC4  2BBE               	goto	u3835
  7519     0BC5                     l2759:
  7520     0BC5  0833               	movf	___flmul@bexp,w
  7521     0BC6  0732               	addwf	___flmul@aexp,w
  7522     0BC7  00A8               	movwf	??___flmul
  7523     0BC8  01A9               	clrf	??___flmul+1
  7524     0BC9  0DA9               	rlf	??___flmul+1,f
  7525     0BCA  0828               	movf	??___flmul,w
  7526     0BCB  3E82               	addlw	130
  7527     0BCC  00B8               	movwf	___flmul@temp
  7528     0BCD  0829               	movf	??___flmul+1,w
  7529     0BCE  1803               	skipnc
  7530     0BCF  3E01               	addlw	1
  7531     0BD0  3EFF               	addlw	255
  7532     0BD1  00B9               	movwf	___flmul@temp+1
  7533     0BD2  2BF0               	goto	l2771
  7534     0BD3                     l2761:
  7535     0BD3  3001               	movlw	1
  7536     0BD4  00A8               	movwf	??___flmul
  7537     0BD5                     u3845:
  7538     0BD5  1003               	clrc
  7539     0BD6  0DB4               	rlf	___flmul@prod,f
  7540     0BD7  0DB5               	rlf	___flmul@prod+1,f
  7541     0BD8  0DB6               	rlf	___flmul@prod+2,f
  7542     0BD9  0DB7               	rlf	___flmul@prod+3,f
  7543     0BDA  0BA8               	decfsz	??___flmul,f
  7544     0BDB  2BD5               	goto	u3845
  7545     0BDC                     l2763:
  7546     0BDC  1FB1               	btfss	___flmul@grs+3,7
  7547     0BDD  2BDF               	goto	u3851
  7548     0BDE  2BE0               	goto	u3850
  7549     0BDF                     u3851:
  7550     0BDF  2BE1               	goto	l2767
  7551     0BE0                     u3850:
  7552     0BE0                     l2765:
  7553     0BE0  1434               	bsf	___flmul@prod,0
  7554     0BE1                     l2767:
  7555     0BE1  3001               	movlw	1
  7556     0BE2  00A8               	movwf	??___flmul
  7557     0BE3                     u3865:
  7558     0BE3  1003               	clrc
  7559     0BE4  0DAE               	rlf	___flmul@grs,f
  7560     0BE5  0DAF               	rlf	___flmul@grs+1,f
  7561     0BE6  0DB0               	rlf	___flmul@grs+2,f
  7562     0BE7  0DB1               	rlf	___flmul@grs+3,f
  7563     0BE8  0BA8               	decfsz	??___flmul,f
  7564     0BE9  2BE3               	goto	u3865
  7565     0BEA                     l2769:
  7566     0BEA  30FF               	movlw	255
  7567     0BEB  07B8               	addwf	___flmul@temp,f
  7568     0BEC  1803               	skipnc
  7569     0BED  0AB9               	incf	___flmul@temp+1,f
  7570     0BEE  30FF               	movlw	255
  7571     0BEF  07B9               	addwf	___flmul@temp+1,f
  7572     0BF0                     l2771:
  7573     0BF0  1FB6               	btfss	___flmul@prod+2,7
  7574     0BF1  2BF3               	goto	u3871
  7575     0BF2  2BF4               	goto	u3870
  7576     0BF3                     u3871:
  7577     0BF3  2BD3               	goto	l2761
  7578     0BF4                     u3870:
  7579     0BF4                     l2773:
  7580     0BF4  01B2               	clrf	___flmul@aexp
  7581     0BF5                     l2775:
  7582     0BF5  1FB1               	btfss	___flmul@grs+3,7
  7583     0BF6  2BF8               	goto	u3881
  7584     0BF7  2BF9               	goto	u3880
  7585     0BF8                     u3881:
  7586     0BF8  2C15               	goto	l2783
  7587     0BF9                     u3880:
  7588     0BF9                     l2777:
  7589     0BF9  30FF               	movlw	255
  7590     0BFA  052E               	andwf	___flmul@grs,w
  7591     0BFB  00A8               	movwf	??___flmul
  7592     0BFC  30FF               	movlw	255
  7593     0BFD  052F               	andwf	___flmul@grs+1,w
  7594     0BFE  00A9               	movwf	??___flmul+1
  7595     0BFF  30FF               	movlw	255
  7596     0C00  0530               	andwf	___flmul@grs+2,w
  7597     0C01  00AA               	movwf	??___flmul+2
  7598     0C02  307F               	movlw	127
  7599     0C03  0531               	andwf	___flmul@grs+3,w
  7600     0C04  00AB               	movwf	??___flmul+3
  7601     0C05  082B               	movf	??___flmul+3,w
  7602     0C06  042A               	iorwf	??___flmul+2,w
  7603     0C07  0429               	iorwf	??___flmul+1,w
  7604     0C08  0428               	iorwf	??___flmul,w
  7605     0C09  1903               	skipnz
  7606     0C0A  2C0C               	goto	u3891
  7607     0C0B  2C0D               	goto	u3890
  7608     0C0C                     u3891:
  7609     0C0C  2C10               	goto	l756
  7610     0C0D                     u3890:
  7611     0C0D                     l2779:
  7612     0C0D  01B2               	clrf	___flmul@aexp
  7613     0C0E  0AB2               	incf	___flmul@aexp,f
  7614     0C0F  2C15               	goto	l2783
  7615     0C10                     l756:
  7616     0C10  1C34               	btfss	___flmul@prod,0
  7617     0C11  2C13               	goto	u3901
  7618     0C12  2C14               	goto	u3900
  7619     0C13                     u3901:
  7620     0C13  2C15               	goto	l2783
  7621     0C14                     u3900:
  7622     0C14  2C0D               	goto	l2779
  7623     0C15                     l2783:
  7624     0C15  0832               	movf	___flmul@aexp,w
  7625     0C16  1903               	btfsc	3,2
  7626     0C17  2C19               	goto	u3911
  7627     0C18  2C1A               	goto	u3910
  7628     0C19                     u3911:
  7629     0C19  2C4B               	goto	l2793
  7630     0C1A                     u3910:
  7631     0C1A                     l2785:
  7632     0C1A  3001               	movlw	1
  7633     0C1B  07B4               	addwf	___flmul@prod,f
  7634     0C1C  3000               	movlw	0
  7635     0C1D  1803               	skipnc
  7636     0C1E  3001               	movlw	1
  7637     0C1F  07B5               	addwf	___flmul@prod+1,f
  7638     0C20  3000               	movlw	0
  7639     0C21  1803               	skipnc
  7640     0C22  3001               	movlw	1
  7641     0C23  07B6               	addwf	___flmul@prod+2,f
  7642     0C24  3000               	movlw	0
  7643     0C25  1803               	skipnc
  7644     0C26  3001               	movlw	1
  7645     0C27  07B7               	addwf	___flmul@prod+3,f
  7646     0C28                     l2787:
  7647     0C28  1C37               	btfss	___flmul@prod+3,0
  7648     0C29  2C2B               	goto	u3921
  7649     0C2A  2C2C               	goto	u3920
  7650     0C2B                     u3921:
  7651     0C2B  2C4B               	goto	l2793
  7652     0C2C                     u3920:
  7653     0C2C                     l2789:
  7654     0C2C  0834               	movf	___flmul@prod,w
  7655     0C2D  00A8               	movwf	??___flmul
  7656     0C2E  0835               	movf	___flmul@prod+1,w
  7657     0C2F  00A9               	movwf	??___flmul+1
  7658     0C30  0836               	movf	___flmul@prod+2,w
  7659     0C31  00AA               	movwf	??___flmul+2
  7660     0C32  0837               	movf	___flmul@prod+3,w
  7661     0C33  00AB               	movwf	??___flmul+3
  7662     0C34  3001               	movlw	1
  7663     0C35  00AC               	movwf	??___flmul+4
  7664     0C36                     u3935:
  7665     0C36  0D2B               	rlf	??___flmul+3,w
  7666     0C37  0CAB               	rrf	??___flmul+3,f
  7667     0C38  0CAA               	rrf	??___flmul+2,f
  7668     0C39  0CA9               	rrf	??___flmul+1,f
  7669     0C3A  0CA8               	rrf	??___flmul,f
  7670     0C3B                     u3930:
  7671     0C3B  0BAC               	decfsz	??___flmul+4,f
  7672     0C3C  2C36               	goto	u3935
  7673     0C3D  082B               	movf	??___flmul+3,w
  7674     0C3E  00B7               	movwf	___flmul@prod+3
  7675     0C3F  082A               	movf	??___flmul+2,w
  7676     0C40  00B6               	movwf	___flmul@prod+2
  7677     0C41  0829               	movf	??___flmul+1,w
  7678     0C42  00B5               	movwf	___flmul@prod+1
  7679     0C43  0828               	movf	??___flmul,w
  7680     0C44  00B4               	movwf	___flmul@prod
  7681     0C45                     l2791:
  7682     0C45  3001               	movlw	1
  7683     0C46  07B8               	addwf	___flmul@temp,f
  7684     0C47  1803               	skipnc
  7685     0C48  0AB9               	incf	___flmul@temp+1,f
  7686     0C49  3000               	movlw	0
  7687     0C4A  07B9               	addwf	___flmul@temp+1,f
  7688     0C4B                     l2793:
  7689     0C4B  0839               	movf	___flmul@temp+1,w
  7690     0C4C  3A80               	xorlw	128
  7691     0C4D  00FF               	movwf	btemp+1
  7692     0C4E  3080               	movlw	128
  7693     0C4F  027F               	subwf	btemp+1,w
  7694     0C50  1D03               	skipz
  7695     0C51  2C54               	goto	u3945
  7696     0C52  30FF               	movlw	255
  7697     0C53  0238               	subwf	___flmul@temp,w
  7698     0C54                     u3945:
  7699     0C54  1C03               	skipc
  7700     0C55  2C57               	goto	u3941
  7701     0C56  2C58               	goto	u3940
  7702     0C57                     u3941:
  7703     0C57  2C63               	goto	l2797
  7704     0C58                     u3940:
  7705     0C58                     l2795:
  7706     0C58  307F               	movlw	127
  7707     0C59  1283               	bcf	3,5	;RP0=0, select bank0
  7708     0C5A  1303               	bcf	3,6	;RP1=0, select bank0
  7709     0C5B  00B7               	movwf	___flmul@prod+3
  7710     0C5C  3080               	movlw	128
  7711     0C5D  00B6               	movwf	___flmul@prod+2
  7712     0C5E  3000               	movlw	0
  7713     0C5F  00B5               	movwf	___flmul@prod+1
  7714     0C60  3000               	movlw	0
  7715     0C61  00B4               	movwf	___flmul@prod
  7716     0C62  2C94               	goto	l2811
  7717     0C63                     l2797:
  7718     0C63  1283               	bcf	3,5	;RP0=0, select bank0
  7719     0C64  1303               	bcf	3,6	;RP1=0, select bank0
  7720     0C65  0839               	movf	___flmul@temp+1,w
  7721     0C66  3A80               	xorlw	128
  7722     0C67  00FF               	movwf	btemp+1
  7723     0C68  3080               	movlw	128
  7724     0C69  027F               	subwf	btemp+1,w
  7725     0C6A  1D03               	skipz
  7726     0C6B  2C6E               	goto	u3955
  7727     0C6C  3001               	movlw	1
  7728     0C6D  0238               	subwf	___flmul@temp,w
  7729     0C6E                     u3955:
  7730     0C6E  1803               	skipnc
  7731     0C6F  2C71               	goto	u3951
  7732     0C70  2C72               	goto	u3950
  7733     0C71                     u3951:
  7734     0C71  2C7E               	goto	l2803
  7735     0C72                     u3950:
  7736     0C72                     l2799:
  7737     0C72  3000               	movlw	0
  7738     0C73  1283               	bcf	3,5	;RP0=0, select bank0
  7739     0C74  1303               	bcf	3,6	;RP1=0, select bank0
  7740     0C75  00B7               	movwf	___flmul@prod+3
  7741     0C76  3000               	movlw	0
  7742     0C77  00B6               	movwf	___flmul@prod+2
  7743     0C78  3000               	movlw	0
  7744     0C79  00B5               	movwf	___flmul@prod+1
  7745     0C7A  3000               	movlw	0
  7746     0C7B  00B4               	movwf	___flmul@prod
  7747     0C7C                     l2801:
  7748     0C7C  01AD               	clrf	___flmul@sign
  7749     0C7D  2C94               	goto	l2811
  7750     0C7E                     l2803:
  7751     0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  7752     0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  7753     0C80  0838               	movf	___flmul@temp,w
  7754     0C81  00B3               	movwf	___flmul@bexp
  7755     0C82  30FF               	movlw	255
  7756     0C83  05B4               	andwf	___flmul@prod,f
  7757     0C84  30FF               	movlw	255
  7758     0C85  05B5               	andwf	___flmul@prod+1,f
  7759     0C86  307F               	movlw	127
  7760     0C87  05B6               	andwf	___flmul@prod+2,f
  7761     0C88  3000               	movlw	0
  7762     0C89  05B7               	andwf	___flmul@prod+3,f
  7763     0C8A                     l2805:
  7764     0C8A  1C33               	btfss	___flmul@bexp,0
  7765     0C8B  2C8D               	goto	u3961
  7766     0C8C  2C8E               	goto	u3960
  7767     0C8D                     u3961:
  7768     0C8D  2C8F               	goto	l2809
  7769     0C8E                     u3960:
  7770     0C8E                     l2807:
  7771     0C8E  17B6               	bsf	___flmul@prod+2,7
  7772     0C8F                     l2809:
  7773     0C8F  0833               	movf	___flmul@bexp,w
  7774     0C90  00A8               	movwf	??___flmul
  7775     0C91  1003               	clrc
  7776     0C92  0C28               	rrf	??___flmul,w
  7777     0C93  00B7               	movwf	___flmul@prod+3
  7778     0C94                     l2811:
  7779     0C94  082D               	movf	___flmul@sign,w
  7780     0C95  00FF               	movwf	btemp+1
  7781     0C96  087F               	movf	btemp+1,w
  7782     0C97  04B7               	iorwf	___flmul@prod+3,f
  7783     0C98                     l2813:
  7784     0C98  0837               	movf	___flmul@prod+3,w
  7785     0C99  00A3               	movwf	?___flmul+3
  7786     0C9A  0836               	movf	___flmul@prod+2,w
  7787     0C9B  00A2               	movwf	?___flmul+2
  7788     0C9C  0835               	movf	___flmul@prod+1,w
  7789     0C9D  00A1               	movwf	?___flmul+1
  7790     0C9E  0834               	movf	___flmul@prod,w
  7791     0C9F  00A0               	movwf	?___flmul
  7792     0CA0                     l750:
  7793     0CA0  0008               	return
  7794     0CA1                     __end_of___flmul:
  7795                           
  7796                           	psect	text25
  7797     1C2A                     __ptext25:	
  7798 ;; *************** function __Umul8_16 *****************
  7799 ;; Defined at:
  7800 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8_16.c"
  7801 ;; Parameters:    Size  Location     Type
  7802 ;;  multiplier      1    wreg     unsigned char 
  7803 ;;  multiplicand    1    0[COMMON] unsigned char 
  7804 ;; Auto vars:     Size  Location     Type
  7805 ;;  multiplier      1    8[COMMON] unsigned char 
  7806 ;;  word_mpld       2    6[COMMON] unsigned int 
  7807 ;;  product         2    4[COMMON] unsigned int 
  7808 ;; Return value:  Size  Location     Type
  7809 ;;                  2    0[COMMON] unsigned int 
  7810 ;; Registers used:
  7811 ;;		wreg, status,2, status,0
  7812 ;; Tracked objects:
  7813 ;;		On entry : 0/0
  7814 ;;		On exit  : 0/0
  7815 ;;		Unchanged: 0/0
  7816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7817 ;;      Params:         2       0       0       0       0
  7818 ;;      Locals:         5       0       0       0       0
  7819 ;;      Temps:          2       0       0       0       0
  7820 ;;      Totals:         9       0       0       0       0
  7821 ;;Total ram usage:        9 bytes
  7822 ;; Hardware stack levels used: 1
  7823 ;; This function calls:
  7824 ;;		Nothing
  7825 ;; This function is called by:
  7826 ;;		___flmul
  7827 ;; This function uses a non-reentrant model
  7828 ;;
  7829                           
  7830     1C2A                     __Umul8_16:	
  7831                           ;psect for function __Umul8_16
  7832                           
  7833                           
  7834                           ;incstack = 0
  7835                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7836                           ;__Umul8_16@multiplier stored from wreg
  7837     1C2A  00F8               	movwf	__Umul8_16@multiplier
  7838     1C2B                     l2321:
  7839     1C2B  01F4               	clrf	__Umul8_16@product
  7840     1C2C  01F5               	clrf	__Umul8_16@product+1
  7841     1C2D                     l2323:
  7842     1C2D  0870               	movf	__Umul8_16@multiplicand,w
  7843     1C2E  00F2               	movwf	??__Umul8_16
  7844     1C2F  01F3               	clrf	??__Umul8_16+1
  7845     1C30  0872               	movf	??__Umul8_16,w
  7846     1C31  00F6               	movwf	__Umul8_16@word_mpld
  7847     1C32  0873               	movf	??__Umul8_16+1,w
  7848     1C33  00F7               	movwf	__Umul8_16@word_mpld+1
  7849     1C34                     l2325:
  7850     1C34  1C78               	btfss	__Umul8_16@multiplier,0
  7851     1C35  2C37               	goto	u2791
  7852     1C36  2C38               	goto	u2790
  7853     1C37                     u2791:
  7854     1C37  2C3E               	goto	l769
  7855     1C38                     u2790:
  7856     1C38                     l2327:
  7857     1C38  0876               	movf	__Umul8_16@word_mpld,w
  7858     1C39  07F4               	addwf	__Umul8_16@product,f
  7859     1C3A  1803               	skipnc
  7860     1C3B  0AF5               	incf	__Umul8_16@product+1,f
  7861     1C3C  0877               	movf	__Umul8_16@word_mpld+1,w
  7862     1C3D  07F5               	addwf	__Umul8_16@product+1,f
  7863     1C3E                     l769:
  7864     1C3E  3001               	movlw	1
  7865     1C3F                     u2805:
  7866     1C3F  1003               	clrc
  7867     1C40  0DF6               	rlf	__Umul8_16@word_mpld,f
  7868     1C41  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7869     1C42  3EFF               	addlw	-1
  7870     1C43  1D03               	skipz
  7871     1C44  2C3F               	goto	u2805
  7872     1C45  1003               	clrc
  7873     1C46  0CF8               	rrf	__Umul8_16@multiplier,f
  7874     1C47                     l2329:
  7875     1C47  0878               	movf	__Umul8_16@multiplier,w
  7876     1C48  1D03               	btfss	3,2
  7877     1C49  2C4B               	goto	u2811
  7878     1C4A  2C4C               	goto	u2810
  7879     1C4B                     u2811:
  7880     1C4B  2C34               	goto	l2325
  7881     1C4C                     u2810:
  7882     1C4C                     l2331:
  7883     1C4C  0875               	movf	__Umul8_16@product+1,w
  7884     1C4D  00F1               	movwf	?__Umul8_16+1
  7885     1C4E  0874               	movf	__Umul8_16@product,w
  7886     1C4F  00F0               	movwf	?__Umul8_16
  7887     1C50                     l771:
  7888     1C50  0008               	return
  7889     1C51                     __end_of__Umul8_16:
  7890                           
  7891                           	psect	text26
  7892     1174                     __ptext26:	
  7893 ;; *************** function __tdiv_to_l_ *****************
  7894 ;; Defined at:
  7895 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftdivl.c"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;  f1              4    0[COMMON] float 
  7898 ;;  f2              4    4[COMMON] float 
  7899 ;; Auto vars:     Size  Location     Type
  7900 ;;  quot            4    0[BANK0 ] unsigned long 
  7901 ;;  exp1            1    5[BANK0 ] unsigned char 
  7902 ;;  cntr            1    4[BANK0 ] unsigned char 
  7903 ;; Return value:  Size  Location     Type
  7904 ;;                  4    0[COMMON] unsigned long 
  7905 ;; Registers used:
  7906 ;;		wreg, status,2, status,0, btemp+1
  7907 ;; Tracked objects:
  7908 ;;		On entry : 0/0
  7909 ;;		On exit  : 0/0
  7910 ;;		Unchanged: 0/0
  7911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7912 ;;      Params:         8       0       0       0       0
  7913 ;;      Locals:         0       6       0       0       0
  7914 ;;      Temps:          3       0       0       0       0
  7915 ;;      Totals:        11       6       0       0       0
  7916 ;;Total ram usage:       17 bytes
  7917 ;; Hardware stack levels used: 1
  7918 ;; This function calls:
  7919 ;;		Nothing
  7920 ;; This function is called by:
  7921 ;;		_sprintf
  7922 ;; This function uses a non-reentrant model
  7923 ;;
  7924                           
  7925     1174                     __tdiv_to_l_:	
  7926                           ;psect for function __tdiv_to_l_
  7927                           
  7928     1174                     l2907:	
  7929                           ;incstack = 0
  7930                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0+btemp+1]
  7931                           
  7932     1174  0870               	movf	__tdiv_to_l_@f1,w
  7933     1175  00F8               	movwf	??__tdiv_to_l_
  7934     1176  0871               	movf	__tdiv_to_l_@f1+1,w
  7935     1177  00F9               	movwf	??__tdiv_to_l_+1
  7936     1178  0872               	movf	__tdiv_to_l_@f1+2,w
  7937     1179  00FA               	movwf	??__tdiv_to_l_+2
  7938     117A  1003               	clrc
  7939     117B  0D79               	rlf	??__tdiv_to_l_+1,w
  7940     117C  0D7A               	rlf	??__tdiv_to_l_+2,w
  7941     117D  1283               	bcf	3,5	;RP0=0, select bank0
  7942     117E  1303               	bcf	3,6	;RP1=0, select bank0
  7943     117F  00A5               	movwf	__tdiv_to_l_@exp1
  7944     1180  0825               	movf	__tdiv_to_l_@exp1,w
  7945     1181  1D03               	btfss	3,2
  7946     1182  2984               	goto	u4251
  7947     1183  2985               	goto	u4250
  7948     1184                     u4251:
  7949     1184  298E               	goto	l2913
  7950     1185                     u4250:
  7951     1185                     l2909:
  7952     1185  3000               	movlw	0
  7953     1186  00F3               	movwf	?__tdiv_to_l_+3
  7954     1187  3000               	movlw	0
  7955     1188  00F2               	movwf	?__tdiv_to_l_+2
  7956     1189  3000               	movlw	0
  7957     118A  00F1               	movwf	?__tdiv_to_l_+1
  7958     118B  3000               	movlw	0
  7959     118C  00F0               	movwf	?__tdiv_to_l_
  7960     118D  2A2A               	goto	l544
  7961     118E                     l2913:
  7962     118E  0874               	movf	__tdiv_to_l_@f2,w
  7963     118F  00F8               	movwf	??__tdiv_to_l_
  7964     1190  0875               	movf	__tdiv_to_l_@f2+1,w
  7965     1191  00F9               	movwf	??__tdiv_to_l_+1
  7966     1192  0876               	movf	__tdiv_to_l_@f2+2,w
  7967     1193  00FA               	movwf	??__tdiv_to_l_+2
  7968     1194  1003               	clrc
  7969     1195  0D79               	rlf	??__tdiv_to_l_+1,w
  7970     1196  0D7A               	rlf	??__tdiv_to_l_+2,w
  7971     1197  00A4               	movwf	__tdiv_to_l_@cntr
  7972     1198  0824               	movf	__tdiv_to_l_@cntr,w
  7973     1199  1D03               	btfss	3,2
  7974     119A  299C               	goto	u4261
  7975     119B  299D               	goto	u4260
  7976     119C                     u4261:
  7977     119C  299E               	goto	l545
  7978     119D                     u4260:
  7979     119D  2985               	goto	l2909
  7980     119E                     l545:
  7981     119E  17F1               	bsf	__tdiv_to_l_@f1+1,7
  7982     119F                     l2919:
  7983     119F  30FF               	movlw	255
  7984     11A0  05F0               	andwf	__tdiv_to_l_@f1,f
  7985     11A1  30FF               	movlw	255
  7986     11A2  05F1               	andwf	__tdiv_to_l_@f1+1,f
  7987     11A3  3000               	movlw	0
  7988     11A4  05F2               	andwf	__tdiv_to_l_@f1+2,f
  7989     11A5                     l2921:
  7990     11A5  17F5               	bsf	__tdiv_to_l_@f2+1,7
  7991     11A6  30FF               	movlw	255
  7992     11A7  05F4               	andwf	__tdiv_to_l_@f2,f
  7993     11A8  30FF               	movlw	255
  7994     11A9  05F5               	andwf	__tdiv_to_l_@f2+1,f
  7995     11AA  3000               	movlw	0
  7996     11AB  05F6               	andwf	__tdiv_to_l_@f2+2,f
  7997     11AC  3000               	movlw	0
  7998     11AD  00A3               	movwf	__tdiv_to_l_@quot+3
  7999     11AE  3000               	movlw	0
  8000     11AF  00A2               	movwf	__tdiv_to_l_@quot+2
  8001     11B0  3000               	movlw	0
  8002     11B1  00A1               	movwf	__tdiv_to_l_@quot+1
  8003     11B2  3000               	movlw	0
  8004     11B3  00A0               	movwf	__tdiv_to_l_@quot
  8005     11B4                     l2923:
  8006     11B4  307F               	movlw	127
  8007     11B5  02A5               	subwf	__tdiv_to_l_@exp1,f
  8008     11B6                     l2925:
  8009     11B6  3098               	movlw	152
  8010     11B7  0724               	addwf	__tdiv_to_l_@cntr,w
  8011     11B8  00F8               	movwf	??__tdiv_to_l_
  8012     11B9  0878               	movf	??__tdiv_to_l_,w
  8013     11BA  02A5               	subwf	__tdiv_to_l_@exp1,f
  8014     11BB  3018               	movlw	24
  8015     11BC  00A4               	movwf	__tdiv_to_l_@cntr
  8016     11BD                     l2927:
  8017     11BD  3001               	movlw	1
  8018     11BE  00F8               	movwf	??__tdiv_to_l_
  8019     11BF                     u4275:
  8020     11BF  1003               	clrc
  8021     11C0  0DA0               	rlf	__tdiv_to_l_@quot,f
  8022     11C1  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  8023     11C2  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  8024     11C3  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  8025     11C4  0BF8               	decfsz	??__tdiv_to_l_,f
  8026     11C5  29BF               	goto	u4275
  8027     11C6                     l2929:
  8028     11C6  0876               	movf	__tdiv_to_l_@f2+2,w
  8029     11C7  0272               	subwf	__tdiv_to_l_@f1+2,w
  8030     11C8  1D03               	skipz
  8031     11C9  29D0               	goto	u4285
  8032     11CA  0875               	movf	__tdiv_to_l_@f2+1,w
  8033     11CB  0271               	subwf	__tdiv_to_l_@f1+1,w
  8034     11CC  1D03               	skipz
  8035     11CD  29D0               	goto	u4285
  8036     11CE  0874               	movf	__tdiv_to_l_@f2,w
  8037     11CF  0270               	subwf	__tdiv_to_l_@f1,w
  8038     11D0                     u4285:
  8039     11D0  1C03               	skipc
  8040     11D1  29D3               	goto	u4281
  8041     11D2  29D4               	goto	u4280
  8042     11D3                     u4281:
  8043     11D3  29DF               	goto	l2935
  8044     11D4                     u4280:
  8045     11D4                     l2931:
  8046     11D4  0874               	movf	__tdiv_to_l_@f2,w
  8047     11D5  02F0               	subwf	__tdiv_to_l_@f1,f
  8048     11D6  0875               	movf	__tdiv_to_l_@f2+1,w
  8049     11D7  1C03               	skipc
  8050     11D8  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  8051     11D9  02F1               	subwf	__tdiv_to_l_@f1+1,f
  8052     11DA  0876               	movf	__tdiv_to_l_@f2+2,w
  8053     11DB  1C03               	skipc
  8054     11DC  0A76               	incf	__tdiv_to_l_@f2+2,w
  8055     11DD  02F2               	subwf	__tdiv_to_l_@f1+2,f
  8056     11DE                     l2933:
  8057     11DE  1420               	bsf	__tdiv_to_l_@quot,0
  8058     11DF                     l2935:
  8059     11DF  3001               	movlw	1
  8060     11E0                     u4295:
  8061     11E0  1003               	clrc
  8062     11E1  0DF0               	rlf	__tdiv_to_l_@f1,f
  8063     11E2  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  8064     11E3  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  8065     11E4  3EFF               	addlw	-1
  8066     11E5  1D03               	skipz
  8067     11E6  29E0               	goto	u4295
  8068     11E7                     l2937:
  8069     11E7  3001               	movlw	1
  8070     11E8  02A4               	subwf	__tdiv_to_l_@cntr,f
  8071     11E9  1D03               	btfss	3,2
  8072     11EA  29EC               	goto	u4301
  8073     11EB  29ED               	goto	u4300
  8074     11EC                     u4301:
  8075     11EC  29BD               	goto	l2927
  8076     11ED                     u4300:
  8077     11ED                     l548:
  8078     11ED  1FA5               	btfss	__tdiv_to_l_@exp1,7
  8079     11EE  29F0               	goto	u4311
  8080     11EF  29F1               	goto	u4310
  8081     11F0                     u4311:
  8082     11F0  2A0B               	goto	l2949
  8083     11F1                     u4310:
  8084     11F1                     l2939:
  8085     11F1  0825               	movf	__tdiv_to_l_@exp1,w
  8086     11F2  3A80               	xorlw	128
  8087     11F3  3E97               	addlw	151
  8088     11F4  1803               	skipnc
  8089     11F5  29F7               	goto	u4321
  8090     11F6  29F8               	goto	u4320
  8091     11F7                     u4321:
  8092     11F7  29F9               	goto	l2945
  8093     11F8                     u4320:
  8094     11F8  2985               	goto	l2909
  8095     11F9                     l2945:
  8096     11F9  3001               	movlw	1
  8097     11FA                     u4335:
  8098     11FA  1003               	clrc
  8099     11FB  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  8100     11FC  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  8101     11FD  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  8102     11FE  0CA0               	rrf	__tdiv_to_l_@quot,f
  8103     11FF  3EFF               	addlw	-1
  8104     1200  1D03               	skipz
  8105     1201  29FA               	goto	u4335
  8106     1202                     l2947:
  8107     1202  3001               	movlw	1
  8108     1203  00FF               	movwf	btemp+1
  8109     1204  087F               	movf	btemp+1,w
  8110     1205  07A5               	addwf	__tdiv_to_l_@exp1,f
  8111     1206  1D03               	btfss	3,2
  8112     1207  2A09               	goto	u4341
  8113     1208  2A0A               	goto	u4340
  8114     1209                     u4341:
  8115     1209  29F9               	goto	l2945
  8116     120A                     u4340:
  8117     120A  2A22               	goto	l2957
  8118     120B                     l2949:
  8119     120B  3018               	movlw	24
  8120     120C  0225               	subwf	__tdiv_to_l_@exp1,w
  8121     120D  1C03               	skipc
  8122     120E  2A10               	goto	u4351
  8123     120F  2A11               	goto	u4350
  8124     1210                     u4351:
  8125     1210  2A1D               	goto	l555
  8126     1211                     u4350:
  8127     1211  2985               	goto	l2909
  8128     1212                     l2955:
  8129     1212  3001               	movlw	1
  8130     1213  00F8               	movwf	??__tdiv_to_l_
  8131     1214                     u4365:
  8132     1214  1003               	clrc
  8133     1215  0DA0               	rlf	__tdiv_to_l_@quot,f
  8134     1216  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  8135     1217  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  8136     1218  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  8137     1219  0BF8               	decfsz	??__tdiv_to_l_,f
  8138     121A  2A14               	goto	u4365
  8139     121B  3001               	movlw	1
  8140     121C  02A5               	subwf	__tdiv_to_l_@exp1,f
  8141     121D                     l555:
  8142     121D  0825               	movf	__tdiv_to_l_@exp1,w
  8143     121E  1D03               	btfss	3,2
  8144     121F  2A21               	goto	u4371
  8145     1220  2A22               	goto	u4370
  8146     1221                     u4371:
  8147     1221  2A12               	goto	l2955
  8148     1222                     u4370:
  8149     1222                     l2957:
  8150     1222  0823               	movf	__tdiv_to_l_@quot+3,w
  8151     1223  00F3               	movwf	?__tdiv_to_l_+3
  8152     1224  0822               	movf	__tdiv_to_l_@quot+2,w
  8153     1225  00F2               	movwf	?__tdiv_to_l_+2
  8154     1226  0821               	movf	__tdiv_to_l_@quot+1,w
  8155     1227  00F1               	movwf	?__tdiv_to_l_+1
  8156     1228  0820               	movf	__tdiv_to_l_@quot,w
  8157     1229  00F0               	movwf	?__tdiv_to_l_
  8158     122A                     l544:
  8159     122A  0008               	return
  8160     122B                     __end_of__tdiv_to_l_:
  8161                           
  8162                           	psect	text27
  8163     122B                     __ptext27:	
  8164 ;; *************** function __div_to_l_ *****************
  8165 ;; Defined at:
  8166 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fldivl.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;  f1              4    0[COMMON] unsigned long 
  8169 ;;  f2              4    4[COMMON] unsigned long 
  8170 ;; Auto vars:     Size  Location     Type
  8171 ;;  quot            4    0[BANK0 ] unsigned long 
  8172 ;;  exp1            1    5[BANK0 ] unsigned char 
  8173 ;;  cntr            1    4[BANK0 ] unsigned char 
  8174 ;; Return value:  Size  Location     Type
  8175 ;;                  4    0[COMMON] unsigned long 
  8176 ;; Registers used:
  8177 ;;		wreg, status,2, status,0, btemp+1
  8178 ;; Tracked objects:
  8179 ;;		On entry : 0/0
  8180 ;;		On exit  : 0/0
  8181 ;;		Unchanged: 0/0
  8182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8183 ;;      Params:         8       0       0       0       0
  8184 ;;      Locals:         0       6       0       0       0
  8185 ;;      Temps:          1       0       0       0       0
  8186 ;;      Totals:         9       6       0       0       0
  8187 ;;Total ram usage:       15 bytes
  8188 ;; Hardware stack levels used: 1
  8189 ;; This function calls:
  8190 ;;		Nothing
  8191 ;; This function is called by:
  8192 ;;		_sprintf
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           
  8196     122B                     __div_to_l_:	
  8197                           ;psect for function __div_to_l_
  8198                           
  8199     122B                     l2961:	
  8200                           ;incstack = 0
  8201                           ; Regs used in __div_to_l_: [wreg+status,2+status,0+btemp+1]
  8202                           
  8203     122B  1003               	clrc
  8204     122C  0D72               	rlf	__div_to_l_@f1+2,w
  8205     122D  0D73               	rlf	__div_to_l_@f1+3,w
  8206     122E  1283               	bcf	3,5	;RP0=0, select bank0
  8207     122F  1303               	bcf	3,6	;RP1=0, select bank0
  8208     1230  00A5               	movwf	__div_to_l_@exp1
  8209     1231  0825               	movf	__div_to_l_@exp1,w
  8210     1232  1D03               	btfss	3,2
  8211     1233  2A35               	goto	u4381
  8212     1234  2A36               	goto	u4380
  8213     1235                     u4381:
  8214     1235  2A3F               	goto	l2967
  8215     1236                     u4380:
  8216     1236                     l2963:
  8217     1236  3000               	movlw	0
  8218     1237  00F3               	movwf	?__div_to_l_+3
  8219     1238  3000               	movlw	0
  8220     1239  00F2               	movwf	?__div_to_l_+2
  8221     123A  3000               	movlw	0
  8222     123B  00F1               	movwf	?__div_to_l_+1
  8223     123C  3000               	movlw	0
  8224     123D  00F0               	movwf	?__div_to_l_
  8225     123E  2AE2               	goto	l497
  8226     123F                     l2967:
  8227     123F  1003               	clrc
  8228     1240  0D76               	rlf	__div_to_l_@f2+2,w
  8229     1241  0D77               	rlf	__div_to_l_@f2+3,w
  8230     1242  00A4               	movwf	__div_to_l_@cntr
  8231     1243  0824               	movf	__div_to_l_@cntr,w
  8232     1244  1D03               	btfss	3,2
  8233     1245  2A47               	goto	u4391
  8234     1246  2A48               	goto	u4390
  8235     1247                     u4391:
  8236     1247  2A49               	goto	l498
  8237     1248                     u4390:
  8238     1248  2A36               	goto	l2963
  8239     1249                     l498:
  8240     1249  17F2               	bsf	__div_to_l_@f1+2,7
  8241     124A                     l2973:
  8242     124A  30FF               	movlw	255
  8243     124B  05F0               	andwf	__div_to_l_@f1,f
  8244     124C  30FF               	movlw	255
  8245     124D  05F1               	andwf	__div_to_l_@f1+1,f
  8246     124E  30FF               	movlw	255
  8247     124F  05F2               	andwf	__div_to_l_@f1+2,f
  8248     1250  3000               	movlw	0
  8249     1251  05F3               	andwf	__div_to_l_@f1+3,f
  8250     1252                     l2975:
  8251     1252  17F6               	bsf	__div_to_l_@f2+2,7
  8252     1253  30FF               	movlw	255
  8253     1254  05F4               	andwf	__div_to_l_@f2,f
  8254     1255  30FF               	movlw	255
  8255     1256  05F5               	andwf	__div_to_l_@f2+1,f
  8256     1257  30FF               	movlw	255
  8257     1258  05F6               	andwf	__div_to_l_@f2+2,f
  8258     1259  3000               	movlw	0
  8259     125A  05F7               	andwf	__div_to_l_@f2+3,f
  8260     125B  3000               	movlw	0
  8261     125C  00A3               	movwf	__div_to_l_@quot+3
  8262     125D  3000               	movlw	0
  8263     125E  00A2               	movwf	__div_to_l_@quot+2
  8264     125F  3000               	movlw	0
  8265     1260  00A1               	movwf	__div_to_l_@quot+1
  8266     1261  3000               	movlw	0
  8267     1262  00A0               	movwf	__div_to_l_@quot
  8268     1263                     l2977:
  8269     1263  307F               	movlw	127
  8270     1264  02A5               	subwf	__div_to_l_@exp1,f
  8271     1265                     l2979:
  8272     1265  30A0               	movlw	160
  8273     1266  0724               	addwf	__div_to_l_@cntr,w
  8274     1267  00F8               	movwf	??__div_to_l_
  8275     1268  0878               	movf	??__div_to_l_,w
  8276     1269  02A5               	subwf	__div_to_l_@exp1,f
  8277     126A  3020               	movlw	32
  8278     126B  00A4               	movwf	__div_to_l_@cntr
  8279     126C                     l2981:
  8280     126C  3001               	movlw	1
  8281     126D  00F8               	movwf	??__div_to_l_
  8282     126E                     u4405:
  8283     126E  1003               	clrc
  8284     126F  0DA0               	rlf	__div_to_l_@quot,f
  8285     1270  0DA1               	rlf	__div_to_l_@quot+1,f
  8286     1271  0DA2               	rlf	__div_to_l_@quot+2,f
  8287     1272  0DA3               	rlf	__div_to_l_@quot+3,f
  8288     1273  0BF8               	decfsz	??__div_to_l_,f
  8289     1274  2A6E               	goto	u4405
  8290     1275                     l2983:
  8291     1275  0877               	movf	__div_to_l_@f2+3,w
  8292     1276  0273               	subwf	__div_to_l_@f1+3,w
  8293     1277  1D03               	skipz
  8294     1278  2A83               	goto	u4415
  8295     1279  0876               	movf	__div_to_l_@f2+2,w
  8296     127A  0272               	subwf	__div_to_l_@f1+2,w
  8297     127B  1D03               	skipz
  8298     127C  2A83               	goto	u4415
  8299     127D  0875               	movf	__div_to_l_@f2+1,w
  8300     127E  0271               	subwf	__div_to_l_@f1+1,w
  8301     127F  1D03               	skipz
  8302     1280  2A83               	goto	u4415
  8303     1281  0874               	movf	__div_to_l_@f2,w
  8304     1282  0270               	subwf	__div_to_l_@f1,w
  8305     1283                     u4415:
  8306     1283  1C03               	skipc
  8307     1284  2A86               	goto	u4411
  8308     1285  2A87               	goto	u4410
  8309     1286                     u4411:
  8310     1286  2A96               	goto	l2989
  8311     1287                     u4410:
  8312     1287                     l2985:
  8313     1287  0874               	movf	__div_to_l_@f2,w
  8314     1288  02F0               	subwf	__div_to_l_@f1,f
  8315     1289  0875               	movf	__div_to_l_@f2+1,w
  8316     128A  1C03               	skipc
  8317     128B  0F75               	incfsz	__div_to_l_@f2+1,w
  8318     128C  02F1               	subwf	__div_to_l_@f1+1,f
  8319     128D  0876               	movf	__div_to_l_@f2+2,w
  8320     128E  1C03               	skipc
  8321     128F  0F76               	incfsz	__div_to_l_@f2+2,w
  8322     1290  02F2               	subwf	__div_to_l_@f1+2,f
  8323     1291  0877               	movf	__div_to_l_@f2+3,w
  8324     1292  1C03               	skipc
  8325     1293  0F77               	incfsz	__div_to_l_@f2+3,w
  8326     1294  02F3               	subwf	__div_to_l_@f1+3,f
  8327     1295                     l2987:
  8328     1295  1420               	bsf	__div_to_l_@quot,0
  8329     1296                     l2989:
  8330     1296  3001               	movlw	1
  8331     1297  00F8               	movwf	??__div_to_l_
  8332     1298                     u4425:
  8333     1298  1003               	clrc
  8334     1299  0DF0               	rlf	__div_to_l_@f1,f
  8335     129A  0DF1               	rlf	__div_to_l_@f1+1,f
  8336     129B  0DF2               	rlf	__div_to_l_@f1+2,f
  8337     129C  0DF3               	rlf	__div_to_l_@f1+3,f
  8338     129D  0BF8               	decfsz	??__div_to_l_,f
  8339     129E  2A98               	goto	u4425
  8340     129F                     l2991:
  8341     129F  3001               	movlw	1
  8342     12A0  02A4               	subwf	__div_to_l_@cntr,f
  8343     12A1  1D03               	btfss	3,2
  8344     12A2  2AA4               	goto	u4431
  8345     12A3  2AA5               	goto	u4430
  8346     12A4                     u4431:
  8347     12A4  2A6C               	goto	l2981
  8348     12A5                     u4430:
  8349     12A5                     l501:
  8350     12A5  1FA5               	btfss	__div_to_l_@exp1,7
  8351     12A6  2AA8               	goto	u4441
  8352     12A7  2AA9               	goto	u4440
  8353     12A8                     u4441:
  8354     12A8  2AC3               	goto	l3003
  8355     12A9                     u4440:
  8356     12A9                     l2993:
  8357     12A9  0825               	movf	__div_to_l_@exp1,w
  8358     12AA  3A80               	xorlw	128
  8359     12AB  3E9F               	addlw	159
  8360     12AC  1803               	skipnc
  8361     12AD  2AAF               	goto	u4451
  8362     12AE  2AB0               	goto	u4450
  8363     12AF                     u4451:
  8364     12AF  2AB1               	goto	l2999
  8365     12B0                     u4450:
  8366     12B0  2A36               	goto	l2963
  8367     12B1                     l2999:
  8368     12B1  3001               	movlw	1
  8369     12B2                     u4465:
  8370     12B2  1003               	clrc
  8371     12B3  0CA3               	rrf	__div_to_l_@quot+3,f
  8372     12B4  0CA2               	rrf	__div_to_l_@quot+2,f
  8373     12B5  0CA1               	rrf	__div_to_l_@quot+1,f
  8374     12B6  0CA0               	rrf	__div_to_l_@quot,f
  8375     12B7  3EFF               	addlw	-1
  8376     12B8  1D03               	skipz
  8377     12B9  2AB2               	goto	u4465
  8378     12BA                     l3001:
  8379     12BA  3001               	movlw	1
  8380     12BB  00FF               	movwf	btemp+1
  8381     12BC  087F               	movf	btemp+1,w
  8382     12BD  07A5               	addwf	__div_to_l_@exp1,f
  8383     12BE  1D03               	btfss	3,2
  8384     12BF  2AC1               	goto	u4471
  8385     12C0  2AC2               	goto	u4470
  8386     12C1                     u4471:
  8387     12C1  2AB1               	goto	l2999
  8388     12C2                     u4470:
  8389     12C2  2ADA               	goto	l3011
  8390     12C3                     l3003:
  8391     12C3  3020               	movlw	32
  8392     12C4  0225               	subwf	__div_to_l_@exp1,w
  8393     12C5  1C03               	skipc
  8394     12C6  2AC8               	goto	u4481
  8395     12C7  2AC9               	goto	u4480
  8396     12C8                     u4481:
  8397     12C8  2AD5               	goto	l508
  8398     12C9                     u4480:
  8399     12C9  2A36               	goto	l2963
  8400     12CA                     l3009:
  8401     12CA  3001               	movlw	1
  8402     12CB  00F8               	movwf	??__div_to_l_
  8403     12CC                     u4495:
  8404     12CC  1003               	clrc
  8405     12CD  0DA0               	rlf	__div_to_l_@quot,f
  8406     12CE  0DA1               	rlf	__div_to_l_@quot+1,f
  8407     12CF  0DA2               	rlf	__div_to_l_@quot+2,f
  8408     12D0  0DA3               	rlf	__div_to_l_@quot+3,f
  8409     12D1  0BF8               	decfsz	??__div_to_l_,f
  8410     12D2  2ACC               	goto	u4495
  8411     12D3  3001               	movlw	1
  8412     12D4  02A5               	subwf	__div_to_l_@exp1,f
  8413     12D5                     l508:
  8414     12D5  0825               	movf	__div_to_l_@exp1,w
  8415     12D6  1D03               	btfss	3,2
  8416     12D7  2AD9               	goto	u4501
  8417     12D8  2ADA               	goto	u4500
  8418     12D9                     u4501:
  8419     12D9  2ACA               	goto	l3009
  8420     12DA                     u4500:
  8421     12DA                     l3011:
  8422     12DA  0823               	movf	__div_to_l_@quot+3,w
  8423     12DB  00F3               	movwf	?__div_to_l_+3
  8424     12DC  0822               	movf	__div_to_l_@quot+2,w
  8425     12DD  00F2               	movwf	?__div_to_l_+2
  8426     12DE  0821               	movf	__div_to_l_@quot+1,w
  8427     12DF  00F1               	movwf	?__div_to_l_+1
  8428     12E0  0820               	movf	__div_to_l_@quot,w
  8429     12E1  00F0               	movwf	?__div_to_l_
  8430     12E2                     l497:
  8431     12E2  0008               	return
  8432     12E3                     __end_of__div_to_l_:
  8433                           
  8434                           	psect	text28
  8435     12E3                     __ptext28:	
  8436 ;; *************** function ___xxtofl *****************
  8437 ;; Defined at:
  8438 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\xxtofl.c"
  8439 ;; Parameters:    Size  Location     Type
  8440 ;;  sign            1    wreg     unsigned char 
  8441 ;;  val             4    6[COMMON] long 
  8442 ;; Auto vars:     Size  Location     Type
  8443 ;;  sign            1    0[BANK0 ] unsigned char 
  8444 ;;  arg             4    2[BANK0 ] unsigned long 
  8445 ;;  exp             1    1[BANK0 ] unsigned char 
  8446 ;; Return value:  Size  Location     Type
  8447 ;;                  4    6[COMMON] unsigned char 
  8448 ;; Registers used:
  8449 ;;		wreg, status,2, status,0, btemp+1
  8450 ;; Tracked objects:
  8451 ;;		On entry : 0/0
  8452 ;;		On exit  : 0/0
  8453 ;;		Unchanged: 0/0
  8454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8455 ;;      Params:         4       0       0       0       0
  8456 ;;      Locals:         0       6       0       0       0
  8457 ;;      Temps:          4       0       0       0       0
  8458 ;;      Totals:         8       6       0       0       0
  8459 ;;Total ram usage:       14 bytes
  8460 ;; Hardware stack levels used: 1
  8461 ;; This function calls:
  8462 ;;		Nothing
  8463 ;; This function is called by:
  8464 ;;		_GetVoltage
  8465 ;;		_sprintf
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469     12E3                     ___xxtofl:	
  8470                           ;psect for function ___xxtofl
  8471                           
  8472                           
  8473                           ;incstack = 0
  8474                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  8475                           ;___xxtofl@sign stored from wreg
  8476     12E3  1283               	bcf	3,5	;RP0=0, select bank0
  8477     12E4  1303               	bcf	3,6	;RP1=0, select bank0
  8478     12E5  00A0               	movwf	___xxtofl@sign
  8479     12E6                     l3161:
  8480     12E6  0820               	movf	___xxtofl@sign,w
  8481     12E7  1903               	btfsc	3,2
  8482     12E8  2AEA               	goto	u4891
  8483     12E9  2AEB               	goto	u4890
  8484     12EA                     u4891:
  8485     12EA  2AFF               	goto	l3167
  8486     12EB                     u4890:
  8487     12EB                     l3163:
  8488     12EB  1FF9               	btfss	___xxtofl@val+3,7
  8489     12EC  2AEE               	goto	u4901
  8490     12ED  2AEF               	goto	u4900
  8491     12EE                     u4901:
  8492     12EE  2AFF               	goto	l3167
  8493     12EF                     u4900:
  8494     12EF                     l3165:
  8495     12EF  0976               	comf	___xxtofl@val,w
  8496     12F0  00A2               	movwf	___xxtofl@arg
  8497     12F1  0977               	comf	___xxtofl@val+1,w
  8498     12F2  00A3               	movwf	___xxtofl@arg+1
  8499     12F3  0978               	comf	___xxtofl@val+2,w
  8500     12F4  00A4               	movwf	___xxtofl@arg+2
  8501     12F5  0979               	comf	___xxtofl@val+3,w
  8502     12F6  00A5               	movwf	___xxtofl@arg+3
  8503     12F7  0AA2               	incf	___xxtofl@arg,f
  8504     12F8  1903               	skipnz
  8505     12F9  0AA3               	incf	___xxtofl@arg+1,f
  8506     12FA  1903               	skipnz
  8507     12FB  0AA4               	incf	___xxtofl@arg+2,f
  8508     12FC  1903               	skipnz
  8509     12FD  0AA5               	incf	___xxtofl@arg+3,f
  8510     12FE  2B07               	goto	l794
  8511     12FF                     l3167:
  8512     12FF  0879               	movf	___xxtofl@val+3,w
  8513     1300  00A5               	movwf	___xxtofl@arg+3
  8514     1301  0878               	movf	___xxtofl@val+2,w
  8515     1302  00A4               	movwf	___xxtofl@arg+2
  8516     1303  0877               	movf	___xxtofl@val+1,w
  8517     1304  00A3               	movwf	___xxtofl@arg+1
  8518     1305  0876               	movf	___xxtofl@val,w
  8519     1306  00A2               	movwf	___xxtofl@arg
  8520     1307                     l794:
  8521     1307  0879               	movf	___xxtofl@val+3,w
  8522     1308  0478               	iorwf	___xxtofl@val+2,w
  8523     1309  0477               	iorwf	___xxtofl@val+1,w
  8524     130A  0476               	iorwf	___xxtofl@val,w
  8525     130B  1D03               	skipz
  8526     130C  2B0E               	goto	u4911
  8527     130D  2B0F               	goto	u4910
  8528     130E                     u4911:
  8529     130E  2B18               	goto	l3173
  8530     130F                     u4910:
  8531     130F                     l3169:
  8532     130F  3000               	movlw	0
  8533     1310  00F9               	movwf	?___xxtofl+3
  8534     1311  3000               	movlw	0
  8535     1312  00F8               	movwf	?___xxtofl+2
  8536     1313  3000               	movlw	0
  8537     1314  00F7               	movwf	?___xxtofl+1
  8538     1315  3000               	movlw	0
  8539     1316  00F6               	movwf	?___xxtofl
  8540     1317  2B9C               	goto	l796
  8541     1318                     l3173:
  8542     1318  3096               	movlw	150
  8543     1319  00A1               	movwf	___xxtofl@exp
  8544     131A  2B28               	goto	l3179
  8545     131B                     l3175:
  8546     131B  3001               	movlw	1
  8547     131C  00FF               	movwf	btemp+1
  8548     131D  087F               	movf	btemp+1,w
  8549     131E  07A1               	addwf	___xxtofl@exp,f
  8550     131F                     l3177:
  8551     131F  3001               	movlw	1
  8552     1320                     u4925:
  8553     1320  1003               	clrc
  8554     1321  0CA5               	rrf	___xxtofl@arg+3,f
  8555     1322  0CA4               	rrf	___xxtofl@arg+2,f
  8556     1323  0CA3               	rrf	___xxtofl@arg+1,f
  8557     1324  0CA2               	rrf	___xxtofl@arg,f
  8558     1325  3EFF               	addlw	-1
  8559     1326  1D03               	skipz
  8560     1327  2B20               	goto	u4925
  8561     1328                     l3179:
  8562     1328  30FE               	movlw	254
  8563     1329  0525               	andwf	___xxtofl@arg+3,w
  8564     132A  1D03               	btfss	3,2
  8565     132B  2B2D               	goto	u4931
  8566     132C  2B2E               	goto	u4930
  8567     132D                     u4931:
  8568     132D  2B1B               	goto	l3175
  8569     132E                     u4930:
  8570     132E  2B4A               	goto	l3187
  8571     132F                     l3181:
  8572     132F  3001               	movlw	1
  8573     1330  00FF               	movwf	btemp+1
  8574     1331  087F               	movf	btemp+1,w
  8575     1332  07A1               	addwf	___xxtofl@exp,f
  8576     1333                     l3183:
  8577     1333  3001               	movlw	1
  8578     1334  07A2               	addwf	___xxtofl@arg,f
  8579     1335  3000               	movlw	0
  8580     1336  1803               	skipnc
  8581     1337  3001               	movlw	1
  8582     1338  07A3               	addwf	___xxtofl@arg+1,f
  8583     1339  3000               	movlw	0
  8584     133A  1803               	skipnc
  8585     133B  3001               	movlw	1
  8586     133C  07A4               	addwf	___xxtofl@arg+2,f
  8587     133D  3000               	movlw	0
  8588     133E  1803               	skipnc
  8589     133F  3001               	movlw	1
  8590     1340  07A5               	addwf	___xxtofl@arg+3,f
  8591     1341                     l3185:
  8592     1341  3001               	movlw	1
  8593     1342                     u4945:
  8594     1342  1003               	clrc
  8595     1343  0CA5               	rrf	___xxtofl@arg+3,f
  8596     1344  0CA4               	rrf	___xxtofl@arg+2,f
  8597     1345  0CA3               	rrf	___xxtofl@arg+1,f
  8598     1346  0CA2               	rrf	___xxtofl@arg,f
  8599     1347  3EFF               	addlw	-1
  8600     1348  1D03               	skipz
  8601     1349  2B42               	goto	u4945
  8602     134A                     l3187:
  8603     134A  30FF               	movlw	255
  8604     134B  0525               	andwf	___xxtofl@arg+3,w
  8605     134C  1D03               	btfss	3,2
  8606     134D  2B4F               	goto	u4951
  8607     134E  2B50               	goto	u4950
  8608     134F                     u4951:
  8609     134F  2B2F               	goto	l3181
  8610     1350                     u4950:
  8611     1350  2B5C               	goto	l3191
  8612     1351                     l3189:
  8613     1351  3001               	movlw	1
  8614     1352  02A1               	subwf	___xxtofl@exp,f
  8615     1353  3001               	movlw	1
  8616     1354  00FA               	movwf	??___xxtofl
  8617     1355                     u4965:
  8618     1355  1003               	clrc
  8619     1356  0DA2               	rlf	___xxtofl@arg,f
  8620     1357  0DA3               	rlf	___xxtofl@arg+1,f
  8621     1358  0DA4               	rlf	___xxtofl@arg+2,f
  8622     1359  0DA5               	rlf	___xxtofl@arg+3,f
  8623     135A  0BFA               	decfsz	??___xxtofl,f
  8624     135B  2B55               	goto	u4965
  8625     135C                     l3191:
  8626     135C  1BA4               	btfsc	___xxtofl@arg+2,7
  8627     135D  2B5F               	goto	u4971
  8628     135E  2B60               	goto	u4970
  8629     135F                     u4971:
  8630     135F  2B66               	goto	l807
  8631     1360                     u4970:
  8632     1360                     l3193:
  8633     1360  3002               	movlw	2
  8634     1361  0221               	subwf	___xxtofl@exp,w
  8635     1362  1803               	skipnc
  8636     1363  2B65               	goto	u4981
  8637     1364  2B66               	goto	u4980
  8638     1365                     u4981:
  8639     1365  2B51               	goto	l3189
  8640     1366                     u4980:
  8641     1366                     l807:
  8642     1366  1821               	btfsc	___xxtofl@exp,0
  8643     1367  2B69               	goto	u4991
  8644     1368  2B6A               	goto	u4990
  8645     1369                     u4991:
  8646     1369  2B72               	goto	l808
  8647     136A                     u4990:
  8648     136A                     l3195:
  8649     136A  30FF               	movlw	255
  8650     136B  05A2               	andwf	___xxtofl@arg,f
  8651     136C  30FF               	movlw	255
  8652     136D  05A3               	andwf	___xxtofl@arg+1,f
  8653     136E  307F               	movlw	127
  8654     136F  05A4               	andwf	___xxtofl@arg+2,f
  8655     1370  30FF               	movlw	255
  8656     1371  05A5               	andwf	___xxtofl@arg+3,f
  8657     1372                     l808:
  8658     1372  1003               	clrc
  8659     1373  0CA1               	rrf	___xxtofl@exp,f
  8660     1374                     l3197:
  8661     1374  0821               	movf	___xxtofl@exp,w
  8662     1375  00FA               	movwf	??___xxtofl
  8663     1376  01FB               	clrf	??___xxtofl+1
  8664     1377  01FC               	clrf	??___xxtofl+2
  8665     1378  01FD               	clrf	??___xxtofl+3
  8666     1379  3018               	movlw	24
  8667     137A                     u5005:
  8668     137A  1003               	clrc
  8669     137B  0DFA               	rlf	??___xxtofl,f
  8670     137C  0DFB               	rlf	??___xxtofl+1,f
  8671     137D  0DFC               	rlf	??___xxtofl+2,f
  8672     137E  0DFD               	rlf	??___xxtofl+3,f
  8673     137F                     u5000:
  8674     137F  3EFF               	addlw	-1
  8675     1380  1D03               	skipz
  8676     1381  2B7A               	goto	u5005
  8677     1382  087A               	movf	??___xxtofl,w
  8678     1383  04A2               	iorwf	___xxtofl@arg,f
  8679     1384  087B               	movf	??___xxtofl+1,w
  8680     1385  04A3               	iorwf	___xxtofl@arg+1,f
  8681     1386  087C               	movf	??___xxtofl+2,w
  8682     1387  04A4               	iorwf	___xxtofl@arg+2,f
  8683     1388  087D               	movf	??___xxtofl+3,w
  8684     1389  04A5               	iorwf	___xxtofl@arg+3,f
  8685     138A                     l3199:
  8686     138A  0820               	movf	___xxtofl@sign,w
  8687     138B  1903               	btfsc	3,2
  8688     138C  2B8E               	goto	u5011
  8689     138D  2B8F               	goto	u5010
  8690     138E                     u5011:
  8691     138E  2B94               	goto	l3205
  8692     138F                     u5010:
  8693     138F                     l3201:
  8694     138F  1FF9               	btfss	___xxtofl@val+3,7
  8695     1390  2B92               	goto	u5021
  8696     1391  2B93               	goto	u5020
  8697     1392                     u5021:
  8698     1392  2B94               	goto	l3205
  8699     1393                     u5020:
  8700     1393                     l3203:
  8701     1393  17A5               	bsf	___xxtofl@arg+3,7
  8702     1394                     l3205:
  8703     1394  0825               	movf	___xxtofl@arg+3,w
  8704     1395  00F9               	movwf	?___xxtofl+3
  8705     1396  0824               	movf	___xxtofl@arg+2,w
  8706     1397  00F8               	movwf	?___xxtofl+2
  8707     1398  0823               	movf	___xxtofl@arg+1,w
  8708     1399  00F7               	movwf	?___xxtofl+1
  8709     139A  0822               	movf	___xxtofl@arg,w
  8710     139B  00F6               	movwf	?___xxtofl
  8711     139C                     l796:
  8712     139C  0008               	return
  8713     139D                     __end_of___xxtofl:
  8714                           
  8715                           	psect	text29
  8716     1BDF                     __ptext29:	
  8717 ;; *************** function ___wmul *****************
  8718 ;; Defined at:
  8719 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  8720 ;; Parameters:    Size  Location     Type
  8721 ;;  multiplier      2    0[COMMON] unsigned int 
  8722 ;;  multiplicand    2    2[COMMON] unsigned int 
  8723 ;; Auto vars:     Size  Location     Type
  8724 ;;  product         2    4[COMMON] unsigned int 
  8725 ;; Return value:  Size  Location     Type
  8726 ;;                  2    0[COMMON] unsigned int 
  8727 ;; Registers used:
  8728 ;;		wreg, status,2, status,0
  8729 ;; Tracked objects:
  8730 ;;		On entry : 0/0
  8731 ;;		On exit  : 0/0
  8732 ;;		Unchanged: 0/0
  8733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8734 ;;      Params:         4       0       0       0       0
  8735 ;;      Locals:         2       0       0       0       0
  8736 ;;      Temps:          0       0       0       0       0
  8737 ;;      Totals:         6       0       0       0       0
  8738 ;;Total ram usage:        6 bytes
  8739 ;; Hardware stack levels used: 1
  8740 ;; This function calls:
  8741 ;;		Nothing
  8742 ;; This function is called by:
  8743 ;;		_GetVoltage
  8744 ;;		_sprintf
  8745 ;; This function uses a non-reentrant model
  8746 ;;
  8747                           
  8748     1BDF                     ___wmul:	
  8749                           ;psect for function ___wmul
  8750                           
  8751     1BDF                     l3015:	
  8752                           ;incstack = 0
  8753                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8754                           
  8755     1BDF  01F4               	clrf	___wmul@product
  8756     1BE0  01F5               	clrf	___wmul@product+1
  8757     1BE1                     l3017:
  8758     1BE1  1C70               	btfss	___wmul@multiplier,0
  8759     1BE2  2BE4               	goto	u4511
  8760     1BE3  2BE5               	goto	u4510
  8761     1BE4                     u4511:
  8762     1BE4  2BEB               	goto	l327
  8763     1BE5                     u4510:
  8764     1BE5                     l3019:
  8765     1BE5  0872               	movf	___wmul@multiplicand,w
  8766     1BE6  07F4               	addwf	___wmul@product,f
  8767     1BE7  1803               	skipnc
  8768     1BE8  0AF5               	incf	___wmul@product+1,f
  8769     1BE9  0873               	movf	___wmul@multiplicand+1,w
  8770     1BEA  07F5               	addwf	___wmul@product+1,f
  8771     1BEB                     l327:
  8772     1BEB  3001               	movlw	1
  8773     1BEC                     u4525:
  8774     1BEC  1003               	clrc
  8775     1BED  0DF2               	rlf	___wmul@multiplicand,f
  8776     1BEE  0DF3               	rlf	___wmul@multiplicand+1,f
  8777     1BEF  3EFF               	addlw	-1
  8778     1BF0  1D03               	skipz
  8779     1BF1  2BEC               	goto	u4525
  8780     1BF2                     l3021:
  8781     1BF2  3001               	movlw	1
  8782     1BF3                     u4535:
  8783     1BF3  1003               	clrc
  8784     1BF4  0CF1               	rrf	___wmul@multiplier+1,f
  8785     1BF5  0CF0               	rrf	___wmul@multiplier,f
  8786     1BF6  3EFF               	addlw	-1
  8787     1BF7  1D03               	skipz
  8788     1BF8  2BF3               	goto	u4535
  8789     1BF9                     l3023:
  8790     1BF9  0870               	movf	___wmul@multiplier,w
  8791     1BFA  0471               	iorwf	___wmul@multiplier+1,w
  8792     1BFB  1D03               	btfss	3,2
  8793     1BFC  2BFE               	goto	u4541
  8794     1BFD  2BFF               	goto	u4540
  8795     1BFE                     u4541:
  8796     1BFE  2BE1               	goto	l3017
  8797     1BFF                     u4540:
  8798     1BFF                     l3025:
  8799     1BFF  0875               	movf	___wmul@product+1,w
  8800     1C00  00F1               	movwf	?___wmul+1
  8801     1C01  0874               	movf	___wmul@product,w
  8802     1C02  00F0               	movwf	?___wmul
  8803     1C03                     l329:
  8804     1C03  0008               	return
  8805     1C04                     __end_of___wmul:
  8806                           
  8807                           	psect	text30
  8808     1002                     __ptext30:	
  8809 ;; *************** function ___llmod *****************
  8810 ;; Defined at:
  8811 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\llmod.c"
  8812 ;; Parameters:    Size  Location     Type
  8813 ;;  divisor         4    0[COMMON] unsigned long 
  8814 ;;  dividend        4    4[COMMON] unsigned long 
  8815 ;; Auto vars:     Size  Location     Type
  8816 ;;  counter         1    9[COMMON] unsigned char 
  8817 ;; Return value:  Size  Location     Type
  8818 ;;                  4    0[COMMON] unsigned long 
  8819 ;; Registers used:
  8820 ;;		wreg, status,2, status,0, btemp+1
  8821 ;; Tracked objects:
  8822 ;;		On entry : 0/0
  8823 ;;		On exit  : 0/0
  8824 ;;		Unchanged: 0/0
  8825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8826 ;;      Params:         8       0       0       0       0
  8827 ;;      Locals:         1       0       0       0       0
  8828 ;;      Temps:          1       0       0       0       0
  8829 ;;      Totals:        10       0       0       0       0
  8830 ;;Total ram usage:       10 bytes
  8831 ;; Hardware stack levels used: 1
  8832 ;; This function calls:
  8833 ;;		Nothing
  8834 ;; This function is called by:
  8835 ;;		_sprintf
  8836 ;; This function uses a non-reentrant model
  8837 ;;
  8838                           
  8839     1002                     ___llmod:	
  8840                           ;psect for function ___llmod
  8841                           
  8842     1002                     l3133:	
  8843                           ;incstack = 0
  8844                           ; Regs used in ___llmod: [wreg+status,2+status,0+btemp+1]
  8845                           
  8846     1002  0873               	movf	___llmod@divisor+3,w
  8847     1003  0472               	iorwf	___llmod@divisor+2,w
  8848     1004  0471               	iorwf	___llmod@divisor+1,w
  8849     1005  0470               	iorwf	___llmod@divisor,w
  8850     1006  1903               	skipnz
  8851     1007  2809               	goto	u4831
  8852     1008  280A               	goto	u4830
  8853     1009                     u4831:
  8854     1009  284D               	goto	l3151
  8855     100A                     u4830:
  8856     100A                     l3135:
  8857     100A  01F9               	clrf	___llmod@counter
  8858     100B  0AF9               	incf	___llmod@counter,f
  8859     100C  281A               	goto	l3141
  8860     100D                     l3137:
  8861     100D  3001               	movlw	1
  8862     100E  00F8               	movwf	??___llmod
  8863     100F                     u4845:
  8864     100F  1003               	clrc
  8865     1010  0DF0               	rlf	___llmod@divisor,f
  8866     1011  0DF1               	rlf	___llmod@divisor+1,f
  8867     1012  0DF2               	rlf	___llmod@divisor+2,f
  8868     1013  0DF3               	rlf	___llmod@divisor+3,f
  8869     1014  0BF8               	decfsz	??___llmod,f
  8870     1015  280F               	goto	u4845
  8871     1016                     l3139:
  8872     1016  3001               	movlw	1
  8873     1017  00FF               	movwf	btemp+1
  8874     1018  087F               	movf	btemp+1,w
  8875     1019  07F9               	addwf	___llmod@counter,f
  8876     101A                     l3141:
  8877     101A  1FF3               	btfss	___llmod@divisor+3,7
  8878     101B  281D               	goto	u4851
  8879     101C  281E               	goto	u4850
  8880     101D                     u4851:
  8881     101D  280D               	goto	l3137
  8882     101E                     u4850:
  8883     101E                     l3143:
  8884     101E  0873               	movf	___llmod@divisor+3,w
  8885     101F  0277               	subwf	___llmod@dividend+3,w
  8886     1020  1D03               	skipz
  8887     1021  282C               	goto	u4865
  8888     1022  0872               	movf	___llmod@divisor+2,w
  8889     1023  0276               	subwf	___llmod@dividend+2,w
  8890     1024  1D03               	skipz
  8891     1025  282C               	goto	u4865
  8892     1026  0871               	movf	___llmod@divisor+1,w
  8893     1027  0275               	subwf	___llmod@dividend+1,w
  8894     1028  1D03               	skipz
  8895     1029  282C               	goto	u4865
  8896     102A  0870               	movf	___llmod@divisor,w
  8897     102B  0274               	subwf	___llmod@dividend,w
  8898     102C                     u4865:
  8899     102C  1C03               	skipc
  8900     102D  282F               	goto	u4861
  8901     102E  2830               	goto	u4860
  8902     102F                     u4861:
  8903     102F  283E               	goto	l3147
  8904     1030                     u4860:
  8905     1030                     l3145:
  8906     1030  0870               	movf	___llmod@divisor,w
  8907     1031  02F4               	subwf	___llmod@dividend,f
  8908     1032  0871               	movf	___llmod@divisor+1,w
  8909     1033  1C03               	skipc
  8910     1034  0F71               	incfsz	___llmod@divisor+1,w
  8911     1035  02F5               	subwf	___llmod@dividend+1,f
  8912     1036  0872               	movf	___llmod@divisor+2,w
  8913     1037  1C03               	skipc
  8914     1038  0F72               	incfsz	___llmod@divisor+2,w
  8915     1039  02F6               	subwf	___llmod@dividend+2,f
  8916     103A  0873               	movf	___llmod@divisor+3,w
  8917     103B  1C03               	skipc
  8918     103C  0F73               	incfsz	___llmod@divisor+3,w
  8919     103D  02F7               	subwf	___llmod@dividend+3,f
  8920     103E                     l3147:
  8921     103E  3001               	movlw	1
  8922     103F                     u4875:
  8923     103F  1003               	clrc
  8924     1040  0CF3               	rrf	___llmod@divisor+3,f
  8925     1041  0CF2               	rrf	___llmod@divisor+2,f
  8926     1042  0CF1               	rrf	___llmod@divisor+1,f
  8927     1043  0CF0               	rrf	___llmod@divisor,f
  8928     1044  3EFF               	addlw	-1
  8929     1045  1D03               	skipz
  8930     1046  283F               	goto	u4875
  8931     1047                     l3149:
  8932     1047  3001               	movlw	1
  8933     1048  02F9               	subwf	___llmod@counter,f
  8934     1049  1D03               	btfss	3,2
  8935     104A  284C               	goto	u4881
  8936     104B  284D               	goto	u4880
  8937     104C                     u4881:
  8938     104C  281E               	goto	l3143
  8939     104D                     u4880:
  8940     104D                     l3151:
  8941     104D  0877               	movf	___llmod@dividend+3,w
  8942     104E  00F3               	movwf	?___llmod+3
  8943     104F  0876               	movf	___llmod@dividend+2,w
  8944     1050  00F2               	movwf	?___llmod+2
  8945     1051  0875               	movf	___llmod@dividend+1,w
  8946     1052  00F1               	movwf	?___llmod+1
  8947     1053  0874               	movf	___llmod@dividend,w
  8948     1054  00F0               	movwf	?___llmod
  8949     1055                     l583:
  8950     1055  0008               	return
  8951     1056                     __end_of___llmod:
  8952                           
  8953                           	psect	text31
  8954     1EBB                     __ptext31:	
  8955 ;; *************** function ___lldiv *****************
  8956 ;; Defined at:
  8957 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;  divisor         4    0[COMMON] unsigned long 
  8960 ;;  dividend        4    4[COMMON] unsigned long 
  8961 ;; Auto vars:     Size  Location     Type
  8962 ;;  quotient        4    9[COMMON] unsigned long 
  8963 ;;  counter         1   13[COMMON] unsigned char 
  8964 ;; Return value:  Size  Location     Type
  8965 ;;                  4    0[COMMON] unsigned long 
  8966 ;; Registers used:
  8967 ;;		wreg, status,2, status,0, btemp+1
  8968 ;; Tracked objects:
  8969 ;;		On entry : 0/0
  8970 ;;		On exit  : 0/0
  8971 ;;		Unchanged: 0/0
  8972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8973 ;;      Params:         8       0       0       0       0
  8974 ;;      Locals:         5       0       0       0       0
  8975 ;;      Temps:          1       0       0       0       0
  8976 ;;      Totals:        14       0       0       0       0
  8977 ;;Total ram usage:       14 bytes
  8978 ;; Hardware stack levels used: 1
  8979 ;; This function calls:
  8980 ;;		Nothing
  8981 ;; This function is called by:
  8982 ;;		_I2C_Master_Init
  8983 ;;		_sprintf
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987     1EBB                     ___lldiv:	
  8988                           ;psect for function ___lldiv
  8989                           
  8990     1EBB                     l3029:	
  8991                           ;incstack = 0
  8992                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  8993                           
  8994     1EBB  3000               	movlw	0
  8995     1EBC  00FC               	movwf	___lldiv@quotient+3
  8996     1EBD  3000               	movlw	0
  8997     1EBE  00FB               	movwf	___lldiv@quotient+2
  8998     1EBF  3000               	movlw	0
  8999     1EC0  00FA               	movwf	___lldiv@quotient+1
  9000     1EC1  3000               	movlw	0
  9001     1EC2  00F9               	movwf	___lldiv@quotient
  9002     1EC3  0873               	movf	___lldiv@divisor+3,w
  9003     1EC4  0472               	iorwf	___lldiv@divisor+2,w
  9004     1EC5  0471               	iorwf	___lldiv@divisor+1,w
  9005     1EC6  0470               	iorwf	___lldiv@divisor,w
  9006     1EC7  1903               	skipnz
  9007     1EC8  2ECA               	goto	u4551
  9008     1EC9  2ECB               	goto	u4550
  9009     1ECA                     u4551:
  9010     1ECA  2F18               	goto	l3051
  9011     1ECB                     u4550:
  9012     1ECB                     l3031:
  9013     1ECB  01FD               	clrf	___lldiv@counter
  9014     1ECC  0AFD               	incf	___lldiv@counter,f
  9015     1ECD  2EDB               	goto	l3037
  9016     1ECE                     l3033:
  9017     1ECE  3001               	movlw	1
  9018     1ECF  00F8               	movwf	??___lldiv
  9019     1ED0                     u4565:
  9020     1ED0  1003               	clrc
  9021     1ED1  0DF0               	rlf	___lldiv@divisor,f
  9022     1ED2  0DF1               	rlf	___lldiv@divisor+1,f
  9023     1ED3  0DF2               	rlf	___lldiv@divisor+2,f
  9024     1ED4  0DF3               	rlf	___lldiv@divisor+3,f
  9025     1ED5  0BF8               	decfsz	??___lldiv,f
  9026     1ED6  2ED0               	goto	u4565
  9027     1ED7                     l3035:
  9028     1ED7  3001               	movlw	1
  9029     1ED8  00FF               	movwf	btemp+1
  9030     1ED9  087F               	movf	btemp+1,w
  9031     1EDA  07FD               	addwf	___lldiv@counter,f
  9032     1EDB                     l3037:
  9033     1EDB  1FF3               	btfss	___lldiv@divisor+3,7
  9034     1EDC  2EDE               	goto	u4571
  9035     1EDD  2EDF               	goto	u4570
  9036     1EDE                     u4571:
  9037     1EDE  2ECE               	goto	l3033
  9038     1EDF                     u4570:
  9039     1EDF                     l3039:
  9040     1EDF  3001               	movlw	1
  9041     1EE0  00F8               	movwf	??___lldiv
  9042     1EE1                     u4585:
  9043     1EE1  1003               	clrc
  9044     1EE2  0DF9               	rlf	___lldiv@quotient,f
  9045     1EE3  0DFA               	rlf	___lldiv@quotient+1,f
  9046     1EE4  0DFB               	rlf	___lldiv@quotient+2,f
  9047     1EE5  0DFC               	rlf	___lldiv@quotient+3,f
  9048     1EE6  0BF8               	decfsz	??___lldiv,f
  9049     1EE7  2EE1               	goto	u4585
  9050     1EE8                     l3041:
  9051     1EE8  0873               	movf	___lldiv@divisor+3,w
  9052     1EE9  0277               	subwf	___lldiv@dividend+3,w
  9053     1EEA  1D03               	skipz
  9054     1EEB  2EF6               	goto	u4595
  9055     1EEC  0872               	movf	___lldiv@divisor+2,w
  9056     1EED  0276               	subwf	___lldiv@dividend+2,w
  9057     1EEE  1D03               	skipz
  9058     1EEF  2EF6               	goto	u4595
  9059     1EF0  0871               	movf	___lldiv@divisor+1,w
  9060     1EF1  0275               	subwf	___lldiv@dividend+1,w
  9061     1EF2  1D03               	skipz
  9062     1EF3  2EF6               	goto	u4595
  9063     1EF4  0870               	movf	___lldiv@divisor,w
  9064     1EF5  0274               	subwf	___lldiv@dividend,w
  9065     1EF6                     u4595:
  9066     1EF6  1C03               	skipc
  9067     1EF7  2EF9               	goto	u4591
  9068     1EF8  2EFA               	goto	u4590
  9069     1EF9                     u4591:
  9070     1EF9  2F09               	goto	l3047
  9071     1EFA                     u4590:
  9072     1EFA                     l3043:
  9073     1EFA  0870               	movf	___lldiv@divisor,w
  9074     1EFB  02F4               	subwf	___lldiv@dividend,f
  9075     1EFC  0871               	movf	___lldiv@divisor+1,w
  9076     1EFD  1C03               	skipc
  9077     1EFE  0F71               	incfsz	___lldiv@divisor+1,w
  9078     1EFF  02F5               	subwf	___lldiv@dividend+1,f
  9079     1F00  0872               	movf	___lldiv@divisor+2,w
  9080     1F01  1C03               	skipc
  9081     1F02  0F72               	incfsz	___lldiv@divisor+2,w
  9082     1F03  02F6               	subwf	___lldiv@dividend+2,f
  9083     1F04  0873               	movf	___lldiv@divisor+3,w
  9084     1F05  1C03               	skipc
  9085     1F06  0F73               	incfsz	___lldiv@divisor+3,w
  9086     1F07  02F7               	subwf	___lldiv@dividend+3,f
  9087     1F08                     l3045:
  9088     1F08  1479               	bsf	___lldiv@quotient,0
  9089     1F09                     l3047:
  9090     1F09  3001               	movlw	1
  9091     1F0A                     u4605:
  9092     1F0A  1003               	clrc
  9093     1F0B  0CF3               	rrf	___lldiv@divisor+3,f
  9094     1F0C  0CF2               	rrf	___lldiv@divisor+2,f
  9095     1F0D  0CF1               	rrf	___lldiv@divisor+1,f
  9096     1F0E  0CF0               	rrf	___lldiv@divisor,f
  9097     1F0F  3EFF               	addlw	-1
  9098     1F10  1D03               	skipz
  9099     1F11  2F0A               	goto	u4605
  9100     1F12                     l3049:
  9101     1F12  3001               	movlw	1
  9102     1F13  02FD               	subwf	___lldiv@counter,f
  9103     1F14  1D03               	btfss	3,2
  9104     1F15  2F17               	goto	u4611
  9105     1F16  2F18               	goto	u4610
  9106     1F17                     u4611:
  9107     1F17  2EDF               	goto	l3039
  9108     1F18                     u4610:
  9109     1F18                     l3051:
  9110     1F18  087C               	movf	___lldiv@quotient+3,w
  9111     1F19  00F3               	movwf	?___lldiv+3
  9112     1F1A  087B               	movf	___lldiv@quotient+2,w
  9113     1F1B  00F2               	movwf	?___lldiv+2
  9114     1F1C  087A               	movf	___lldiv@quotient+1,w
  9115     1F1D  00F1               	movwf	?___lldiv+1
  9116     1F1E  0879               	movf	___lldiv@quotient,w
  9117     1F1F  00F0               	movwf	?___lldiv
  9118     1F20                     l363:
  9119     1F20  0008               	return
  9120     1F21                     __end_of___lldiv:
  9121                           
  9122                           	psect	text32
  9123     1F88                     __ptext32:	
  9124 ;; *************** function ___fltol *****************
  9125 ;; Defined at:
  9126 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fltol.c"
  9127 ;; Parameters:    Size  Location     Type
  9128 ;;  f1              4   45[BANK0 ] unsigned long 
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;  exp1            1   54[BANK0 ] unsigned char 
  9131 ;;  sign1           1   53[BANK0 ] unsigned char 
  9132 ;; Return value:  Size  Location     Type
  9133 ;;                  4   45[BANK0 ] long 
  9134 ;; Registers used:
  9135 ;;		wreg, status,2, status,0, btemp+1
  9136 ;; Tracked objects:
  9137 ;;		On entry : 0/0
  9138 ;;		On exit  : 0/0
  9139 ;;		Unchanged: 0/0
  9140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9141 ;;      Params:         0       4       0       0       0
  9142 ;;      Locals:         0       2       0       0       0
  9143 ;;      Temps:          0       4       0       0       0
  9144 ;;      Totals:         0      10       0       0       0
  9145 ;;Total ram usage:       10 bytes
  9146 ;; Hardware stack levels used: 1
  9147 ;; This function calls:
  9148 ;;		Nothing
  9149 ;; This function is called by:
  9150 ;;		_sprintf
  9151 ;; This function uses a non-reentrant model
  9152 ;;
  9153                           
  9154     1F88                     ___fltol:	
  9155                           ;psect for function ___fltol
  9156                           
  9157     1F88                     l3095:	
  9158                           ;incstack = 0
  9159                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  9160                           
  9161     1F88  1003               	clrc
  9162     1F89  1283               	bcf	3,5	;RP0=0, select bank0
  9163     1F8A  1303               	bcf	3,6	;RP1=0, select bank0
  9164     1F8B  0D4F               	rlf	___fltol@f1+2,w
  9165     1F8C  0D50               	rlf	___fltol@f1+3,w
  9166     1F8D  00D6               	movwf	___fltol@exp1
  9167     1F8E  0856               	movf	___fltol@exp1,w
  9168     1F8F  1D03               	btfss	3,2
  9169     1F90  2F92               	goto	u4731
  9170     1F91  2F93               	goto	u4730
  9171     1F92                     u4731:
  9172     1F92  2F9C               	goto	l3101
  9173     1F93                     u4730:
  9174     1F93                     l3097:
  9175     1F93  3000               	movlw	0
  9176     1F94  00D0               	movwf	?___fltol+3
  9177     1F95  3000               	movlw	0
  9178     1F96  00CF               	movwf	?___fltol+2
  9179     1F97  3000               	movlw	0
  9180     1F98  00CE               	movwf	?___fltol+1
  9181     1F99  3000               	movlw	0
  9182     1F9A  00CD               	movwf	?___fltol
  9183     1F9B  2FFF               	goto	l530
  9184     1F9C                     l3101:
  9185     1F9C  084D               	movf	___fltol@f1,w
  9186     1F9D  00D1               	movwf	??___fltol
  9187     1F9E  084E               	movf	___fltol@f1+1,w
  9188     1F9F  00D2               	movwf	??___fltol+1
  9189     1FA0  084F               	movf	___fltol@f1+2,w
  9190     1FA1  00D3               	movwf	??___fltol+2
  9191     1FA2  0850               	movf	___fltol@f1+3,w
  9192     1FA3  00D4               	movwf	??___fltol+3
  9193     1FA4  301F               	movlw	31
  9194     1FA5                     u4745:
  9195     1FA5  1003               	clrc
  9196     1FA6  0CD4               	rrf	??___fltol+3,f
  9197     1FA7  0CD3               	rrf	??___fltol+2,f
  9198     1FA8  0CD2               	rrf	??___fltol+1,f
  9199     1FA9  0CD1               	rrf	??___fltol,f
  9200     1FAA                     u4740:
  9201     1FAA  3EFF               	addlw	-1
  9202     1FAB  1D03               	skipz
  9203     1FAC  2FA5               	goto	u4745
  9204     1FAD  0851               	movf	??___fltol,w
  9205     1FAE  00D5               	movwf	___fltol@sign1
  9206     1FAF                     l3103:
  9207     1FAF  17CF               	bsf	___fltol@f1+2,7
  9208     1FB0                     l3105:
  9209     1FB0  30FF               	movlw	255
  9210     1FB1  05CD               	andwf	___fltol@f1,f
  9211     1FB2  30FF               	movlw	255
  9212     1FB3  05CE               	andwf	___fltol@f1+1,f
  9213     1FB4  30FF               	movlw	255
  9214     1FB5  05CF               	andwf	___fltol@f1+2,f
  9215     1FB6  3000               	movlw	0
  9216     1FB7  05D0               	andwf	___fltol@f1+3,f
  9217     1FB8                     l3107:
  9218     1FB8  3096               	movlw	150
  9219     1FB9  02D6               	subwf	___fltol@exp1,f
  9220     1FBA                     l3109:
  9221     1FBA  1FD6               	btfss	___fltol@exp1,7
  9222     1FBB  2FBD               	goto	u4751
  9223     1FBC  2FBE               	goto	u4750
  9224     1FBD                     u4751:
  9225     1FBD  2FD8               	goto	l3121
  9226     1FBE                     u4750:
  9227     1FBE                     l3111:
  9228     1FBE  0856               	movf	___fltol@exp1,w
  9229     1FBF  3A80               	xorlw	128
  9230     1FC0  3E97               	addlw	151
  9231     1FC1  1803               	skipnc
  9232     1FC2  2FC4               	goto	u4761
  9233     1FC3  2FC5               	goto	u4760
  9234     1FC4                     u4761:
  9235     1FC4  2FC6               	goto	l3117
  9236     1FC5                     u4760:
  9237     1FC5  2F93               	goto	l3097
  9238     1FC6                     l3117:
  9239     1FC6  3001               	movlw	1
  9240     1FC7                     u4775:
  9241     1FC7  1003               	clrc
  9242     1FC8  0CD0               	rrf	___fltol@f1+3,f
  9243     1FC9  0CCF               	rrf	___fltol@f1+2,f
  9244     1FCA  0CCE               	rrf	___fltol@f1+1,f
  9245     1FCB  0CCD               	rrf	___fltol@f1,f
  9246     1FCC  3EFF               	addlw	-1
  9247     1FCD  1D03               	skipz
  9248     1FCE  2FC7               	goto	u4775
  9249     1FCF                     l3119:
  9250     1FCF  3001               	movlw	1
  9251     1FD0  00FF               	movwf	btemp+1
  9252     1FD1  087F               	movf	btemp+1,w
  9253     1FD2  07D6               	addwf	___fltol@exp1,f
  9254     1FD3  1D03               	btfss	3,2
  9255     1FD4  2FD6               	goto	u4781
  9256     1FD5  2FD7               	goto	u4780
  9257     1FD6                     u4781:
  9258     1FD6  2FC6               	goto	l3117
  9259     1FD7                     u4780:
  9260     1FD7  2FEF               	goto	l3129
  9261     1FD8                     l3121:
  9262     1FD8  3020               	movlw	32
  9263     1FD9  0256               	subwf	___fltol@exp1,w
  9264     1FDA  1C03               	skipc
  9265     1FDB  2FDD               	goto	u4791
  9266     1FDC  2FDE               	goto	u4790
  9267     1FDD                     u4791:
  9268     1FDD  2FEA               	goto	l537
  9269     1FDE                     u4790:
  9270     1FDE  2F93               	goto	l3097
  9271     1FDF                     l3127:
  9272     1FDF  3001               	movlw	1
  9273     1FE0  00D1               	movwf	??___fltol
  9274     1FE1                     u4805:
  9275     1FE1  1003               	clrc
  9276     1FE2  0DCD               	rlf	___fltol@f1,f
  9277     1FE3  0DCE               	rlf	___fltol@f1+1,f
  9278     1FE4  0DCF               	rlf	___fltol@f1+2,f
  9279     1FE5  0DD0               	rlf	___fltol@f1+3,f
  9280     1FE6  0BD1               	decfsz	??___fltol,f
  9281     1FE7  2FE1               	goto	u4805
  9282     1FE8  3001               	movlw	1
  9283     1FE9  02D6               	subwf	___fltol@exp1,f
  9284     1FEA                     l537:
  9285     1FEA  0856               	movf	___fltol@exp1,w
  9286     1FEB  1D03               	btfss	3,2
  9287     1FEC  2FEE               	goto	u4811
  9288     1FED  2FEF               	goto	u4810
  9289     1FEE                     u4811:
  9290     1FEE  2FDF               	goto	l3127
  9291     1FEF                     u4810:
  9292     1FEF                     l3129:
  9293     1FEF  0855               	movf	___fltol@sign1,w
  9294     1FF0  1903               	btfsc	3,2
  9295     1FF1  2FF3               	goto	u4821
  9296     1FF2  2FF4               	goto	u4820
  9297     1FF3                     u4821:
  9298     1FF3  2FFF               	goto	l540
  9299     1FF4                     u4820:
  9300     1FF4                     l3131:
  9301     1FF4  09CD               	comf	___fltol@f1,f
  9302     1FF5  09CE               	comf	___fltol@f1+1,f
  9303     1FF6  09CF               	comf	___fltol@f1+2,f
  9304     1FF7  09D0               	comf	___fltol@f1+3,f
  9305     1FF8  0ACD               	incf	___fltol@f1,f
  9306     1FF9  1903               	skipnz
  9307     1FFA  0ACE               	incf	___fltol@f1+1,f
  9308     1FFB  1903               	skipnz
  9309     1FFC  0ACF               	incf	___fltol@f1+2,f
  9310     1FFD  1903               	skipnz
  9311     1FFE  0AD0               	incf	___fltol@f1+3,f
  9312     1FFF                     l540:
  9313     1FFF                     l530:
  9314     1FFF  0008               	return
  9315     2000                     __end_of___fltol:
  9316                           
  9317                           	psect	text33
  9318     1BBB                     __ptext33:	
  9319 ;; *************** function ___flsub *****************
  9320 ;; Defined at:
  9321 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcadd.c"
  9322 ;; Parameters:    Size  Location     Type
  9323 ;;  a               4   66[BANK0 ] long 
  9324 ;;  b               4   70[BANK0 ] long 
  9325 ;; Auto vars:     Size  Location     Type
  9326 ;;		None
  9327 ;; Return value:  Size  Location     Type
  9328 ;;                  4   66[BANK0 ] long 
  9329 ;; Registers used:
  9330 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9331 ;; Tracked objects:
  9332 ;;		On entry : 0/0
  9333 ;;		On exit  : 0/0
  9334 ;;		Unchanged: 0/0
  9335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9336 ;;      Params:         0       8       0       0       0
  9337 ;;      Locals:         0       0       0       0       0
  9338 ;;      Temps:          0       0       0       0       0
  9339 ;;      Totals:         0       8       0       0       0
  9340 ;;Total ram usage:        8 bytes
  9341 ;; Hardware stack levels used: 1
  9342 ;; Hardware stack levels required when called: 1
  9343 ;; This function calls:
  9344 ;;		___fladd
  9345 ;; This function is called by:
  9346 ;;		_sprintf
  9347 ;; This function uses a non-reentrant model
  9348 ;;
  9349                           
  9350     1BBB                     ___flsub:	
  9351                           ;psect for function ___flsub
  9352                           
  9353     1BBB                     l3155:	
  9354                           ;incstack = 0
  9355                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9356                           
  9357     1BBB  3080               	movlw	128
  9358     1BBC  1283               	bcf	3,5	;RP0=0, select bank0
  9359     1BBD  1303               	bcf	3,6	;RP1=0, select bank0
  9360     1BBE  06E5               	xorwf	___flsub@a+3,f
  9361     1BBF                     l3157:
  9362     1BBF  0869               	movf	___flsub@b+3,w
  9363     1BC0  00D1               	movwf	___fladd@b+3
  9364     1BC1  0868               	movf	___flsub@b+2,w
  9365     1BC2  00D0               	movwf	___fladd@b+2
  9366     1BC3  0867               	movf	___flsub@b+1,w
  9367     1BC4  00CF               	movwf	___fladd@b+1
  9368     1BC5  0866               	movf	___flsub@b,w
  9369     1BC6  00CE               	movwf	___fladd@b
  9370     1BC7  0865               	movf	___flsub@a+3,w
  9371     1BC8  00D5               	movwf	___fladd@a+3
  9372     1BC9  0864               	movf	___flsub@a+2,w
  9373     1BCA  00D4               	movwf	___fladd@a+2
  9374     1BCB  0863               	movf	___flsub@a+1,w
  9375     1BCC  00D3               	movwf	___fladd@a+1
  9376     1BCD  0862               	movf	___flsub@a,w
  9377     1BCE  00D2               	movwf	___fladd@a
  9378     1BCF  160A  118A  25A8  160A  158A  	fcall	___fladd
  9379     1BD4  1283               	bcf	3,5	;RP0=0, select bank0
  9380     1BD5  1303               	bcf	3,6	;RP1=0, select bank0
  9381     1BD6  0851               	movf	?___fladd+3,w
  9382     1BD7  00E5               	movwf	?___flsub+3
  9383     1BD8  0850               	movf	?___fladd+2,w
  9384     1BD9  00E4               	movwf	?___flsub+2
  9385     1BDA  084F               	movf	?___fladd+1,w
  9386     1BDB  00E3               	movwf	?___flsub+1
  9387     1BDC  084E               	movf	?___fladd,w
  9388     1BDD  00E2               	movwf	?___flsub
  9389     1BDE                     l700:
  9390     1BDE  0008               	return
  9391     1BDF                     __end_of___flsub:
  9392                           
  9393                           	psect	text34
  9394     15A8                     __ptext34:	
  9395 ;; *************** function ___fladd *****************
  9396 ;; Defined at:
  9397 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\sprcadd.c"
  9398 ;; Parameters:    Size  Location     Type
  9399 ;;  b               4   46[BANK0 ] long 
  9400 ;;  a               4   50[BANK0 ] long 
  9401 ;; Auto vars:     Size  Location     Type
  9402 ;;  grs             1   65[BANK0 ] unsigned char 
  9403 ;;  bexp            1   64[BANK0 ] unsigned char 
  9404 ;;  aexp            1   63[BANK0 ] unsigned char 
  9405 ;;  signs           1   62[BANK0 ] unsigned char 
  9406 ;; Return value:  Size  Location     Type
  9407 ;;                  4   46[BANK0 ] unsigned char 
  9408 ;; Registers used:
  9409 ;;		wreg, status,2, status,0, btemp+1
  9410 ;; Tracked objects:
  9411 ;;		On entry : 0/0
  9412 ;;		On exit  : 0/0
  9413 ;;		Unchanged: 0/0
  9414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9415 ;;      Params:         0       8       0       0       0
  9416 ;;      Locals:         0       4       0       0       0
  9417 ;;      Temps:          0       8       0       0       0
  9418 ;;      Totals:         0      20       0       0       0
  9419 ;;Total ram usage:       20 bytes
  9420 ;; Hardware stack levels used: 1
  9421 ;; This function calls:
  9422 ;;		Nothing
  9423 ;; This function is called by:
  9424 ;;		_sprintf
  9425 ;;		___flsub
  9426 ;; This function uses a non-reentrant model
  9427 ;;
  9428                           
  9429     15A8                     ___fladd:	
  9430                           ;psect for function ___fladd
  9431                           
  9432     15A8                     l2475:	
  9433                           ;incstack = 0
  9434                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  9435                           
  9436     15A8  1283               	bcf	3,5	;RP0=0, select bank0
  9437     15A9  1303               	bcf	3,6	;RP1=0, select bank0
  9438     15AA  0851               	movf	___fladd@b+3,w
  9439     15AB  3980               	andlw	128
  9440     15AC  00DE               	movwf	___fladd@signs
  9441     15AD                     l2477:
  9442     15AD  0851               	movf	___fladd@b+3,w
  9443     15AE  00D6               	movwf	??___fladd
  9444     15AF  0756               	addwf	??___fladd,w
  9445     15B0  00E0               	movwf	___fladd@bexp
  9446     15B1                     l2479:
  9447     15B1  1FD0               	btfss	___fladd@b+2,7
  9448     15B2  2DB4               	goto	u3141
  9449     15B3  2DB5               	goto	u3140
  9450     15B4                     u3141:
  9451     15B4  2DB6               	goto	l2483
  9452     15B5                     u3140:
  9453     15B5                     l2481:
  9454     15B5  1460               	bsf	___fladd@bexp,0
  9455     15B6                     l2483:
  9456     15B6  0860               	movf	___fladd@bexp,w
  9457     15B7  1903               	btfsc	3,2
  9458     15B8  2DBA               	goto	u3151
  9459     15B9  2DBB               	goto	u3150
  9460     15BA                     u3151:
  9461     15BA  2DCB               	goto	l2493
  9462     15BB                     u3150:
  9463     15BB                     l2485:
  9464     15BB  0A60               	incf	___fladd@bexp,w
  9465     15BC  1D03               	btfss	3,2
  9466     15BD  2DBF               	goto	u3161
  9467     15BE  2DC0               	goto	u3160
  9468     15BF                     u3161:
  9469     15BF  2DC8               	goto	l2489
  9470     15C0                     u3160:
  9471     15C0                     l2487:
  9472     15C0  3000               	movlw	0
  9473     15C1  00D1               	movwf	___fladd@b+3
  9474     15C2  3000               	movlw	0
  9475     15C3  00D0               	movwf	___fladd@b+2
  9476     15C4  3000               	movlw	0
  9477     15C5  00CF               	movwf	___fladd@b+1
  9478     15C6  3000               	movlw	0
  9479     15C7  00CE               	movwf	___fladd@b
  9480     15C8                     l2489:
  9481     15C8  17D0               	bsf	___fladd@b+2,7
  9482     15C9                     l2491:
  9483     15C9  01D1               	clrf	___fladd@b+3
  9484     15CA  2DD3               	goto	l2495
  9485     15CB                     l2493:
  9486     15CB  3000               	movlw	0
  9487     15CC  00D1               	movwf	___fladd@b+3
  9488     15CD  3000               	movlw	0
  9489     15CE  00D0               	movwf	___fladd@b+2
  9490     15CF  3000               	movlw	0
  9491     15D0  00CF               	movwf	___fladd@b+1
  9492     15D1  3000               	movlw	0
  9493     15D2  00CE               	movwf	___fladd@b
  9494     15D3                     l2495:
  9495     15D3  0855               	movf	___fladd@a+3,w
  9496     15D4  3980               	andlw	128
  9497     15D5  00DF               	movwf	___fladd@aexp
  9498     15D6                     l2497:
  9499     15D6  085F               	movf	___fladd@aexp,w
  9500     15D7  065E               	xorwf	___fladd@signs,w
  9501     15D8  1903               	skipnz
  9502     15D9  2DDB               	goto	u3171
  9503     15DA  2DDC               	goto	u3170
  9504     15DB                     u3171:
  9505     15DB  2DDD               	goto	l2501
  9506     15DC                     u3170:
  9507     15DC                     l2499:
  9508     15DC  175E               	bsf	___fladd@signs,6
  9509     15DD                     l2501:
  9510     15DD  0855               	movf	___fladd@a+3,w
  9511     15DE  00D6               	movwf	??___fladd
  9512     15DF  0756               	addwf	??___fladd,w
  9513     15E0  00DF               	movwf	___fladd@aexp
  9514     15E1                     l2503:
  9515     15E1  1FD4               	btfss	___fladd@a+2,7
  9516     15E2  2DE4               	goto	u3181
  9517     15E3  2DE5               	goto	u3180
  9518     15E4                     u3181:
  9519     15E4  2DE6               	goto	l2507
  9520     15E5                     u3180:
  9521     15E5                     l2505:
  9522     15E5  145F               	bsf	___fladd@aexp,0
  9523     15E6                     l2507:
  9524     15E6  085F               	movf	___fladd@aexp,w
  9525     15E7  1903               	btfsc	3,2
  9526     15E8  2DEA               	goto	u3191
  9527     15E9  2DEB               	goto	u3190
  9528     15EA                     u3191:
  9529     15EA  2DFB               	goto	l2517
  9530     15EB                     u3190:
  9531     15EB                     l2509:
  9532     15EB  0A5F               	incf	___fladd@aexp,w
  9533     15EC  1D03               	btfss	3,2
  9534     15ED  2DEF               	goto	u3201
  9535     15EE  2DF0               	goto	u3200
  9536     15EF                     u3201:
  9537     15EF  2DF8               	goto	l2513
  9538     15F0                     u3200:
  9539     15F0                     l2511:
  9540     15F0  3000               	movlw	0
  9541     15F1  00D5               	movwf	___fladd@a+3
  9542     15F2  3000               	movlw	0
  9543     15F3  00D4               	movwf	___fladd@a+2
  9544     15F4  3000               	movlw	0
  9545     15F5  00D3               	movwf	___fladd@a+1
  9546     15F6  3000               	movlw	0
  9547     15F7  00D2               	movwf	___fladd@a
  9548     15F8                     l2513:
  9549     15F8  17D4               	bsf	___fladd@a+2,7
  9550     15F9                     l2515:
  9551     15F9  01D5               	clrf	___fladd@a+3
  9552     15FA  2E03               	goto	l654
  9553     15FB                     l2517:
  9554     15FB  3000               	movlw	0
  9555     15FC  00D5               	movwf	___fladd@a+3
  9556     15FD  3000               	movlw	0
  9557     15FE  00D4               	movwf	___fladd@a+2
  9558     15FF  3000               	movlw	0
  9559     1600  00D3               	movwf	___fladd@a+1
  9560     1601  3000               	movlw	0
  9561     1602  00D2               	movwf	___fladd@a
  9562     1603                     l654:
  9563     1603  0860               	movf	___fladd@bexp,w
  9564     1604  025F               	subwf	___fladd@aexp,w
  9565     1605  1803               	skipnc
  9566     1606  2E08               	goto	u3211
  9567     1607  2E09               	goto	u3210
  9568     1608                     u3211:
  9569     1608  2E2F               	goto	l2553
  9570     1609                     u3210:
  9571     1609                     l2519:
  9572     1609  1F5E               	btfss	___fladd@signs,6
  9573     160A  2E0C               	goto	u3221
  9574     160B  2E0D               	goto	u3220
  9575     160C                     u3221:
  9576     160C  2E11               	goto	l2523
  9577     160D                     u3220:
  9578     160D                     l2521:
  9579     160D  3080               	movlw	128
  9580     160E  00FF               	movwf	btemp+1
  9581     160F  087F               	movf	btemp+1,w
  9582     1610  06DE               	xorwf	___fladd@signs,f
  9583     1611                     l2523:
  9584     1611  0860               	movf	___fladd@bexp,w
  9585     1612  00E1               	movwf	___fladd@grs
  9586     1613                     l2525:
  9587     1613  085F               	movf	___fladd@aexp,w
  9588     1614  00E0               	movwf	___fladd@bexp
  9589     1615                     l2527:
  9590     1615  0861               	movf	___fladd@grs,w
  9591     1616  00DF               	movwf	___fladd@aexp
  9592     1617                     l2529:
  9593     1617  084E               	movf	___fladd@b,w
  9594     1618  00E1               	movwf	___fladd@grs
  9595     1619                     l2531:
  9596     1619  0852               	movf	___fladd@a,w
  9597     161A  00CE               	movwf	___fladd@b
  9598     161B                     l2533:
  9599     161B  0861               	movf	___fladd@grs,w
  9600     161C  00D2               	movwf	___fladd@a
  9601     161D                     l2535:
  9602     161D  084F               	movf	___fladd@b+1,w
  9603     161E  00E1               	movwf	___fladd@grs
  9604     161F                     l2537:
  9605     161F  0853               	movf	___fladd@a+1,w
  9606     1620  00CF               	movwf	___fladd@b+1
  9607     1621                     l2539:
  9608     1621  0861               	movf	___fladd@grs,w
  9609     1622  00D3               	movwf	___fladd@a+1
  9610     1623                     l2541:
  9611     1623  0850               	movf	___fladd@b+2,w
  9612     1624  00E1               	movwf	___fladd@grs
  9613     1625                     l2543:
  9614     1625  0854               	movf	___fladd@a+2,w
  9615     1626  00D0               	movwf	___fladd@b+2
  9616     1627                     l2545:
  9617     1627  0861               	movf	___fladd@grs,w
  9618     1628  00D4               	movwf	___fladd@a+2
  9619     1629                     l2547:
  9620     1629  0851               	movf	___fladd@b+3,w
  9621     162A  00E1               	movwf	___fladd@grs
  9622     162B                     l2549:
  9623     162B  0855               	movf	___fladd@a+3,w
  9624     162C  00D1               	movwf	___fladd@b+3
  9625     162D                     l2551:
  9626     162D  0861               	movf	___fladd@grs,w
  9627     162E  00D5               	movwf	___fladd@a+3
  9628     162F                     l2553:
  9629     162F  01E1               	clrf	___fladd@grs
  9630     1630                     l2555:
  9631     1630  085F               	movf	___fladd@aexp,w
  9632     1631  00D6               	movwf	??___fladd
  9633     1632  01D7               	clrf	??___fladd+1
  9634     1633  0857               	movf	??___fladd+1,w
  9635     1634  00D9               	movwf	??___fladd+3
  9636     1635  0860               	movf	___fladd@bexp,w
  9637     1636  0256               	subwf	??___fladd,w
  9638     1637  00D8               	movwf	??___fladd+2
  9639     1638  1C03               	skipc
  9640     1639  03D9               	decf	??___fladd+3,f
  9641     163A  0859               	movf	??___fladd+3,w
  9642     163B  3A80               	xorlw	128
  9643     163C  00FF               	movwf	btemp+1
  9644     163D  3080               	movlw	128
  9645     163E  027F               	subwf	btemp+1,w
  9646     163F  1D03               	skipz
  9647     1640  2E43               	goto	u3235
  9648     1641  301A               	movlw	26
  9649     1642  0258               	subwf	??___fladd+2,w
  9650     1643                     u3235:
  9651     1643  1C03               	skipc
  9652     1644  2E46               	goto	u3231
  9653     1645  2E47               	goto	u3230
  9654     1646                     u3231:
  9655     1646  2E7E               	goto	l2571
  9656     1647                     u3230:
  9657     1647                     l2557:
  9658     1647  1283               	bcf	3,5	;RP0=0, select bank0
  9659     1648  1303               	bcf	3,6	;RP1=0, select bank0
  9660     1649  0851               	movf	___fladd@b+3,w
  9661     164A  0450               	iorwf	___fladd@b+2,w
  9662     164B  044F               	iorwf	___fladd@b+1,w
  9663     164C  044E               	iorwf	___fladd@b,w
  9664     164D  1D03               	skipz
  9665     164E  2E50               	goto	u3241
  9666     164F  2E52               	goto	u3240
  9667     1650                     u3241:
  9668     1650  3001               	movlw	1
  9669     1651  2E53               	goto	u3250
  9670     1652                     u3240:
  9671     1652  3000               	movlw	0
  9672     1653                     u3250:
  9673     1653  00E1               	movwf	___fladd@grs
  9674     1654  3000               	movlw	0
  9675     1655  00D1               	movwf	___fladd@b+3
  9676     1656  3000               	movlw	0
  9677     1657  00D0               	movwf	___fladd@b+2
  9678     1658  3000               	movlw	0
  9679     1659  00CF               	movwf	___fladd@b+1
  9680     165A  3000               	movlw	0
  9681     165B  00CE               	movwf	___fladd@b
  9682     165C  085F               	movf	___fladd@aexp,w
  9683     165D  00E0               	movwf	___fladd@bexp
  9684     165E  2E86               	goto	l658
  9685     165F                     l660:
  9686     165F  1C61               	btfss	___fladd@grs,0
  9687     1660  2E62               	goto	u3261
  9688     1661  2E63               	goto	u3260
  9689     1662                     u3261:
  9690     1662  2E6A               	goto	l2561
  9691     1663                     u3260:
  9692     1663                     l2559:
  9693     1663  0861               	movf	___fladd@grs,w
  9694     1664  00D6               	movwf	??___fladd
  9695     1665  1003               	clrc
  9696     1666  0C56               	rrf	??___fladd,w
  9697     1667  3801               	iorlw	1
  9698     1668  00E1               	movwf	___fladd@grs
  9699     1669  2E6C               	goto	l2563
  9700     166A                     l2561:
  9701     166A  1003               	clrc
  9702     166B  0CE1               	rrf	___fladd@grs,f
  9703     166C                     l2563:
  9704     166C  1C4E               	btfss	___fladd@b,0
  9705     166D  2E6F               	goto	u3271
  9706     166E  2E70               	goto	u3270
  9707     166F                     u3271:
  9708     166F  2E71               	goto	l2567
  9709     1670                     u3270:
  9710     1670                     l2565:
  9711     1670  17E1               	bsf	___fladd@grs,7
  9712     1671                     l2567:
  9713     1671  3001               	movlw	1
  9714     1672  00D6               	movwf	??___fladd
  9715     1673                     u3285:
  9716     1673  0D51               	rlf	___fladd@b+3,w
  9717     1674  0CD1               	rrf	___fladd@b+3,f
  9718     1675  0CD0               	rrf	___fladd@b+2,f
  9719     1676  0CCF               	rrf	___fladd@b+1,f
  9720     1677  0CCE               	rrf	___fladd@b,f
  9721     1678  0BD6               	decfsz	??___fladd& (0+127),f
  9722     1679  2E73               	goto	u3285
  9723     167A                     l2569:
  9724     167A  3001               	movlw	1
  9725     167B  00FF               	movwf	btemp+1
  9726     167C  087F               	movf	btemp+1,w
  9727     167D  07E0               	addwf	___fladd@bexp,f
  9728     167E                     l2571:
  9729     167E  1283               	bcf	3,5	;RP0=0, select bank0
  9730     167F  1303               	bcf	3,6	;RP1=0, select bank0
  9731     1680  085F               	movf	___fladd@aexp,w
  9732     1681  0260               	subwf	___fladd@bexp,w
  9733     1682  1C03               	skipc
  9734     1683  2E85               	goto	u3291
  9735     1684  2E86               	goto	u3290
  9736     1685                     u3291:
  9737     1685  2E5F               	goto	l660
  9738     1686                     u3290:
  9739     1686                     l658:
  9740     1686  1B5E               	btfsc	___fladd@signs,6
  9741     1687  2E89               	goto	u3301
  9742     1688  2E8A               	goto	u3300
  9743     1689                     u3301:
  9744     1689  2ED3               	goto	l2597
  9745     168A                     u3300:
  9746     168A                     l2573:
  9747     168A  0860               	movf	___fladd@bexp,w
  9748     168B  1D03               	btfss	3,2
  9749     168C  2E8E               	goto	u3311
  9750     168D  2E8F               	goto	u3310
  9751     168E                     u3311:
  9752     168E  2E98               	goto	l2579
  9753     168F                     u3310:
  9754     168F                     l2575:
  9755     168F  3000               	movlw	0
  9756     1690  00D1               	movwf	?___fladd+3
  9757     1691  3000               	movlw	0
  9758     1692  00D0               	movwf	?___fladd+2
  9759     1693  3000               	movlw	0
  9760     1694  00CF               	movwf	?___fladd+1
  9761     1695  3000               	movlw	0
  9762     1696  00CE               	movwf	?___fladd
  9763     1697  2FFF               	goto	l667
  9764     1698                     l2579:
  9765     1698  0852               	movf	___fladd@a,w
  9766     1699  07CE               	addwf	___fladd@b,f
  9767     169A  0853               	movf	___fladd@a+1,w
  9768     169B  1103               	clrz
  9769     169C  1803               	skipnc
  9770     169D  3E01               	addlw	1
  9771     169E  1903               	skipnz
  9772     169F  2EA1               	goto	u3321
  9773     16A0  07CF               	addwf	___fladd@b+1,f
  9774     16A1                     u3321:
  9775     16A1  0854               	movf	___fladd@a+2,w
  9776     16A2  1103               	clrz
  9777     16A3  1803               	skipnc
  9778     16A4  3E01               	addlw	1
  9779     16A5  1903               	skipnz
  9780     16A6  2EA8               	goto	u3322
  9781     16A7  07D0               	addwf	___fladd@b+2,f
  9782     16A8                     u3322:
  9783     16A8  0855               	movf	___fladd@a+3,w
  9784     16A9  1103               	clrz
  9785     16AA  1803               	skipnc
  9786     16AB  3E01               	addlw	1
  9787     16AC  1903               	skipnz
  9788     16AD  2EAF               	goto	u3323
  9789     16AE  07D1               	addwf	___fladd@b+3,f
  9790     16AF                     u3323:
  9791     16AF                     l2581:
  9792     16AF  1C51               	btfss	___fladd@b+3,0
  9793     16B0  2EB2               	goto	u3331
  9794     16B1  2EB3               	goto	u3330
  9795     16B2                     u3331:
  9796     16B2  2F87               	goto	l2633
  9797     16B3                     u3330:
  9798     16B3                     l2583:
  9799     16B3  1C61               	btfss	___fladd@grs,0
  9800     16B4  2EB6               	goto	u3341
  9801     16B5  2EB7               	goto	u3340
  9802     16B6                     u3341:
  9803     16B6  2EBE               	goto	l2587
  9804     16B7                     u3340:
  9805     16B7                     l2585:
  9806     16B7  0861               	movf	___fladd@grs,w
  9807     16B8  00D6               	movwf	??___fladd
  9808     16B9  1003               	clrc
  9809     16BA  0C56               	rrf	??___fladd,w
  9810     16BB  3801               	iorlw	1
  9811     16BC  00E1               	movwf	___fladd@grs
  9812     16BD  2EC0               	goto	l2589
  9813     16BE                     l2587:
  9814     16BE  1003               	clrc
  9815     16BF  0CE1               	rrf	___fladd@grs,f
  9816     16C0                     l2589:
  9817     16C0  1C4E               	btfss	___fladd@b,0
  9818     16C1  2EC3               	goto	u3351
  9819     16C2  2EC4               	goto	u3350
  9820     16C3                     u3351:
  9821     16C3  2EC5               	goto	l2593
  9822     16C4                     u3350:
  9823     16C4                     l2591:
  9824     16C4  17E1               	bsf	___fladd@grs,7
  9825     16C5                     l2593:
  9826     16C5  3001               	movlw	1
  9827     16C6  00D6               	movwf	??___fladd
  9828     16C7                     u3365:
  9829     16C7  0D51               	rlf	___fladd@b+3,w
  9830     16C8  0CD1               	rrf	___fladd@b+3,f
  9831     16C9  0CD0               	rrf	___fladd@b+2,f
  9832     16CA  0CCF               	rrf	___fladd@b+1,f
  9833     16CB  0CCE               	rrf	___fladd@b,f
  9834     16CC  0BD6               	decfsz	??___fladd& (0+127),f
  9835     16CD  2EC7               	goto	u3365
  9836     16CE                     l2595:
  9837     16CE  3001               	movlw	1
  9838     16CF  00FF               	movwf	btemp+1
  9839     16D0  087F               	movf	btemp+1,w
  9840     16D1  07E0               	addwf	___fladd@bexp,f
  9841     16D2  2F87               	goto	l2633
  9842     16D3                     l2597:
  9843     16D3  0851               	movf	___fladd@b+3,w
  9844     16D4  3A80               	xorlw	128
  9845     16D5  00FF               	movwf	btemp+1
  9846     16D6  0855               	movf	___fladd@a+3,w
  9847     16D7  3A80               	xorlw	128
  9848     16D8  027F               	subwf	btemp+1,w
  9849     16D9  1D03               	skipz
  9850     16DA  2EE5               	goto	u3373
  9851     16DB  0854               	movf	___fladd@a+2,w
  9852     16DC  0250               	subwf	___fladd@b+2,w
  9853     16DD  1D03               	skipz
  9854     16DE  2EE5               	goto	u3373
  9855     16DF  0853               	movf	___fladd@a+1,w
  9856     16E0  024F               	subwf	___fladd@b+1,w
  9857     16E1  1D03               	skipz
  9858     16E2  2EE5               	goto	u3373
  9859     16E3  0852               	movf	___fladd@a,w
  9860     16E4  024E               	subwf	___fladd@b,w
  9861     16E5                     u3373:
  9862     16E5  1803               	skipnc
  9863     16E6  2EE8               	goto	u3371
  9864     16E7  2EE9               	goto	u3370
  9865     16E8                     u3371:
  9866     16E8  2F41               	goto	l2609
  9867     16E9                     u3370:
  9868     16E9                     l2599:
  9869     16E9  30FF               	movlw	255
  9870     16EA  00D6               	movwf	??___fladd
  9871     16EB  30FF               	movlw	255
  9872     16EC  00D7               	movwf	??___fladd+1
  9873     16ED  30FF               	movlw	255
  9874     16EE  00D8               	movwf	??___fladd+2
  9875     16EF  30FF               	movlw	255
  9876     16F0  00D9               	movwf	??___fladd+3
  9877     16F1  0852               	movf	___fladd@a,w
  9878     16F2  00DA               	movwf	??___fladd+4
  9879     16F3  0853               	movf	___fladd@a+1,w
  9880     16F4  00DB               	movwf	??___fladd+5
  9881     16F5  0854               	movf	___fladd@a+2,w
  9882     16F6  00DC               	movwf	??___fladd+6
  9883     16F7  0855               	movf	___fladd@a+3,w
  9884     16F8  00DD               	movwf	??___fladd+7
  9885     16F9  084E               	movf	___fladd@b,w
  9886     16FA  02DA               	subwf	??___fladd+4,f
  9887     16FB  084F               	movf	___fladd@b+1,w
  9888     16FC  1C03               	skipc
  9889     16FD  0F4F               	incfsz	___fladd@b+1,w
  9890     16FE  2F00               	goto	u3381
  9891     16FF  2F01               	goto	u3382
  9892     1700                     u3381:
  9893     1700  02DB               	subwf	??___fladd+5,f
  9894     1701                     u3382:
  9895     1701  0850               	movf	___fladd@b+2,w
  9896     1702  1C03               	skipc
  9897     1703  0F50               	incfsz	___fladd@b+2,w
  9898     1704  2F06               	goto	u3383
  9899     1705  2F07               	goto	u3384
  9900     1706                     u3383:
  9901     1706  02DC               	subwf	??___fladd+6,f
  9902     1707                     u3384:
  9903     1707  0851               	movf	___fladd@b+3,w
  9904     1708  1C03               	skipc
  9905     1709  0F51               	incfsz	___fladd@b+3,w
  9906     170A  2F0C               	goto	u3385
  9907     170B  2F0D               	goto	u3386
  9908     170C                     u3385:
  9909     170C  02DD               	subwf	??___fladd+7,f
  9910     170D                     u3386:
  9911     170D  085A               	movf	??___fladd+4,w
  9912     170E  07D6               	addwf	??___fladd,f
  9913     170F  085B               	movf	??___fladd+5,w
  9914     1710  1803               	skipnc
  9915     1711  0F5B               	incfsz	??___fladd+5,w
  9916     1712  2F14               	goto	u3390
  9917     1713  2F15               	goto	u3391
  9918     1714                     u3390:
  9919     1714  07D7               	addwf	??___fladd+1,f
  9920     1715                     u3391:
  9921     1715  085C               	movf	??___fladd+6,w
  9922     1716  1803               	skipnc
  9923     1717  0F5C               	incfsz	??___fladd+6,w
  9924     1718  2F1A               	goto	u3392
  9925     1719  2F1B               	goto	u3393
  9926     171A                     u3392:
  9927     171A  07D8               	addwf	??___fladd+2,f
  9928     171B                     u3393:
  9929     171B  085D               	movf	??___fladd+7,w
  9930     171C  1803               	skipnc
  9931     171D  0A5D               	incf	??___fladd+7,w
  9932     171E  07D9               	addwf	??___fladd+3,f
  9933     171F  0859               	movf	??___fladd+3,w
  9934     1720  00D1               	movwf	___fladd@b+3
  9935     1721  0858               	movf	??___fladd+2,w
  9936     1722  00D0               	movwf	___fladd@b+2
  9937     1723  0857               	movf	??___fladd+1,w
  9938     1724  00CF               	movwf	___fladd@b+1
  9939     1725  0856               	movf	??___fladd,w
  9940     1726  00CE               	movwf	___fladd@b
  9941     1727                     l2601:
  9942     1727  3080               	movlw	128
  9943     1728  00FF               	movwf	btemp+1
  9944     1729  087F               	movf	btemp+1,w
  9945     172A  06DE               	xorwf	___fladd@signs,f
  9946     172B                     l2603:
  9947     172B  09E1               	comf	___fladd@grs,f
  9948     172C  0AE1               	incf	___fladd@grs,f
  9949     172D                     l2605:
  9950     172D  0861               	movf	___fladd@grs,w
  9951     172E  1D03               	btfss	3,2
  9952     172F  2F31               	goto	u3401
  9953     1730  2F32               	goto	u3400
  9954     1731                     u3401:
  9955     1731  2F4F               	goto	l675
  9956     1732                     u3400:
  9957     1732                     l2607:
  9958     1732  3001               	movlw	1
  9959     1733  07CE               	addwf	___fladd@b,f
  9960     1734  3000               	movlw	0
  9961     1735  1803               	skipnc
  9962     1736  3001               	movlw	1
  9963     1737  07CF               	addwf	___fladd@b+1,f
  9964     1738  3000               	movlw	0
  9965     1739  1803               	skipnc
  9966     173A  3001               	movlw	1
  9967     173B  07D0               	addwf	___fladd@b+2,f
  9968     173C  3000               	movlw	0
  9969     173D  1803               	skipnc
  9970     173E  3001               	movlw	1
  9971     173F  07D1               	addwf	___fladd@b+3,f
  9972     1740  2F4F               	goto	l675
  9973     1741                     l2609:
  9974     1741  0852               	movf	___fladd@a,w
  9975     1742  02CE               	subwf	___fladd@b,f
  9976     1743  0853               	movf	___fladd@a+1,w
  9977     1744  1C03               	skipc
  9978     1745  0F53               	incfsz	___fladd@a+1,w
  9979     1746  02CF               	subwf	___fladd@b+1,f
  9980     1747  0854               	movf	___fladd@a+2,w
  9981     1748  1C03               	skipc
  9982     1749  0F54               	incfsz	___fladd@a+2,w
  9983     174A  02D0               	subwf	___fladd@b+2,f
  9984     174B  0855               	movf	___fladd@a+3,w
  9985     174C  1C03               	skipc
  9986     174D  0F55               	incfsz	___fladd@a+3,w
  9987     174E  02D1               	subwf	___fladd@b+3,f
  9988     174F                     l675:
  9989     174F  0851               	movf	___fladd@b+3,w
  9990     1750  0450               	iorwf	___fladd@b+2,w
  9991     1751  044F               	iorwf	___fladd@b+1,w
  9992     1752  044E               	iorwf	___fladd@b,w
  9993     1753  1D03               	skipz
  9994     1754  2F56               	goto	u3411
  9995     1755  2F57               	goto	u3410
  9996     1756                     u3411:
  9997     1756  2F83               	goto	l2631
  9998     1757                     u3410:
  9999     1757                     l2611:
 10000     1757  0861               	movf	___fladd@grs,w
 10001     1758  1D03               	btfss	3,2
 10002     1759  2F5B               	goto	u3421
 10003     175A  2F5C               	goto	u3420
 10004     175B                     u3421:
 10005     175B  2F83               	goto	l2631
 10006     175C                     u3420:
 10007     175C                     l2613:
 10008     175C  3000               	movlw	0
 10009     175D  00D1               	movwf	?___fladd+3
 10010     175E  3000               	movlw	0
 10011     175F  00D0               	movwf	?___fladd+2
 10012     1760  3000               	movlw	0
 10013     1761  00CF               	movwf	?___fladd+1
 10014     1762  3000               	movlw	0
 10015     1763  00CE               	movwf	?___fladd
 10016     1764  2FFF               	goto	l667
 10017     1765                     l2617:
 10018     1765  3001               	movlw	1
 10019     1766  00D6               	movwf	??___fladd
 10020     1767                     u3435:
 10021     1767  1003               	clrc
 10022     1768  0DCE               	rlf	___fladd@b,f
 10023     1769  0DCF               	rlf	___fladd@b+1,f
 10024     176A  0DD0               	rlf	___fladd@b+2,f
 10025     176B  0DD1               	rlf	___fladd@b+3,f
 10026     176C  0BD6               	decfsz	??___fladd,f
 10027     176D  2F67               	goto	u3435
 10028     176E                     l2619:
 10029     176E  1FE1               	btfss	___fladd@grs,7
 10030     176F  2F71               	goto	u3441
 10031     1770  2F72               	goto	u3440
 10032     1771                     u3441:
 10033     1771  2F73               	goto	l679
 10034     1772                     u3440:
 10035     1772                     l2621:
 10036     1772  144E               	bsf	___fladd@b,0
 10037     1773                     l679:
 10038     1773  1C61               	btfss	___fladd@grs,0
 10039     1774  2F76               	goto	u3451
 10040     1775  2F77               	goto	u3450
 10041     1776                     u3451:
 10042     1776  2F7A               	goto	l2625
 10043     1777                     u3450:
 10044     1777                     l2623:
 10045     1777  1403               	setc
 10046     1778  0DE1               	rlf	___fladd@grs,f
 10047     1779  2F7C               	goto	l2627
 10048     177A                     l2625:
 10049     177A  1003               	clrc
 10050     177B  0DE1               	rlf	___fladd@grs,f
 10051     177C                     l2627:
 10052     177C  0860               	movf	___fladd@bexp,w
 10053     177D  1903               	btfsc	3,2
 10054     177E  2F80               	goto	u3461
 10055     177F  2F81               	goto	u3460
 10056     1780                     u3461:
 10057     1780  2F83               	goto	l2631
 10058     1781                     u3460:
 10059     1781                     l2629:
 10060     1781  3001               	movlw	1
 10061     1782  02E0               	subwf	___fladd@bexp,f
 10062     1783                     l2631:
 10063     1783  1FD0               	btfss	___fladd@b+2,7
 10064     1784  2F86               	goto	u3471
 10065     1785  2F87               	goto	u3470
 10066     1786                     u3471:
 10067     1786  2F65               	goto	l2617
 10068     1787                     u3470:
 10069     1787                     l2633:
 10070     1787  01DF               	clrf	___fladd@aexp
 10071     1788                     l2635:
 10072     1788  1FE1               	btfss	___fladd@grs,7
 10073     1789  2F8B               	goto	u3481
 10074     178A  2F8C               	goto	u3480
 10075     178B                     u3481:
 10076     178B  2F9A               	goto	l2643
 10077     178C                     u3480:
 10078     178C                     l2637:
 10079     178C  0861               	movf	___fladd@grs,w
 10080     178D  397F               	andlw	127
 10081     178E  1903               	btfsc	3,2
 10082     178F  2F91               	goto	u3491
 10083     1790  2F92               	goto	u3490
 10084     1791                     u3491:
 10085     1791  2F95               	goto	l685
 10086     1792                     u3490:
 10087     1792                     l2639:
 10088     1792  01DF               	clrf	___fladd@aexp
 10089     1793  0ADF               	incf	___fladd@aexp,f
 10090     1794  2F9A               	goto	l2643
 10091     1795                     l685:
 10092     1795  1C4E               	btfss	___fladd@b,0
 10093     1796  2F98               	goto	u3501
 10094     1797  2F99               	goto	u3500
 10095     1798                     u3501:
 10096     1798  2F9A               	goto	l2643
 10097     1799                     u3500:
 10098     1799  2F92               	goto	l2639
 10099     179A                     l2643:
 10100     179A  085F               	movf	___fladd@aexp,w
 10101     179B  1903               	btfsc	3,2
 10102     179C  2F9E               	goto	u3511
 10103     179D  2F9F               	goto	u3510
 10104     179E                     u3511:
 10105     179E  2FD3               	goto	l2653
 10106     179F                     u3510:
 10107     179F                     l2645:
 10108     179F  3001               	movlw	1
 10109     17A0  07CE               	addwf	___fladd@b,f
 10110     17A1  3000               	movlw	0
 10111     17A2  1803               	skipnc
 10112     17A3  3001               	movlw	1
 10113     17A4  07CF               	addwf	___fladd@b+1,f
 10114     17A5  3000               	movlw	0
 10115     17A6  1803               	skipnc
 10116     17A7  3001               	movlw	1
 10117     17A8  07D0               	addwf	___fladd@b+2,f
 10118     17A9  3000               	movlw	0
 10119     17AA  1803               	skipnc
 10120     17AB  3001               	movlw	1
 10121     17AC  07D1               	addwf	___fladd@b+3,f
 10122     17AD                     l2647:
 10123     17AD  1C51               	btfss	___fladd@b+3,0
 10124     17AE  2FB0               	goto	u3521
 10125     17AF  2FB1               	goto	u3520
 10126     17B0                     u3521:
 10127     17B0  2FD3               	goto	l2653
 10128     17B1                     u3520:
 10129     17B1                     l2649:
 10130     17B1  084E               	movf	___fladd@b,w
 10131     17B2  00D6               	movwf	??___fladd
 10132     17B3  084F               	movf	___fladd@b+1,w
 10133     17B4  00D7               	movwf	??___fladd+1
 10134     17B5  0850               	movf	___fladd@b+2,w
 10135     17B6  00D8               	movwf	??___fladd+2
 10136     17B7  0851               	movf	___fladd@b+3,w
 10137     17B8  00D9               	movwf	??___fladd+3
 10138     17B9  3001               	movlw	1
 10139     17BA  00DA               	movwf	??___fladd+4
 10140     17BB                     u3535:
 10141     17BB  0D59               	rlf	??___fladd+3,w
 10142     17BC  0CD9               	rrf	??___fladd+3,f
 10143     17BD  0CD8               	rrf	??___fladd+2,f
 10144     17BE  0CD7               	rrf	??___fladd+1,f
 10145     17BF  0CD6               	rrf	??___fladd,f
 10146     17C0                     u3530:
 10147     17C0  0BDA               	decfsz	??___fladd+4,f
 10148     17C1  2FBB               	goto	u3535
 10149     17C2  0859               	movf	??___fladd+3,w
 10150     17C3  00D1               	movwf	___fladd@b+3
 10151     17C4  0858               	movf	??___fladd+2,w
 10152     17C5  00D0               	movwf	___fladd@b+2
 10153     17C6  0857               	movf	??___fladd+1,w
 10154     17C7  00CF               	movwf	___fladd@b+1
 10155     17C8  0856               	movf	??___fladd,w
 10156     17C9  00CE               	movwf	___fladd@b
 10157     17CA  0A60               	incf	___fladd@bexp,w
 10158     17CB  1903               	btfsc	3,2
 10159     17CC  2FCE               	goto	u3541
 10160     17CD  2FCF               	goto	u3540
 10161     17CE                     u3541:
 10162     17CE  2FD3               	goto	l2653
 10163     17CF                     u3540:
 10164     17CF                     l2651:
 10165     17CF  3001               	movlw	1
 10166     17D0  00FF               	movwf	btemp+1
 10167     17D1  087F               	movf	btemp+1,w
 10168     17D2  07E0               	addwf	___fladd@bexp,f
 10169     17D3                     l2653:
 10170     17D3  0A60               	incf	___fladd@bexp,w
 10171     17D4  1903               	btfsc	3,2
 10172     17D5  2FD7               	goto	u3551
 10173     17D6  2FD8               	goto	u3550
 10174     17D7                     u3551:
 10175     17D7  2FDD               	goto	l2657
 10176     17D8                     u3550:
 10177     17D8                     l2655:
 10178     17D8  0860               	movf	___fladd@bexp,w
 10179     17D9  1D03               	btfss	3,2
 10180     17DA  2FDC               	goto	u3561
 10181     17DB  2FDD               	goto	u3560
 10182     17DC                     u3561:
 10183     17DC  2FEB               	goto	l2663
 10184     17DD                     u3560:
 10185     17DD                     l2657:
 10186     17DD  3000               	movlw	0
 10187     17DE  00D1               	movwf	___fladd@b+3
 10188     17DF  3000               	movlw	0
 10189     17E0  00D0               	movwf	___fladd@b+2
 10190     17E1  3000               	movlw	0
 10191     17E2  00CF               	movwf	___fladd@b+1
 10192     17E3  3000               	movlw	0
 10193     17E4  00CE               	movwf	___fladd@b
 10194     17E5                     l2659:
 10195     17E5  0860               	movf	___fladd@bexp,w
 10196     17E6  1D03               	btfss	3,2
 10197     17E7  2FE9               	goto	u3571
 10198     17E8  2FEA               	goto	u3570
 10199     17E9                     u3571:
 10200     17E9  2FEB               	goto	l2663
 10201     17EA                     u3570:
 10202     17EA                     l2661:
 10203     17EA  01DE               	clrf	___fladd@signs
 10204     17EB                     l2663:
 10205     17EB  1C60               	btfss	___fladd@bexp,0
 10206     17EC  2FEE               	goto	u3581
 10207     17ED  2FEF               	goto	u3580
 10208     17EE                     u3581:
 10209     17EE  2FF1               	goto	l2667
 10210     17EF                     u3580:
 10211     17EF                     l2665:
 10212     17EF  17D0               	bsf	___fladd@b+2,7
 10213     17F0  2FF5               	goto	l2669
 10214     17F1                     l2667:
 10215     17F1  307F               	movlw	127
 10216     17F2  00FF               	movwf	btemp+1
 10217     17F3  087F               	movf	btemp+1,w
 10218     17F4  05D0               	andwf	___fladd@b+2,f
 10219     17F5                     l2669:
 10220     17F5  0860               	movf	___fladd@bexp,w
 10221     17F6  00D6               	movwf	??___fladd
 10222     17F7  1003               	clrc
 10223     17F8  0C56               	rrf	??___fladd,w
 10224     17F9  00D1               	movwf	___fladd@b+3
 10225     17FA                     l2671:
 10226     17FA  1FDE               	btfss	___fladd@signs,7
 10227     17FB  2FFD               	goto	u3591
 10228     17FC  2FFE               	goto	u3590
 10229     17FD                     u3591:
 10230     17FD  2FFF               	goto	l697
 10231     17FE                     u3590:
 10232     17FE                     l2673:
 10233     17FE  17D1               	bsf	___fladd@b+3,7
 10234     17FF                     l697:
 10235     17FF                     l667:
 10236     17FF  0008               	return
 10237     1800                     __end_of___fladd:
 10238                           
 10239                           	psect	text35
 10240     1B41                     __ptext35:	
 10241 ;; *************** function ___flneg *****************
 10242 ;; Defined at:
 10243 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\flneg.c"
 10244 ;; Parameters:    Size  Location     Type
 10245 ;;  f1              4    0[COMMON] unsigned char 
 10246 ;; Auto vars:     Size  Location     Type
 10247 ;;		None
 10248 ;; Return value:  Size  Location     Type
 10249 ;;                  4    0[COMMON] unsigned char 
 10250 ;; Registers used:
 10251 ;;		wreg
 10252 ;; Tracked objects:
 10253 ;;		On entry : 0/0
 10254 ;;		On exit  : 0/0
 10255 ;;		Unchanged: 0/0
 10256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10257 ;;      Params:         4       0       0       0       0
 10258 ;;      Locals:         0       0       0       0       0
 10259 ;;      Temps:          0       0       0       0       0
 10260 ;;      Totals:         4       0       0       0       0
 10261 ;;Total ram usage:        4 bytes
 10262 ;; Hardware stack levels used: 1
 10263 ;; This function calls:
 10264 ;;		Nothing
 10265 ;; This function is called by:
 10266 ;;		_sprintf
 10267 ;; This function uses a non-reentrant model
 10268 ;;
 10269                           
 10270     1B41                     ___flneg:	
 10271                           ;psect for function ___flneg
 10272                           
 10273     1B41                     l3087:	
 10274                           ;incstack = 0
 10275                           ; Regs used in ___flneg: [wreg]
 10276                           
 10277     1B41  0873               	movf	___flneg@f1+3,w
 10278     1B42  0472               	iorwf	___flneg@f1+2,w
 10279     1B43  0471               	iorwf	___flneg@f1+1,w
 10280     1B44  0470               	iorwf	___flneg@f1,w
 10281     1B45  1903               	skipnz
 10282     1B46  2B48               	goto	u4721
 10283     1B47  2B49               	goto	u4720
 10284     1B48                     u4721:
 10285     1B48  2B4B               	goto	l3091
 10286     1B49                     u4720:
 10287     1B49                     l3089:
 10288     1B49  3080               	movlw	128
 10289     1B4A  06F3               	xorwf	___flneg@f1+3,f
 10290     1B4B                     l3091:
 10291     1B4B                     l526:
 10292     1B4B  0008               	return
 10293     1B4C                     __end_of___flneg:
 10294                           
 10295                           	psect	text36
 10296     10D2                     __ptext36:	
 10297 ;; *************** function ___flge *****************
 10298 ;; Defined at:
 10299 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\flge.c"
 10300 ;; Parameters:    Size  Location     Type
 10301 ;;  ff1             4    0[COMMON] unsigned char 
 10302 ;;  ff2             4    4[COMMON] unsigned char 
 10303 ;; Auto vars:     Size  Location     Type
 10304 ;;		None
 10305 ;; Return value:  Size  Location     Type
 10306 ;;		None               void
 10307 ;; Registers used:
 10308 ;;		wreg, status,2, status,0
 10309 ;; Tracked objects:
 10310 ;;		On entry : 0/0
 10311 ;;		On exit  : 0/0
 10312 ;;		Unchanged: 0/0
 10313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10314 ;;      Params:         8       0       0       0       0
 10315 ;;      Locals:         0       0       0       0       0
 10316 ;;      Temps:          4       0       0       0       0
 10317 ;;      Totals:        12       0       0       0       0
 10318 ;;Total ram usage:       12 bytes
 10319 ;; Hardware stack levels used: 1
 10320 ;; This function calls:
 10321 ;;		Nothing
 10322 ;; This function is called by:
 10323 ;;		_sprintf
 10324 ;; This function uses a non-reentrant model
 10325 ;;
 10326                           
 10327     10D2                     ___flge:	
 10328                           ;psect for function ___flge
 10329                           
 10330     10D2                     l3067:	
 10331                           ;incstack = 0
 10332                           ; Regs used in ___flge: [wreg+status,2+status,0]
 10333                           
 10334     10D2  3000               	movlw	0
 10335     10D3  0570               	andwf	___flge@ff1,w
 10336     10D4  00F8               	movwf	??___flge
 10337     10D5  3000               	movlw	0
 10338     10D6  0571               	andwf	___flge@ff1+1,w
 10339     10D7  00F9               	movwf	??___flge+1
 10340     10D8  3080               	movlw	128
 10341     10D9  0572               	andwf	___flge@ff1+2,w
 10342     10DA  00FA               	movwf	??___flge+2
 10343     10DB  307F               	movlw	127
 10344     10DC  0573               	andwf	___flge@ff1+3,w
 10345     10DD  00FB               	movwf	??___flge+3
 10346     10DE  087B               	movf	??___flge+3,w
 10347     10DF  047A               	iorwf	??___flge+2,w
 10348     10E0  0479               	iorwf	??___flge+1,w
 10349     10E1  0478               	iorwf	??___flge,w
 10350     10E2  1D03               	skipz
 10351     10E3  28E5               	goto	u4651
 10352     10E4  28E6               	goto	u4650
 10353     10E5                     u4651:
 10354     10E5  28EE               	goto	l518
 10355     10E6                     u4650:
 10356     10E6                     l3069:
 10357     10E6  3000               	movlw	0
 10358     10E7  00F3               	movwf	___flge@ff1+3
 10359     10E8  3000               	movlw	0
 10360     10E9  00F2               	movwf	___flge@ff1+2
 10361     10EA  3000               	movlw	0
 10362     10EB  00F1               	movwf	___flge@ff1+1
 10363     10EC  3000               	movlw	0
 10364     10ED  00F0               	movwf	___flge@ff1
 10365     10EE                     l518:
 10366     10EE  3000               	movlw	0
 10367     10EF  0574               	andwf	___flge@ff2,w
 10368     10F0  00F8               	movwf	??___flge
 10369     10F1  3000               	movlw	0
 10370     10F2  0575               	andwf	___flge@ff2+1,w
 10371     10F3  00F9               	movwf	??___flge+1
 10372     10F4  3080               	movlw	128
 10373     10F5  0576               	andwf	___flge@ff2+2,w
 10374     10F6  00FA               	movwf	??___flge+2
 10375     10F7  307F               	movlw	127
 10376     10F8  0577               	andwf	___flge@ff2+3,w
 10377     10F9  00FB               	movwf	??___flge+3
 10378     10FA  087B               	movf	??___flge+3,w
 10379     10FB  047A               	iorwf	??___flge+2,w
 10380     10FC  0479               	iorwf	??___flge+1,w
 10381     10FD  0478               	iorwf	??___flge,w
 10382     10FE  1D03               	skipz
 10383     10FF  2901               	goto	u4661
 10384     1100  2902               	goto	u4660
 10385     1101                     u4661:
 10386     1101  290A               	goto	l3073
 10387     1102                     u4660:
 10388     1102                     l3071:
 10389     1102  3000               	movlw	0
 10390     1103  00F7               	movwf	___flge@ff2+3
 10391     1104  3000               	movlw	0
 10392     1105  00F6               	movwf	___flge@ff2+2
 10393     1106  3000               	movlw	0
 10394     1107  00F5               	movwf	___flge@ff2+1
 10395     1108  3000               	movlw	0
 10396     1109  00F4               	movwf	___flge@ff2
 10397     110A                     l3073:
 10398     110A  1FF3               	btfss	___flge@ff1+3,7
 10399     110B  290D               	goto	u4671
 10400     110C  290E               	goto	u4670
 10401     110D                     u4671:
 10402     110D  2932               	goto	l3077
 10403     110E                     u4670:
 10404     110E                     l3075:
 10405     110E  3000               	movlw	0
 10406     110F  00F8               	movwf	??___flge
 10407     1110  3000               	movlw	0
 10408     1111  00F9               	movwf	??___flge+1
 10409     1112  3000               	movlw	0
 10410     1113  00FA               	movwf	??___flge+2
 10411     1114  3080               	movlw	128
 10412     1115  00FB               	movwf	??___flge+3
 10413     1116  0870               	movf	___flge@ff1,w
 10414     1117  02F8               	subwf	??___flge,f
 10415     1118  0871               	movf	___flge@ff1+1,w
 10416     1119  1C03               	skipc
 10417     111A  0F71               	incfsz	___flge@ff1+1,w
 10418     111B  291D               	goto	u4681
 10419     111C  291E               	goto	u4682
 10420     111D                     u4681:
 10421     111D  02F9               	subwf	??___flge+1,f
 10422     111E                     u4682:
 10423     111E  0872               	movf	___flge@ff1+2,w
 10424     111F  1C03               	skipc
 10425     1120  0F72               	incfsz	___flge@ff1+2,w
 10426     1121  2923               	goto	u4683
 10427     1122  2924               	goto	u4684
 10428     1123                     u4683:
 10429     1123  02FA               	subwf	??___flge+2,f
 10430     1124                     u4684:
 10431     1124  0873               	movf	___flge@ff1+3,w
 10432     1125  1C03               	skipc
 10433     1126  0F73               	incfsz	___flge@ff1+3,w
 10434     1127  2929               	goto	u4685
 10435     1128  292A               	goto	u4686
 10436     1129                     u4685:
 10437     1129  02FB               	subwf	??___flge+3,f
 10438     112A                     u4686:
 10439     112A  087B               	movf	??___flge+3,w
 10440     112B  00F3               	movwf	___flge@ff1+3
 10441     112C  087A               	movf	??___flge+2,w
 10442     112D  00F2               	movwf	___flge@ff1+2
 10443     112E  0879               	movf	??___flge+1,w
 10444     112F  00F1               	movwf	___flge@ff1+1
 10445     1130  0878               	movf	??___flge,w
 10446     1131  00F0               	movwf	___flge@ff1
 10447     1132                     l3077:
 10448     1132  1FF7               	btfss	___flge@ff2+3,7
 10449     1133  2935               	goto	u4691
 10450     1134  2936               	goto	u4690
 10451     1135                     u4691:
 10452     1135  295A               	goto	l521
 10453     1136                     u4690:
 10454     1136                     l3079:
 10455     1136  3000               	movlw	0
 10456     1137  00F8               	movwf	??___flge
 10457     1138  3000               	movlw	0
 10458     1139  00F9               	movwf	??___flge+1
 10459     113A  3000               	movlw	0
 10460     113B  00FA               	movwf	??___flge+2
 10461     113C  3080               	movlw	128
 10462     113D  00FB               	movwf	??___flge+3
 10463     113E  0874               	movf	___flge@ff2,w
 10464     113F  02F8               	subwf	??___flge,f
 10465     1140  0875               	movf	___flge@ff2+1,w
 10466     1141  1C03               	skipc
 10467     1142  0F75               	incfsz	___flge@ff2+1,w
 10468     1143  2945               	goto	u4701
 10469     1144  2946               	goto	u4702
 10470     1145                     u4701:
 10471     1145  02F9               	subwf	??___flge+1,f
 10472     1146                     u4702:
 10473     1146  0876               	movf	___flge@ff2+2,w
 10474     1147  1C03               	skipc
 10475     1148  0F76               	incfsz	___flge@ff2+2,w
 10476     1149  294B               	goto	u4703
 10477     114A  294C               	goto	u4704
 10478     114B                     u4703:
 10479     114B  02FA               	subwf	??___flge+2,f
 10480     114C                     u4704:
 10481     114C  0877               	movf	___flge@ff2+3,w
 10482     114D  1C03               	skipc
 10483     114E  0F77               	incfsz	___flge@ff2+3,w
 10484     114F  2951               	goto	u4705
 10485     1150  2952               	goto	u4706
 10486     1151                     u4705:
 10487     1151  02FB               	subwf	??___flge+3,f
 10488     1152                     u4706:
 10489     1152  087B               	movf	??___flge+3,w
 10490     1153  00F7               	movwf	___flge@ff2+3
 10491     1154  087A               	movf	??___flge+2,w
 10492     1155  00F6               	movwf	___flge@ff2+2
 10493     1156  0879               	movf	??___flge+1,w
 10494     1157  00F5               	movwf	___flge@ff2+1
 10495     1158  0878               	movf	??___flge,w
 10496     1159  00F4               	movwf	___flge@ff2
 10497     115A                     l521:
 10498     115A  3080               	movlw	128
 10499     115B  06F3               	xorwf	___flge@ff1+3,f
 10500     115C  3080               	movlw	128
 10501     115D  06F7               	xorwf	___flge@ff2+3,f
 10502     115E  0877               	movf	___flge@ff2+3,w
 10503     115F  0273               	subwf	___flge@ff1+3,w
 10504     1160  1D03               	skipz
 10505     1161  296C               	goto	u4715
 10506     1162  0876               	movf	___flge@ff2+2,w
 10507     1163  0272               	subwf	___flge@ff1+2,w
 10508     1164  1D03               	skipz
 10509     1165  296C               	goto	u4715
 10510     1166  0875               	movf	___flge@ff2+1,w
 10511     1167  0271               	subwf	___flge@ff1+1,w
 10512     1168  1D03               	skipz
 10513     1169  296C               	goto	u4715
 10514     116A  0874               	movf	___flge@ff2,w
 10515     116B  0270               	subwf	___flge@ff1,w
 10516     116C                     u4715:
 10517     116C  1803               	skipnc
 10518     116D  296F               	goto	u4711
 10519     116E  2970               	goto	u4710
 10520     116F                     u4711:
 10521     116F  2972               	goto	l3083
 10522     1170                     u4710:
 10523     1170                     l3081:
 10524     1170  1003               	clrc
 10525     1171  2973               	goto	l522
 10526     1172                     l3083:
 10527     1172  1403               	setc
 10528     1173                     l522:
 10529     1173  0008               	return
 10530     1174                     __end_of___flge:
 10531                           
 10532                           	psect	text37
 10533     1E14                     __ptext37:	
 10534 ;; *************** function ___fleq *****************
 10535 ;; Defined at:
 10536 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fleq.c"
 10537 ;; Parameters:    Size  Location     Type
 10538 ;;  ff1             4    0[COMMON] unsigned char 
 10539 ;;  ff2             4    4[COMMON] unsigned char 
 10540 ;; Auto vars:     Size  Location     Type
 10541 ;;		None
 10542 ;; Return value:  Size  Location     Type
 10543 ;;		None               void
 10544 ;; Registers used:
 10545 ;;		wreg, status,2, status,0
 10546 ;; Tracked objects:
 10547 ;;		On entry : 0/0
 10548 ;;		On exit  : 0/0
 10549 ;;		Unchanged: 0/0
 10550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10551 ;;      Params:         8       0       0       0       0
 10552 ;;      Locals:         0       0       0       0       0
 10553 ;;      Temps:          4       0       0       0       0
 10554 ;;      Totals:        12       0       0       0       0
 10555 ;;Total ram usage:       12 bytes
 10556 ;; Hardware stack levels used: 1
 10557 ;; This function calls:
 10558 ;;		Nothing
 10559 ;; This function is called by:
 10560 ;;		_sprintf
 10561 ;; This function uses a non-reentrant model
 10562 ;;
 10563                           
 10564     1E14                     ___fleq:	
 10565                           ;psect for function ___fleq
 10566                           
 10567     1E14                     l3055:	
 10568                           ;incstack = 0
 10569                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 10570                           
 10571     1E14  3000               	movlw	0
 10572     1E15  0570               	andwf	___fleq@ff1,w
 10573     1E16  00F8               	movwf	??___fleq
 10574     1E17  3000               	movlw	0
 10575     1E18  0571               	andwf	___fleq@ff1+1,w
 10576     1E19  00F9               	movwf	??___fleq+1
 10577     1E1A  3080               	movlw	128
 10578     1E1B  0572               	andwf	___fleq@ff1+2,w
 10579     1E1C  00FA               	movwf	??___fleq+2
 10580     1E1D  307F               	movlw	127
 10581     1E1E  0573               	andwf	___fleq@ff1+3,w
 10582     1E1F  00FB               	movwf	??___fleq+3
 10583     1E20  087B               	movf	??___fleq+3,w
 10584     1E21  047A               	iorwf	??___fleq+2,w
 10585     1E22  0479               	iorwf	??___fleq+1,w
 10586     1E23  0478               	iorwf	??___fleq,w
 10587     1E24  1D03               	skipz
 10588     1E25  2E27               	goto	u4621
 10589     1E26  2E28               	goto	u4620
 10590     1E27                     u4621:
 10591     1E27  2E30               	goto	l513
 10592     1E28                     u4620:
 10593     1E28                     l3057:
 10594     1E28  3000               	movlw	0
 10595     1E29  00F3               	movwf	___fleq@ff1+3
 10596     1E2A  3000               	movlw	0
 10597     1E2B  00F2               	movwf	___fleq@ff1+2
 10598     1E2C  3000               	movlw	0
 10599     1E2D  00F1               	movwf	___fleq@ff1+1
 10600     1E2E  3000               	movlw	0
 10601     1E2F  00F0               	movwf	___fleq@ff1
 10602     1E30                     l513:
 10603     1E30  3000               	movlw	0
 10604     1E31  0574               	andwf	___fleq@ff2,w
 10605     1E32  00F8               	movwf	??___fleq
 10606     1E33  3000               	movlw	0
 10607     1E34  0575               	andwf	___fleq@ff2+1,w
 10608     1E35  00F9               	movwf	??___fleq+1
 10609     1E36  3080               	movlw	128
 10610     1E37  0576               	andwf	___fleq@ff2+2,w
 10611     1E38  00FA               	movwf	??___fleq+2
 10612     1E39  307F               	movlw	127
 10613     1E3A  0577               	andwf	___fleq@ff2+3,w
 10614     1E3B  00FB               	movwf	??___fleq+3
 10615     1E3C  087B               	movf	??___fleq+3,w
 10616     1E3D  047A               	iorwf	??___fleq+2,w
 10617     1E3E  0479               	iorwf	??___fleq+1,w
 10618     1E3F  0478               	iorwf	??___fleq,w
 10619     1E40  1D03               	skipz
 10620     1E41  2E43               	goto	u4631
 10621     1E42  2E44               	goto	u4630
 10622     1E43                     u4631:
 10623     1E43  2E4C               	goto	l514
 10624     1E44                     u4630:
 10625     1E44                     l3059:
 10626     1E44  3000               	movlw	0
 10627     1E45  00F7               	movwf	___fleq@ff2+3
 10628     1E46  3000               	movlw	0
 10629     1E47  00F6               	movwf	___fleq@ff2+2
 10630     1E48  3000               	movlw	0
 10631     1E49  00F5               	movwf	___fleq@ff2+1
 10632     1E4A  3000               	movlw	0
 10633     1E4B  00F4               	movwf	___fleq@ff2
 10634     1E4C                     l514:
 10635     1E4C  0877               	movf	___fleq@ff2+3,w
 10636     1E4D  0673               	xorwf	___fleq@ff1+3,w
 10637     1E4E  1D03               	skipz
 10638     1E4F  2E5A               	goto	u4645
 10639     1E50  0876               	movf	___fleq@ff2+2,w
 10640     1E51  0672               	xorwf	___fleq@ff1+2,w
 10641     1E52  1D03               	skipz
 10642     1E53  2E5A               	goto	u4645
 10643     1E54  0875               	movf	___fleq@ff2+1,w
 10644     1E55  0671               	xorwf	___fleq@ff1+1,w
 10645     1E56  1D03               	skipz
 10646     1E57  2E5A               	goto	u4645
 10647     1E58  0874               	movf	___fleq@ff2,w
 10648     1E59  0670               	xorwf	___fleq@ff1,w
 10649     1E5A                     u4645:
 10650     1E5A  1903               	skipnz
 10651     1E5B  2E5D               	goto	u4641
 10652     1E5C  2E5E               	goto	u4640
 10653     1E5D                     u4641:
 10654     1E5D  2E60               	goto	l3063
 10655     1E5E                     u4640:
 10656     1E5E                     l3061:
 10657     1E5E  1003               	clrc
 10658     1E5F  2E61               	goto	l515
 10659     1E60                     l3063:
 10660     1E60  1403               	setc
 10661     1E61                     l515:
 10662     1E61  0008               	return
 10663     1E62                     __end_of___fleq:
 10664                           
 10665                           	psect	text38
 10666     1B26                     __ptext38:	
 10667 ;; *************** function _ADC_Setup *****************
 10668 ;; Defined at:
 10669 ;;		line 98 in file "newmain.c"
 10670 ;; Parameters:    Size  Location     Type
 10671 ;;		None
 10672 ;; Auto vars:     Size  Location     Type
 10673 ;;		None
 10674 ;; Return value:  Size  Location     Type
 10675 ;;                  1    wreg      void 
 10676 ;; Registers used:
 10677 ;;		wreg
 10678 ;; Tracked objects:
 10679 ;;		On entry : 0/0
 10680 ;;		On exit  : 0/0
 10681 ;;		Unchanged: 0/0
 10682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10683 ;;      Params:         0       0       0       0       0
 10684 ;;      Locals:         0       0       0       0       0
 10685 ;;      Temps:          0       0       0       0       0
 10686 ;;      Totals:         0       0       0       0       0
 10687 ;;Total ram usage:        0 bytes
 10688 ;; Hardware stack levels used: 1
 10689 ;; This function calls:
 10690 ;;		Nothing
 10691 ;; This function is called by:
 10692 ;;		_main
 10693 ;; This function uses a non-reentrant model
 10694 ;;
 10695                           
 10696     1B26                     _ADC_Setup:	
 10697                           ;psect for function _ADC_Setup
 10698                           
 10699     1B26                     l3485:	
 10700                           ;incstack = 0
 10701                           ; Regs used in _ADC_Setup: [wreg]
 10702                           
 10703                           
 10704                           ;newmain.c: 99: {
 10705     1B26  3081               	movlw	129
 10706     1B27  1283               	bcf	3,5	;RP0=0, select bank0
 10707     1B28  1303               	bcf	3,6	;RP1=0, select bank0
 10708     1B29  009F               	movwf	31	;volatile
 10709                           
 10710                           ;newmain.c: 100:   char data_u, data_l;
 10711     1B2A  3080               	movlw	128
 10712     1B2B  1683               	bsf	3,5	;RP0=1, select bank1
 10713     1B2C  1303               	bcf	3,6	;RP1=0, select bank1
 10714     1B2D  009F               	movwf	31	;volatile
 10715     1B2E                     l94:
 10716     1B2E  0008               	return
 10717     1B2F                     __end_of_ADC_Setup:
 10718                           
 10719                           	psect	text39
 10720     1C79                     __ptext39:	
 10721 ;; *************** function _ADC_Read *****************
 10722 ;; Defined at:
 10723 ;;		line 102 in file "newmain.c"
 10724 ;; Parameters:    Size  Location     Type
 10725 ;;  channel         2    0[COMMON] int 
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;		None
 10728 ;; Return value:  Size  Location     Type
 10729 ;;                  2    0[COMMON] unsigned int 
 10730 ;; Registers used:
 10731 ;;		wreg, status,2, status,0, btemp+1
 10732 ;; Tracked objects:
 10733 ;;		On entry : 0/0
 10734 ;;		On exit  : 0/0
 10735 ;;		Unchanged: 0/0
 10736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10737 ;;      Params:         2       0       0       0       0
 10738 ;;      Locals:         0       0       0       0       0
 10739 ;;      Temps:          1       0       0       0       0
 10740 ;;      Totals:         3       0       0       0       0
 10741 ;;Total ram usage:        3 bytes
 10742 ;; Hardware stack levels used: 1
 10743 ;; This function calls:
 10744 ;;		Nothing
 10745 ;; This function is called by:
 10746 ;;		_main
 10747 ;; This function uses a non-reentrant model
 10748 ;;
 10749                           
 10750     1C79                     _ADC_Read:	
 10751                           ;psect for function _ADC_Read
 10752                           
 10753     1C79                     l3487:	
 10754                           ;incstack = 0
 10755                           ; Regs used in _ADC_Read: [wreg+status,2+status,0+btemp+1]
 10756                           
 10757                           
 10758                           ;newmain.c: 103:  data_l = ((cmd<<4)&0xf0);
 10759     1C79  0871               	movf	ADC_Read@channel+1,w
 10760     1C7A  3A80               	xorlw	128
 10761     1C7B  00FF               	movwf	btemp+1
 10762     1C7C  3080               	movlw	128
 10763     1C7D  027F               	subwf	btemp+1,w
 10764     1C7E  1D03               	skipz
 10765     1C7F  2C82               	goto	u5435
 10766     1C80  3008               	movlw	8
 10767     1C81  0270               	subwf	ADC_Read@channel,w
 10768     1C82                     u5435:
 10769     1C82  1C03               	skipc
 10770     1C83  2C85               	goto	u5431
 10771     1C84  2C86               	goto	u5430
 10772     1C85                     u5431:
 10773     1C85  2C89               	goto	l97
 10774     1C86                     u5430:
 10775     1C86                     l3489:
 10776                           
 10777                           ;newmain.c: 104:  data_t[0] = data_u|0x0C;
 10778     1C86  01F0               	clrf	?_ADC_Read
 10779     1C87  01F1               	clrf	?_ADC_Read+1
 10780     1C88  2CA6               	goto	l98
 10781     1C89                     l97:
 10782                           
 10783                           ;newmain.c: 106:  data_t[2] = data_l|0x0C;
 10784     1C89  1283               	bcf	3,5	;RP0=0, select bank0
 10785     1C8A  1303               	bcf	3,6	;RP1=0, select bank0
 10786     1C8B  119F               	bcf	31,3	;volatile
 10787                           
 10788                           ;newmain.c: 107:  data_t[3] = data_l|0x08;
 10789     1C8C  121F               	bcf	31,4	;volatile
 10790                           
 10791                           ;newmain.c: 108:     I2C_Start();
 10792     1C8D  129F               	bcf	31,5	;volatile
 10793     1C8E                     l3493:
 10794                           
 10795                           ;newmain.c: 110:     I2C_Stop();
 10796     1C8E  0870               	movf	ADC_Read@channel,w	;volatile
 10797     1C8F  00F2               	movwf	??_ADC_Read
 10798     1C90  3002               	movlw	2
 10799     1C91                     u5445:
 10800     1C91  1003               	clrc
 10801     1C92  0DF2               	rlf	??_ADC_Read,f
 10802     1C93  3EFF               	addlw	-1
 10803     1C94  1D03               	skipz
 10804     1C95  2C91               	goto	u5445
 10805     1C96  1003               	clrc
 10806     1C97  0D72               	rlf	??_ADC_Read,w
 10807     1C98  00FF               	movwf	btemp+1
 10808     1C99  087F               	movf	btemp+1,w
 10809     1C9A  049F               	iorwf	31,f	;volatile
 10810     1C9B                     l3495:
 10811                           
 10812                           ;newmain.c: 111: 
 10813     1C9B  151F               	bsf	31,2	;volatile
 10814     1C9C                     l99:	
 10815                           ;newmain.c: 112:     _delay((unsigned long)((5)*(20000000/4000.0)));
 10816                           
 10817     1C9C  191F               	btfsc	31,2	;volatile
 10818     1C9D  2C9F               	goto	u5451
 10819     1C9E  2CA0               	goto	u5450
 10820     1C9F                     u5451:
 10821     1C9F  2C9C               	goto	l99
 10822     1CA0                     u5450:
 10823     1CA0                     l3497:
 10824                           
 10825                           ;newmain.c: 113: 
 10826     1CA0  081E               	movf	30,w	;volatile
 10827     1CA1  00F1               	movwf	?_ADC_Read+1
 10828     1CA2  1683               	bsf	3,5	;RP0=1, select bank1
 10829     1CA3  1303               	bcf	3,6	;RP1=0, select bank1
 10830     1CA4  081E               	movf	30,w	;volatile
 10831     1CA5  00F0               	movwf	?_ADC_Read
 10832     1CA6                     l98:
 10833     1CA6  0008               	return
 10834     1CA7                     __end_of_ADC_Read:
 10835     007E                     btemp	set	126	;btemp
 10836     007E                     wtemp0	set	126
 10837                           
 10838                           	psect	config
 10839                           
 10840                           ;Config register CONFIG @ 0x2007
 10841                           ;	Oscillator Selection bits
 10842                           ;	FOSC = HS, HS oscillator
 10843                           ;	Watchdog Timer Enable bit
 10844                           ;	WDTE = OFF, WDT disabled
 10845                           ;	Power-up Timer Enable bit
 10846                           ;	PWRTE = OFF, PWRT disabled
 10847                           ;	Brown-out Reset Enable bit
 10848                           ;	BOREN = ON, BOR enabled
 10849                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 10850                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
 10851                           ;	Data EEPROM Memory Code Protection bit
 10852                           ;	CPD = OFF, Data EEPROM code protection off
 10853                           ;	Flash Program Memory Write Enable bits
 10854                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
 10855                           ;	In-Circuit Debugger Mode bit
 10856                           ;	DEBUG = 0x1, unprogrammed default
 10857                           ;	Flash Program Memory Code Protection bit
 10858                           ;	CP = OFF, Code protection off
 10859     2007                     	org	8199
 10860     2007  3F7A               	dw	16250

Data Sizes:
    Strings     45
    Constant    144
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     71      75
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 0

    strcat@to	PTR unsigned char  size(1) Largest target is 0

    strcat@cp	PTR unsigned char  size(1) Largest target is 0

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_4(CODE[5]), STR_2(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__GetString	PTR unsigned char  size(1) Largest target is 0

    sp__strcat	PTR unsigned char  size(1) Largest target is 0

    GetString@string	PTR unsigned char  size(1) Largest target is 0

    lcd_send_string@str	PTR unsigned char  size(2) Largest target is 15
		 -> main@str1(BANK1[15]), main@str0(BANK1[15]), STR_7(CODE[9]), STR_6(CODE[8]), 
		 -> STR_5(CODE[13]), 

    I2C_Multi_Send@data	PTR unsigned char  size(1) Largest target is 4
		 -> lcd_send_data@data_t(BANK0[4]), lcd_send_cmd@data_t(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_lcd_init
    _lcd_send_string->_lcd_send_data
    _lcd_put_cur->_lcd_send_cmd
    _lcd_init->_lcd_send_cmd
    _lcd_clear->_lcd_send_cmd
    _lcd_clear->_lcd_send_data
    _lcd_send_data->_I2C_Multi_Send
    _lcd_send_cmd->_I2C_Multi_Send
    _I2C_Multi_Send->_I2C_Write
    _I2C_Master_Init->___lldiv
    _GetVoltage->___xxtofl
    _sprintf->___awdiv
    _sprintf->___lldiv
    _sprintf->___xxtofl
    _scale->___awdiv
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___xxtofl->___wmul
    ___flsub->___xxtofl

Critical Paths under _main in BANK0

    _lcd_send_string->_lcd_send_data
    _lcd_put_cur->_lcd_send_cmd
    _lcd_init->_lcd_send_cmd
    _lcd_clear->_lcd_send_cmd
    _lcd_clear->_lcd_send_data
    _GetVoltage->___xxtofl
    _GetString->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_GetString
    _GetString->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0   39577
                                             38 BANK1     33    33      0
                           _ADC_Read
                          _ADC_Setup
                          _GetString
                         _GetVoltage
                    _I2C_Master_Init
                          _lcd_clear
                           _lcd_init
                        _lcd_put_cur
                    _lcd_send_string
 ---------------------------------------------------------------------------------
 (1) _lcd_send_string                                      2     0      2    1268
                                             11 COMMON     2     0      2
                      _lcd_send_data
 ---------------------------------------------------------------------------------
 (1) _lcd_put_cur                                          4     0      4    1497
                                              7 BANK0      4     0      4
                       _lcd_send_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     843
                                             11 COMMON     3     3      0
                       _lcd_send_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            2     2      0    1732
                                             11 COMMON     2     2      0
                       _lcd_send_cmd
                      _lcd_send_data
 ---------------------------------------------------------------------------------
 (2) _lcd_send_data                                        9     9      0     843
                                              9 COMMON     2     2      0
                                              0 BANK0      7     7      0
                     _I2C_Multi_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _lcd_send_cmd                                         9     9      0     843
                                              9 COMMON     2     2      0
                                              0 BANK0      7     7      0
                     _I2C_Multi_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
                           _I2C_IDLE
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
                           _I2C_IDLE
 ---------------------------------------------------------------------------------
 (3) _I2C_Multi_Send                                       9     5      4     613
                                              1 COMMON     8     4      4
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _I2C_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_IDLE                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     716
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _GetVoltage                                          14    10      4    1220
                                              6 BANK0     14    10      4
                           _ADC_Read (ARG)
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _GetString                                            8     2      6   31903
                                             30 BANK1      8     2      6
                           _ADC_Read (ARG)
                         _GetVoltage (ARG)
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                               3     2      1     366
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    37      5   30945
                                             74 BANK0      5     0      5
                                              0 BANK1     30    30      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               19    15      4    7408
                                             26 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1208
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1364
                                              6 COMMON     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              20    16      4    5871
                                             26 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     615
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     618
                                              5 COMMON     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4393
                                              0 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     455
                                              0 COMMON    11     3      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              6 COMMON     8     4      4
                                              0 BANK0      6     6      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     457
                                             45 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                             66 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             46 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _ADC_Setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             3     1      2     348
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _ADC_Setup
   _GetString
     _ADC_Read (ARG)
     _GetVoltage (ARG)
       _ADC_Read (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     _sprintf (ARG)
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
           ___lwmod
       ___fleq
       ___flge
       ___flmul
       ___flneg
       ___flsub
         ___fladd
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
         _scale (ARG)
           ___awdiv
           ___awmod
           ___flmul
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
       _isdigit
       _scale
     _strcat (ARG)
   _GetVoltage
   _I2C_Master_Init
     ___lldiv
   _lcd_clear
     _lcd_send_cmd
       _I2C_Multi_Send
         _I2C_Write
           _I2C_IDLE
       _I2C_Start
         _I2C_IDLE
       _I2C_Stop
         _I2C_IDLE
     _lcd_send_data
       _I2C_Multi_Send
       _I2C_Start
       _I2C_Stop
   _lcd_init
     _lcd_send_cmd
   _lcd_put_cur
     _lcd_send_cmd
   _lcd_send_string
     _lcd_send_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A8       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     47      4B       7       93.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A8      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Jun 12 09:29:06 2024

        I2C_Multi_Send@n 0077            ?_lcd_send_cmd 0070                        pc 0002  
           ?_lcd_put_cur 0027           ?_lcd_send_data 0070                       l61 1B58  
      I2C_Multi_Send@cmd 0070                       l55 1D0D                       l64 1B37  
                     l58 1B4C                       l91 1CD5                       l67 1B40  
                     l94 1B2E                       l79 1B68                       l97 1C89  
                     l98 1CA6                       l99 1C9C             ___awdiv@sign 007B  
                     fsr 0004      ___wmul@multiplicand 0072      __Umul8_16@word_mpld 0076  
                    l104 1D8C                      l112 1BBA                      l122 095B  
                    l131 1DCF                      l107 1D4C                      l116 1B7C  
                    l119 1B98                      l136 10D1                      l128 1C29  
                    l145 00B7                      l250 15A7                      l323 07F5  
                    l501 12A5                      l317 07AB                      l309 064A  
                    l327 1BEB                      l513 1E30                      l521 115A  
                    l329 1C03                      l257 0FFF                      l514 1E4C  
                    l522 1173                      l530 1FFF                      l515 1E61  
                    l363 1F20                      l700 1BDE                      l540 1FFF  
                    l508 12D5                      l276 021A                      l518 10EE  
                    l526 1B4B                      l544 122A                      l480 1F87  
                    l537 1FEA                      l545 119E                      l633 1E13  
                    l555 121D                      l643 003C                      l660 165F  
                    l548 11ED                      l493 1EBA                      l654 1603  
                    l750 0CA0                      l814 1B7A                      l583 1055  
                    l807 1366                      l808 1372                      l497 12E2  
                    l658 1686                      l498 1249                      l675 174F  
                    l667 17FF                      l771 1C50                      l827 1C78  
                    l756 0C10                      l685 1795                      l679 1773  
                    l697 17FF                      l769 1C3E                      l794 1307  
                    l796 139C       I2C_Multi_Send@data 0072       I2C_Multi_Send@send 0076  
     I2C_Multi_Send@size 0073                      fsr0 0004                      indf 0000  
           ___awmod@sign 0075             ___flmul@aexp 0032             ___flmul@bexp 0033  
            _sprintf$980 00A5             ___flmul@sign 002D             ___flmul@temp 0038  
           ___flmul@prod 0034             ___fltol@exp1 0056                     l3001 12BA  
                   l3011 12DA                     l3003 12C3                     l3101 1F9C  
                   l3021 1BF2                     l3111 1FBE                     l3103 1FAF  
                   l3031 1ECB                     l3023 1BF9                     l3015 1BDF  
                   l3121 1FD8                     l3105 1FB0                     l3041 1EE8  
                   l3033 1ECE                     l3025 1BFF                     l3017 1BE1  
                   l3201 138F                     l3009 12CA                     l2321 1C2B  
                   l2401 1E77                     l3131 1FF4                     l3107 1FB8  
                   l3043 1EFA                     l3035 1ED7                     l3051 1F18  
                   l3019 1BE5                     l3203 1393                     l2331 1C4C  
                   l2323 1C2D                     l2411 1E8F                     l2403 1E7D  
                   l3211 1D53                     l3061 1E5E                     l2501 15DD  
                   l3117 1FC6                     l3109 1FBA                     l3045 1F08  
                   l3037 1EDB                     l3029 1EBB                     l3141 101A  
                   l3133 1002                     l3205 1394                     l2325 1C34  
                   l2421 1EB1                     l2413 1E99                     l2405 1E80  
                   l3301 029A                     l2317 1B4C                     l2341 1B68  
                   l3221 1D6B                     l3213 1D5F                     l3063 1E60  
                   l3055 1E14                     l3071 1102                     l2511 15F0  
                   l2503 15E1                     l3127 1FDF                     l3119 1FCF  
                   l3047 1F09                     l3039 1EDF                     l3143 101E  
                   l3135 100A                     l3151 104D                     l2327 1C38  
                   l2431 1DD8                     l2351 1F2B                     l2423 1EB6  
                   l2415 1E9F                     l2407 1E87                     l3311 02EA  
                   l3303 02B3                     l2319 1B52                     l2335 1B5A  
                   l3223 1D70                     l3215 1D62                     l3231 1D14  
                   l3057 1E28                     l3081 1170                     l3073 110A  
                   l2601 1727                     l2521 160D                     l2513 15F8  
                   l2505 15E5                     l3129 1FEF                     l3049 1F12  
                   l3145 1030                     l3137 100D                     l3161 12E6  
                   l2329 1C47                     l2441 1DFB                     l2433 1DDB  
                   l2361 1F3C                     l2353 1F2D                     l2345 1F21  
                   l2417 1EA6                     l2409 1E8B                     l3401 0653  
                   l3321 0377                     l3313 02EE                     l3305 02BE  
                   l2337 1B5F                     l3225 1D7E                     l3217 1D65  
                   l3209 1D50                     l3241 1D2C                     l3233 1D20  
                   l3059 1E44                     l3083 1172                     l3075 110E  
                   l3067 10D2                     l3091 1B4B                     l2611 1757  
                   l2603 172B                     l2531 1619                     l2523 1611  
                   l2515 15F9                     l2507 15E6                     l3155 1BBB  
                   l3147 103E                     l3139 1016                     l3163 12EB  
                   l2443 1E01                     l2435 1DE2                     l2427 1DD0  
                   l2371 1F54                     l2363 1F42                     l2355 1F31  
                   l2347 1F22                     l2419 1EAC                     l3411 06DA  
                   l3403 0658                     l3331 03F9                     l3323 0380  
                   l3315 02F4                     l3307 02C4                     l3251 01A2  
                   l2339 1B63                     l3227 1D83                     l3219 1D68  
                   l3243 1D31                     l3235 1D23                     l3077 1132  
                   l3069 10E6                     l2621 1772                     l2613 175C  
                   l2605 172D                     l2541 1623                     l2533 161B  
                   l2525 1613                     l2509 15EB                     l2517 15FB  
                   l3157 1BBF                     l3149 1047                     l3181 132F  
                   l3173 1318                     l3165 12EF                     l2701 0994  
                   l2445 1E02                     l2437 1DE6                     l2429 1DD2  
                   l2461 0017                     l2453 0003                     l2373 1F65  
                   l2365 1F45                     l2381 1F79                     l2357 1F36  
                   l2349 1F26                     l3413 0715                     l3421 0779  
                   l3405 065D                     l3341 0474                     l3333 0408  
                   l3325 039B                     l3317 0313                     l3309 02D7  
                   l3261 01C2                     l3253 01A8                     l3245 1D3F  
                   l3237 1D26                     l3229 1D11                     l3501 1B99  
                   l3079 1136                     l3087 1B41                     l2623 1777  
                   l2631 1783                     l2607 1732                     l2551 162D  
                   l2543 1625                     l2535 161D                     l2527 1615  
                   l2519 1609                     l3095 1F88                     l3191 135C  
                   l3183 1333                     l3175 131B                     l3167 12FF  
                   l2711 09B0                     l2703 0999                     l2447 1E09  
                   l2439 1DEA                     l2463 001B                     l2455 0009  
                   l2471 0038                     l2383 1F7E                     l2375 1F6B  
                   l2367 1F4C                     l2359 1F3A                     l2391 1E63  
                   l3423 0781                     l3415 0734                     l3407 0661  
                   l3351 04C2                     l3343 047D                     l3335 0423  
                   l3319 035E                     l3327 03A3                     l3431 0797  
                   l3271 01FC                     l3263 01C5                     l3255 01AD  
                   l3247 1D44                     l3239 1D29                     l3511 1BA7  
                   l3503 1B9F                     l3089 1B49                     l2625 177A  
                   l2617 1765                     l2609 1741                     l2633 1787  
                   l2561 166A                     l2545 1627                     l2537 161F  
                   l2529 1617                     l2553 162F                     l2481 15B5  
                   l3097 1F93                     l3193 1360                     l3185 1341  
                   l3177 131F                     l3169 130F                     l2801 0C7C  
                   l2721 09D1                     l2713 09B5                     l2705 099E  
                   l2449 1E0F                     l2465 0025                     l2457 000C  
                   l2385 1F83                     l2377 1F6C                     l2369 1F50  
                   l2393 1E67                     l3441 07C6                     l3433 079D  
                   l3425 0786                     l3417 073A                     l3409 067F  
                   l3345 0485                     l3337 044A                     l3353 04CB  
                   l3329 03B2                     l3281 021C                     l3273 0202  
                   l3265 01CB                     l3257 01B2                     l3249 019F  
                   l3513 1BAD                     l3521 1B83                     l2651 17CF  
                   l2643 179A                     l2635 1788                     l2627 177C  
                   l2619 176E                     l2563 166C                     l2571 167E  
                   l2555 1630                     l2547 1629                     l2539 1621  
                   l2491 15C9                     l2483 15B6                     l2475 15A8  
                   l3195 136A                     l3187 134A                     l3179 1328  
                   l2803 0C7E                     l2811 0C94                     l2731 0A5B  
                   l2723 09DE                     l2715 09BA                     l2707 09A6  
                   l2467 002B                     l2459 0013                     l2379 1F73  
                   l2395 1E6C                     l3443 07C6                     l3435 07A5  
                   l3427 078A                     l3419 073E                     l3371 0592  
                   l3363 0551                     l3355 054D                     l3347 04A3  
                   l3339 0459                     l3291 025C                     l3451 07F1  
                   l3283 023A                     l3267 01D0                     l3275 0214  
                   l3259 01B4                     l3531 08DA                     l3523 1B92  
                   l3515 1B7B                     l3611 0041                     l2661 17EA  
                   l2645 179F                     l2653 17D3                     l2637 178C  
                   l2629 1781                     l2581 16AF                     l2573 168A  
                   l2565 1670                     l2557 1647                     l2549 162B  
                   l2485 15BB                     l2493 15CB                     l2477 15AD  
                   l3197 1374                     l3189 1351                     l2813 0C98  
                   l2805 0C8A                     l2741 0AB9                     l2733 0A77  
                   l2725 09F9                     l2709 09A8                     l2469 0032  
                   l2901 1B77                     l2397 1E6E                     l2389 1E62  
                   l3445 07D4                     l3437 07B6                     l3429 0790  
                   l3381 0602                     l3373 059E                     l3357 054F  
                   l3293 0260                     l3285 0246                     l3701 0232  
                   l3277 0218                     l3269 01E5                     l3461 1C55  
                   l2821 1B38                     l3509 1BA1                     l3541 090C  
                   l3533 08E0                     l3517 1B7E                     l3621 0054  
                   l3613 0042                     l2671 17FA                     l2663 17EB  
                   l2655 17D8                     l2647 17AD                     l2639 1792  
                   l2591 16C4                     l2583 16B3                     l2575 168F  
                   l2567 1671                     l2559 1663                     l2495 15D3  
                   l2487 15C0                     l2479 15B1                     l3199 138A  
                   l2807 0C8E                     l2751 0B43                     l2743 0AD6  
                   l2735 0A80                     l2727 0A15                     l2719 09C3  
                   l2903 1B79                     l2399 1E72                     l3447 07D9  
                   l3439 07B7                     l3391 061F                     l3383 0608  
                   l3375 05A3                     l3367 0588                     l3295 0279  
                   l3287 024A                     l3463 1C59                     l2831 1CB5  
                   l2823 1B3D                     l3551 093F                     l3543 091B  
                   l3535 08EF                     l3631 0088                     l3623 0059  
                   l3615 0043                     l2673 17FE                     l2665 17EF  
                   l2657 17DD                     l2649 17B1                     l2593 16C5  
                   l2585 16B7                     l2569 167A                     l2497 15D6  
                   l2489 15C8                     l2921 11A5                     l2913 118E  
                   l2809 0C8F                     l2761 0BD3                     l2753 0B6E  
                   l2745 0AED                     l2737 0A8E                     l2729 0A3F  
                   l2681 0969                     l3393 0625                     l3377 05A8  
                   l3385 060C                     l3369 058C                     l3297 0292  
                   l3289 024E                     l3449 07DD                     l3465 1C62  
                   l3481 1D0B                     l3473 1CD6                     l2833 1CC1  
                   l2825 1CA7                     l2817 1B2F                     l3553 0947  
                   l3545 0923                     l3537 08F7                     l3529 08CD  
                   l3561 1C13                     l3641 00CA                     l3633 0091  
                   l3625 005E                     l3617 0046                     l3609 003D  
                   l2667 17F1                     l2659 17E5                     l2595 16CE  
                   l2587 16BE                     l2579 1698                     l2499 15DC  
                   l2931 11D4                     l2923 11B4                     l2907 1174  
                   l2763 0BDC                     l2771 0BF0                     l2755 0B94  
                   l2747 0B0A                     l2739 0AAB                     l2691 097E  
                   l2683 096A                     l2675 095C                     l2851 1564  
                   l3395 0632                     l3387 0614                     l3379 05E3  
                   l3299 0296                     l3467 1C6A                     l3459 1C52  
                   l3483 1D0C                     l3475 1CDA                     l2835 1CC7  
                   l2827 1CAC                     l2819 1B34                     l3555 0955  
                   l3547 0931                     l3539 0906                     l3563 1C19  
                   l3651 015F                     l3643 00D5                     l3635 009F  
                   l3627 0076                     l3619 0047                     l3493 1C8E  
                   l3485 1B26                     l2669 17F5                     l2589 16C0  
                   l2597 16D3                     l2933 11DE                     l2925 11B6  
                   l2909 1185                     l2773 0BF4                     l2765 0BE0  
                   l2757 0BBC                     l2749 0B35                     l2693 0986  
                   l2685 096F                     l2677 0961                     l2845 14B3  
                   l2837 13A0                     l2861 0CB1                     l3397 0641  
                   l3389 061B                     l3469 1C77                     l3581 1094  
                   l3573 1056                     l3565 1D8D                     l3477 1CDD  
                   l2829 1CB2                     l3549 0937                     l3557 1C04  
                   l3653 0168                     l3645 00E4                     l3637 00A8  
                   l3629 007B                     l3495 1C9B                     l3487 1C79  
                   l2599 16E9                     l2935 11DF                     l2927 11BD  
                   l2919 119F                     l2791 0C45                     l2783 0C15  
                   l2775 0BF5                     l2767 0BE1                     l2759 0BC5  
                   l2695 098B                     l2687 0974                     l2679 0965  
                   l2847 14B9                     l2839 13A6                     l2855 0CA4  
                   l3399 0646                     l3583 109A                     l3575 105E  
                   l3567 1D8D                     l3479 1CDE                     l3559 1C05  
                   l3655 0181                     l3647 011A                     l3639 00BC  
                   l3497 1CA0                     l3489 1C86                     l2961 122B  
                   l2945 11F9                     l2937 11E7                     l2929 11C6  
                   l2785 0C1A                     l2793 0C4B                     l2777 0BF9  
                   l2769 0BEA                     l2697 098F                     l2689 097C  
                   l2873 0E28                     l2857 0CA8                     l3585 109F  
                   l3577 1063                     l3569 1DC7                     l3657 018A  
                   l3649 0152                     l2963 1236                     l2955 1212  
                   l2947 1202                     l2939 11F1                     l2795 0C58  
                   l2787 0C28                     l2779 0C0D                     l2699 0993  
                   l2891 0FD3                     l2867 0D99                     l2859 0CAA  
                   l3587 10C3                     l3579 1087                     l2981 126C  
                   l2973 124A                     l2957 1222                     l2949 120B  
                   l2797 0C63                     l2789 0C2C                     l2885 0F44  
                   l2869 0DA0                     l2877 0E55                     l3589 10D0  
                   l2991 129F                     l2983 1275                     l2975 1252  
                   l2967 123F                     l2799 0C72                     l2895 1B6A  
                   l2887 0F4B                     l2879 0E5C                     l2993 12A9  
                   l2985 1287                     l2977 1263                     l2897 1B6B  
                   l2987 1295                     l2979 1265                     l2899 1B71  
                   l3699 1B8A                     l2989 1296                     l2999 12B1  
                   STR_1 08BE                     STR_2 08C8                     STR_3 08C3  
                   STR_4 08C8                     STR_5 08A0                     STR_6 08B6  
                   STR_7 08AD                     u3000 1EB1                     u3001 1EB0  
                   u3010 1DD8                     u3011 1DD7                     u3100 001B  
                   u3101 001A                     u3030 1DEA                     u3110 0025  
                   u3031 1DE9                     u3111 0024                     u3200 15F0  
                   u3201 15EF                     u3025 1DDC                     u3210 1609  
                   u3050 1DFB                     u3130 0038                     u3211 1608  
                   u3051 1DFA                     u3131 0037                     u3115 0021  
                   u3300 168A                     u3220 160D                     u3140 15B5  
                   u4020 14B9                     u3301 1689                     u3221 160C  
                   u3141 15B4                     u3045 1DEB                     u3125 002C  
                   u4021 14B8                     u4005 141D                     u3310 168F  
                   u3230 1647                     u3150 15BB                     u3070 1E0F  
                   u4110 0DA0                     u3311 168E                     u3231 1646  
                   u3151 15BA                     u3071 1E0E                     u3055 1DF7  
                   u4015 1472                     u4111 0D9F                     u3400 1732  
                   u3240 1652                     u3160 15C0                     u5000 137F  
                   u3080 0009                     u3401 1731                     u3321 16A1  
                   u3241 1650                     u3161 15BF                     u3065 1E03  
                   u3081 0008                     u4105 0D58                     u3410 1757  
                   u3330 16B3                     u3322 16A8                     u3250 1653  
                   u3170 15DC                     u5010 138F                     u3411 1756  
                   u3331 16B2                     u3323 16AF                     u3235 1643  
                   u3171 15DB                     u5011 138E                     u4035 14D6  
                   u3500 1799                     u3420 175C                     u3340 16B7  
                   u3260 1663                     u3180 15E5                     u5020 1393  
                   u4300 11ED                     u4060 0CA8                     u5100 0279  
                   u3501 1798                     u3421 175B                     u3341 16B6  
                   u3261 1662                     u3181 15E4                     u5021 1392  
                   u5005 137A                     u4301 11EC                     u4045 1523  
                   u4205 0F5E                     u4125 0DB3                     u4061 0CA7  
                   u5101 0278                     u3510 179F                     u3350 16C4  
                   u3270 1670                     u3190 15EB                     u4310 11F1  
                   u4230 1B71                     u4150 0E5C                     u4070 0CB1  
                   u5110 02B3                     u3511 179E                     u3351 16C3  
                   u3271 166F                     u3191 15EA                     u4311 11F0  
                   u3095 000D                     u4055 156F                     u4231 1B70  
                   u4215 0F9A                     u4151 0E5B                     u4135 0DEF  
                   u4071 0CB0                     u5111 02B2                     u3520 17B1  
                   u3440 1772                     u4320 11F8                     u3600 0969  
                   u4240 1B77                     u5200 0474                     u5120 02EE  
                   u3521 17B0                     u3441 1771                     u4321 11F7  
                   u3601 0968                     u4241 1B76                     u4225 0FD6  
                   u4145 0E2B                     u5201 0473                     u5121 02ED  
                   u3530 17C0                     u3450 1777                     u3370 16E9  
                   u3290 1686                     u4410 1287                     u4250 1185  
                   u2810 1C4C                     u3610 096F                     u5130 0377  
                   u5050 01A8                     u3451 1776                     u3435 1767  
                   u3371 16E8                     u3291 1685                     u4411 1286  
                   u4251 1184                     u2811 1C4B                     u3611 096E  
                   u5131 0376                     u5051 01A7                     u5035 1D56  
                   u3540 17CF                     u3460 1781                     u4500 12DA  
                   u4340 120A                     u4260 119D                     u3620 0974  
                   u2900 1F79                     u2820 1F26                     u5220 0587  
                   u5140 039B                     u5060 01C2                     u3541 17CE  
                   u3461 1780                     u3381 1700                     u3373 16E5  
                   u3365 16C7                     u3285 1673                     u4501 12D9  
                   u4405 126E                     u4341 1209                     u4261 119C  
                   u2805 1C3F                     u3701 0A4D                     u3621 0973  
                   u2901 1F78                     u2821 1F25                     u4165 0E7C  
                   u4085 0CD1                     u5221 0586                     u5141 039A  
                   u5061 01C1                     u5045 1D17                     u3550 17D8  
                   u3470 1787                     u3390 1714                     u3382 1701  
                   u4510 1BE5                     u4430 12A5                     u4350 1211  
                   u3702 0A54                     u3630 0993                     u2910 1F7E  
                   u2830 1F31                     u4190 0F4B                     u5230 0592  
                   u5150 03B2                     u5070 0213                     u3551 17D7  
                   u3535 17BB                     u3471 1786                     u3391 1715  
                   u3383 1706                     u4511 1BE4                     u4431 12A4  
                   u4415 1283                     u4351 1210                     u4335 11FA  
                   u3711 0A69                     u3703 0A5B                     u3631 0992  
                   u2911 1F7D                     u2831 1F30                     u4191 0F4A  
                   u4175 0EB8                     u4095 0D0D                     u5231 0591  
                   u5215 0554                     u5151 03B1                     u5071 0212  
                   u3560 17DD                     u3480 178C                     u3392 171A  
                   u3384 1707                     u4440 12A9                     u4280 11D4  
                   u3712 0A70                     u3640 0999                     u2840 1F42  
                   u2920 1E67                     u5320 0780                     u5240 059E  
                   u5160 0408                     u5080 0246                     u5400 1C61  
                   u3561 17DC                     u3481 178B                     u3393 171B  
                   u3385 170C                     u4441 12A8                     u4425 1298  
                   u4281 11D3                     u3801 0B86                     u3713 0A77  
                   u3641 0998                     u2841 1F41                     u2921 1E66  
                   u4185 0F03                     u5321 077F                     u5305 06DD  
                   u5241 059D                     u5225 0583                     u5161 0407  
                   u5081 0245                     u5401 1C60                     u3570 17EA  
                   u3490 1792                     u3386 170D                     u4610 1F18  
                   u4450 12B0                     u4370 1222                     u3810 0BA2  
                   u3802 0B8D                     u3650 099E                     u2930 1E72  
                   u5330 0796                     u5170 0423                     u5090 024A  
                   u5410 1C77                     u2770 1B52                     u3571 17E9  
                   u3491 1791                     u4611 1F17                     u4451 12AF  
                   u4371 1221                     u4275 11BF                     u3803 0B94  
                   u3731 0A9D                     u3651 099D                     u2931 1E71  
                   u5331 0795                     u5315 0741                     u5171 0422  
                   u5155 03AE                     u5091 0249                     u5411 1C76  
                   u2771 1B51                     u4620 1E28                     u3580 17EF  
                   u4540 1BFF                     u4380 1236                     u3900 0C14  
                   u3732 0AA4                     u3660 09B5                     u2860 1F54  
                   u2940 1E7D                     u5340 079D                     u5260 0613  
                   u5180 044A                     u5500 109A                     u5420 1CEE  
                   u2780 1B58                     u4621 1E27                     u4701 1145  
                   u3581 17EE                     u4605 1F0A                     u4541 1BFE  
                   u4525 1BEC                     u4381 1235                     u4365 1214  
                   u4285 11D0                     u3901 0C13                     u3821 0BAE  
                   u3741 0AC8                     u3733 0AAB                     u3725 0A79  
                   u3661 09B4                     u2861 1F53                     u2941 1E7C  
                   u5341 079C                     u5261 0612                     u5181 0449  
                   u5165 0404                     u5501 1099                     u2781 1B57  
                   u5430 1C86                     u4630 1E44                     u4710 1170  
                   u4702 1146                     u3590 17FE                     u4550 1ECB  
                   u4470 12C2                     u4390 1248                     u2790 1C38  
                   u3910 0C1A                     u3822 0BB5                     u3742 0ACF  
                   u3670 09BA                     u5350 07A5                     u5270 0632  
                   u5190 0459                     u5431 1C85                     u4631 1E43  
                   u4711 116F                     u4703 114B                     u3591 17FD  
                   u4551 1ECA                     u4535 1BF3                     u4471 12C1  
                   u4391 1247                     u4295 11E0                     u2791 1C37  
                   u3911 0C19                     u3823 0BBC                     u3815 0B9D  
                   u3743 0AD6                     u3671 09B9                     u2855 1F46  
                   u5351 07A4                     u5271 0631                     u5255 05AB  
                   u5191 0458                     u4640 1E5E                     u4704 114C  
                   u4720 1B49                     u4480 12C9                     u3920 0C2C  
                   u2880 1F65                     u2960 1E8F                     u5360 07B6  
                   u5280 0641                     u4641 1E5D                     u4705 1151  
                   u4721 1B48                     u4481 12C8                     u4465 12B2  
                   u3921 0C2B                     u3761 0AFC                     u3681 0A07  
                   u2881 1F64                     u2961 1E8E                     u5361 07B5  
                   u5281 0640                     u5425 1CE9                     u5450 1CA0  
                   u4706 1152                     u4650 10E6                     u4810 1FEF  
                   u4730 1F93                     u4570 1EDF                     u3930 0C3B  
                   u3850 0BE0                     u3762 0B03                     u3682 0A0E  
                   u2970 1E99                     u5370 07C6                     u5290 0658  
                   u5451 1C9F                     u5435 1C82                     u4715 116C  
                   u4651 10E5                     u4811 1FEE                     u4731 1F92  
                   u4571 1EDE                     u3851 0BDF                     u3835 0BBE  
                   u3771 0B27                     u3763 0B0A                     u3755 0AD8  
                   u3691 0A23                     u3683 0A15                     u2875 1F55  
                   u2971 1E98                     u2955 1E81                     u5371 07C5  
                   u5291 0657                     u5275 062E                     u5195 0455  
                   u4660 1102                     u4820 1FF4                     u4740 1FAA  
                   u4900 12EF                     u3940 0C58                     u3772 0B2E  
                   u3692 0A2A                     u5380 07D4                     u5460 1BBA  
                   u5445 1C91                     u4645 1E5A                     u4661 1101  
                   u4821 1FF3                     u4805 1FE1                     u4565 1ED0  
                   u4901 12EE                     u3941 0C57                     u3845 0BD5  
                   u3781 0B52                     u3773 0B35                     u3693 0A31  
                   u2885 1F61                     u5381 07D3                     u5365 07B2  
                   u5285 063D                     u5461 1BB9                     u5517 006F  
                   u4670 110E                     u4750 1FBE                     u4590 1EFA  
                   u4830 100A                     u4910 130F                     u3950 0C72  
                   u3870 0BF4                     u3790 0B7A                     u3782 0B59  
                   u2990 1EAC                     u5390 07F1                     u5470 1C29  
                   u4671 110D                     u4751 1FBD                     u4591 1EF9  
                   u4831 1009                     u4911 130E                     u4495 12CC  
                   u3951 0C71                     u3935 0C36                     u3871 0BF3  
                   u3783 0B60                     u2895 1F6D                     u2991 1EAB  
                   u2975 1E95                     u5391 07F0                     u5375 07C2  
                   u5607 0910                     u5471 1C28                     u5527 00B0  
                   u4760 1FC5                     u3960 0C8E                     u3880 0BF9  
                   u4681 111D                     u4761 1FC4                     u4745 1FA5  
                   u4585 1EE1                     u3961 0C8D                     u3945 0C54  
                   u3881 0BF8                     u3865 0BE3                     u2985 1EA0  
                   u5465 1BB6                     u5617 091F                     u5537 00D0  
                   u4690 1136                     u4682 111E                     u4850 101E  
                   u4930 132E                     u3890 0C0D                     u5490 105E  
                   u3970 1CD5                     u4691 1135                     u4683 1123  
                   u4595 1EF6                     u4851 101D                     u4931 132D  
                   u3955 0C6E                     u3891 0C0C                     u3795 0B75  
                   u5491 105D                     u3971 1CD4                     u5627 092D  
                   u5547 016E                     u4684 1124                     u4780 1FD7  
                   u4860 1030                     u3980 13A6                     u4685 1129  
                   u4781 1FD6                     u4861 102F                     u4845 100F  
                   u4925 1320                     u3981 13A5                     u5485 1DA3  
                   u5637 093B                     u5557 0192                     u4686 112A  
                   u4790 1FDE                     u4950 1350                     u4791 1FDD  
                   u4775 1FC7                     u4951 134F                     u3975 1CD1  
                   u5647 0943                     u5567 08D3                     u4880 104D  
                   u4881 104C                     u4865 102C                     u4945 1342  
                   u5657 0951                     u5577 08E4                     u4970 1360  
                   u4890 12EB                     u4875 103F                     u4971 135F  
                   u4891 12EA                     u3995 13C3                     u5667 1D48  
                   u5587 08F3                     u4980 1366                     u4981 1365  
                   u4965 1355                     u5677 1D87                     u5597 0901  
                   u4990 136A                     u4991 1369         __end_of_I2C_IDLE 1B59  
                   _main 003D                     btemp 007E         __end_of_I2C_Stop 1B41  
       ?_lcd_send_string 007B         __end_of_ADC_Read 1CA7                     start 0000  
         ??_lcd_send_cmd 0079         ?_I2C_Master_Init 0020            ___fltol@sign1 0055  
        __end_of___fladd 1800                    ?_main 0070          __end_of___awdiv 1F88  
        __end_of___flneg 1B4C          __end_of___awmod 1EBB          __end_of___flmul 0CA1  
        __end_of___flsub 1BDF          __end_of___fltol 2000          __end_of___lldiv 1F21  
             _GetVoltage 1D8D          ___awdiv@divisor 0076          __end_of___llmod 1056  
        __end_of___lwdiv 1E14          __end_of___lwmod 003D          ___awdiv@counter 007A  
                  _PORTB 0006                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _SSPIF 0063  
        __end_of_dpowers 08A0                    _scale 0CA1          __end_of_isdigit 1B7B  
      __end_of_I2C_Start 1B38        __end_of_I2C_Write 1B69                    pclath 000A  
      __end_of_ADC_Setup 1B2F                    status 0003                    wtemp0 007E  
        __end_of_sprintf 07F6          __initialization 07F6          ??_lcd_send_data 0079  
           __end_of_main 019C                   ??_main 00C6                   _ADCON0 001F  
                 _ADCON1 009F         ___llmod@dividend 0074                   ?_scale 003A  
                 _ADRESH 001E                   _ADRESL 009E         ___awdiv@dividend 0078  
  I2C_Multi_Send@address 0071                   _SSPADD 0093                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of___xxtofl 139D         __end_of__powers_ 0844  
       __end_of_lcd_init 095C                   ___flge 10D2                   ___fleq 1E14  
              ??___fladd 0056                   ___wmul 1BDF                ??___awdiv 007A  
              ??___flneg 0074                ??___awmod 0074                ??___flmul 0028  
              ??___flsub 007E                ??___fltol 0051                ??___lldiv 0078  
              ??___llmod 0078                ??___lwdiv 0079                ??___lwmod 0074  
        ADC_Read@channel 0070                   _fround 139D         ___awdiv@quotient 007C  
        ___awmod@divisor 0070          ___awmod@counter 0074                   _strcat 1C51  
            ?_GetVoltage 0026                ?_I2C_IDLE 0070                ??_isdigit 0070  
              ?_I2C_Stop 0070                ?_ADC_Read 0070     __end_of_lcd_send_cmd 1D8D  
              ??_sprintf 00A0               ___flge@ff1 0070               ___flge@ff2 0074  
           ___xxtofl@arg 0022             ___xxtofl@exp 0021             ___xxtofl@val 0076  
             ___fleq@ff1 0070               ___fleq@ff2 0074  __end_of__initialization 07FC  
             ___flneg@f1 0070               ___fltol@f1 004D        __end_of_GetString 10D2  
     lcd_send_cmd@data_l 0026       lcd_send_cmd@data_t 0020       lcd_send_cmd@data_u 0025  
         __pcstackCOMMON 0070            __end_of_scale 1000               ??_I2C_IDLE 0070  
             __div_to_l_ 122B               ??_I2C_Stop 0070               ??_ADC_Read 0072  
        __div_to_l_@exp1 0025          __div_to_l_@cntr 0024                  ??_scale 003E  
        __div_to_l_@quot 0020               __pbssBANK1 00E7            __div_to_l_@f1 0070  
          __div_to_l_@f2 0074        __end_of__Umul8_16 1C51               __pmaintext 003D  
                ?___flge 0070                  ?___fleq 0070                  ?___wmul 0070  
                _ACKSTAT 048E                  ?_fround 003A                  ?_strcat 0070  
              ?___xxtofl 0076                  _GO_DONE 00FA                  _SSPCON2 0091  
              ?_lcd_init 0070                  _SSPSTAT 0094               __stringtab 0800  
         GetString@value 00BE                _I2C_Start 1B2F                _I2C_Write 1B59  
              _ADC_Setup 1B26        __end_of__npowers_ 0878        __end_of_lcd_clear 1BBB  
                ___fladd 15A8                  ___awdiv 1F21                  ___flneg 1B41  
                ___awmod 1E62                  ___flmul 095C                  ___flsub 1BBB  
                ___fltol 1F88                  ___lldiv 1EBB                  ___llmod 1002  
                ___lwdiv 1DD0               _fround$977 0049               _fround$978 0045  
                ___lwmod 0003                  __ptext1 1C04                  __ptext2 1B7B  
                __ptext3 08CD                  __ptext4 1B99                  __ptext5 1D0E  
                __ptext6 1D4D                  __ptext7 1B38                  __ptext8 1B2F  
                __ptext9 1CA7              ?__div_to_l_ 0070                  _dpowers 0878  
                _isdigit 1B69               ??___xxtofl 007A         ___awmod@dividend 0072  
                _sprintf 019C               ??_lcd_init 007B           lcd_put_cur@col 0029  
         lcd_put_cur@row 0027     end_of_initialization 07FC               ?_I2C_Start 0070  
             ?_I2C_Write 0070               ?_ADC_Setup 0070          ___lldiv@divisor 0070  
        ___lldiv@counter 007D         I2C_Master_Init@c 0020             _lcd_send_cmd 1D4D  
  __end_of_lcd_send_data 1D4D           __tdiv_to_l_@f1 0070           __tdiv_to_l_@f2 0074  
         _I2C_Multi_Send 1CA7            ??__tdiv_to_l_ 0078             ??_GetVoltage 002A  
            ___fladd@grs 0061         GetString@channel 00C2            ___xxtofl@sign 0020  
              _TRISCbits 0087               lcd_clear@i 007B       lcd_send_string@str 007B  
            ___flmul@grs 002E       __end_of_GetVoltage 1DD0   __end_of_I2C_Multi_Send 1CD6  
          ??_lcd_put_cur 007B           __end_of___flge 1174           __end_of___fleq 1E62  
              _GetString 1056           __end_of___wmul 1C04      lcd_send_data@data_l 0026  
    lcd_send_data@data_t 0020      lcd_send_data@data_u 0025           __end_of_fround 15A8  
            _adc_value_1 00E9              _adc_value_2 00E7        ??_lcd_send_string 007D  
         __end_of_strcat 1C79      start_initialization 07F6      __end_of__tdiv_to_l_ 122B  
      ??_I2C_Master_Init 0024          ___llmod@divisor 0070              ??_I2C_Start 0070  
        ___llmod@counter 0079              ??_I2C_Write 0070              ??_ADC_Setup 0070  
               ??___flge 0078                 ??___fleq 0078                 ??___wmul 0074  
        ?_I2C_Multi_Send 0071                __Umul8_16 1C2A               ?_GetString 00BE  
               ??_fround 003E            sprintf@tmpval 00B2                 ??_strcat 0071  
              ___fladd@a 0052                ___fladd@b 004E               fround@prec 004D  
    __end_of_lcd_put_cur 1B99                ___flmul@a 0024                ___flmul@b 0020  
              ___flsub@a 0062                ___flsub@b 0066                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0        lcd_send_data@data 0024  
   GetVoltage@conversion 0030              sprintf@flag 00AA              sprintf@eexp 00B0  
            sprintf@fval 00B9              sprintf@prec 00B6          lcd_send_cmd@cmd 0024  
       ___lwdiv@dividend 0077                 ?___fladd 004E                 ?___awdiv 0076  
               ?___flneg 0070                 ?___awmod 0070                 ?___flmul 0020  
               ?___flsub 0062                 ?___fltol 004D                 ?___lldiv 0070  
               ?___llmod 0070                __npowers_ 0844               ?__Umul8_16 0070  
               ?___lwdiv 0075                 ?___lwmod 0070                _lcd_clear 1B99  
              __pstrings 0800              __tdiv_to_l_ 1174                 _I2C_IDLE 1B4C  
           ??__div_to_l_ 0078                 ?_isdigit 0070                 _I2C_Stop 1B38  
               _ADC_Read 1C79                _scale$979 0048         ___lwdiv@quotient 0079  
               ?_sprintf 006A           ___wmul@product 0074       __end_of__div_to_l_ 12E3  
            ??_GetString 007E              _lcd_put_cur 1B7B               ?_lcd_clear 0070  
             _ADCON0bits 001F              __stringbase 080F        ___wmul@multiplier 0070  
        GetString@source 00C4          GetString@string 00C5            I2C_Write@Data 0070  
        _lcd_send_string 1C04              ??__Umul8_16 0072       __end_of__stringtab 0810  
            _isdigit$762 0070               sprintf@val 00AC          _I2C_Master_Init 1CD6  
               ___xxtofl 12E3               strcat@from 0070          ___lwdiv@divisor 0075  
        ___lwdiv@counter 007B                 __ptext10 1B59                 __ptext11 1B4C  
               __ptext20 1B69                 __ptext12 1CD6                 __ptext21 139D  
               __ptext13 1D8D                 __ptext30 1002                 __ptext22 0003  
               __ptext14 1056                 __ptext31 1EBB                 __ptext23 1DD0  
               __ptext15 1C51                 __ptext32 1F88                 __ptext24 095C  
               __ptext16 019C                 __ptext33 1BBB                 __ptext25 1C2A  
               __ptext17 0CA1                 __ptext34 15A8                 __ptext26 1174  
               __ptext18 1E62                 __ptext35 1B41                 __ptext27 122B  
               __ptext19 1F21                 __ptext36 10D2                 __ptext28 12E3  
               __ptext37 1E14                 __ptext29 1BDF                 __ptext38 1B26  
               __ptext39 1C79                 __powers_ 0810                 _lcd_init 08CD  
       ??_I2C_Multi_Send 0075              ??_lcd_clear 007B                 main@str0 00C9  
               main@str1 00D8       GetVoltage@adc_read 0026                 isdigit@c 0071  
               scale@scl 004C                sprintf@ap 00A9         __tdiv_to_l_@exp1 0025  
       __tdiv_to_l_@cntr 0024                sprintf@sp 00B8         __tdiv_to_l_@quot 0020  
       ___lwmod@dividend 0072         ___lldiv@dividend 0074  __end_of_lcd_send_string 1C2A  
              stringcode 080A  __end_of_I2C_Master_Init 1D0E            _lcd_send_data 1D0E  
           ?__tdiv_to_l_ 0070   __Umul8_16@multiplicand 0070                 sprintf@c 00BD  
               sprintf@f 006A                 strcat@cp 0071                 strcat@to 0072  
       ___lldiv@quotient 0079          ___lwmod@divisor 0070          ___lwmod@counter 0074  
               stringdir 080A                 stringtab 0800              _SSPCON2bits 0091  
          ___fladd@signs 005E             ___fladd@aexp 005F             ___fladd@bexp 0060  
   __Umul8_16@multiplier 0078        __Umul8_16@product 0074  
