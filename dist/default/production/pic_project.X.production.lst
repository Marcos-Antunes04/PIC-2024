

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Jun 04 12:40:08 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 22/03/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170     0000                     	;# 
   171     0001                     	;# 
   172     0002                     	;# 
   173     0003                     	;# 
   174     0004                     	;# 
   175     0005                     	;# 
   176     0006                     	;# 
   177     0007                     	;# 
   178     0008                     	;# 
   179     0009                     	;# 
   180     000A                     	;# 
   181     000B                     	;# 
   182     000C                     	;# 
   183     000D                     	;# 
   184     000E                     	;# 
   185     000E                     	;# 
   186     000F                     	;# 
   187     0010                     	;# 
   188     0011                     	;# 
   189     0012                     	;# 
   190     0013                     	;# 
   191     0014                     	;# 
   192     0015                     	;# 
   193     0015                     	;# 
   194     0016                     	;# 
   195     0017                     	;# 
   196     0018                     	;# 
   197     0019                     	;# 
   198     001A                     	;# 
   199     001B                     	;# 
   200     001B                     	;# 
   201     001C                     	;# 
   202     001D                     	;# 
   203     001E                     	;# 
   204     001F                     	;# 
   205     0081                     	;# 
   206     0085                     	;# 
   207     0086                     	;# 
   208     0087                     	;# 
   209     0088                     	;# 
   210     0089                     	;# 
   211     008C                     	;# 
   212     008D                     	;# 
   213     008E                     	;# 
   214     0091                     	;# 
   215     0092                     	;# 
   216     0093                     	;# 
   217     0094                     	;# 
   218     0098                     	;# 
   219     0099                     	;# 
   220     009C                     	;# 
   221     009D                     	;# 
   222     009E                     	;# 
   223     009F                     	;# 
   224     010C                     	;# 
   225     010D                     	;# 
   226     010E                     	;# 
   227     010F                     	;# 
   228     018C                     	;# 
   229     018D                     	;# 
   230                           
   231                           	psect	idataCOMMON
   232     0779                     __pidataCOMMON:
   233                           
   234                           ;initializer for _read_cmd
   235     0779  34FE               	retlw	254
   236                           
   237                           ;initializer for _write_cmd
   238     077A  34FE               	retlw	254
   239     0006                     _PORTB	set	6
   240     0008                     _PORTD	set	8
   241     0013                     _SSPBUF	set	19
   242     0014                     _SSPCON	set	20
   243     0063                     _SSPIF	set	99
   244     0088                     _TRISD	set	136
   245     0086                     _TRISB	set	134
   246     0094                     _SSPSTAT	set	148
   247     0093                     _SSPADD	set	147
   248     0091                     _SSPCON2	set	145
   249     040F                     _nRBPU	set	1039
   250     048E                     _ACKSTAT	set	1166
   251     048C                     _ACKEN	set	1164
   252     048D                     _ACKDT	set	1165
   253     048B                     _RCEN	set	1163
   254     048A                     _PEN	set	1162
   255     0489                     _RSEN	set	1161
   256     0488                     _SEN	set	1160
   257     043C                     _TRISC4	set	1084
   258     043B                     _TRISC3	set	1083
   259                           
   260                           	psect	cinit
   261     07F0                     start_initialization:	
   262                           ; #config settings
   263                           
   264     07F0                     __initialization:
   265                           
   266                           ; Initialize objects allocated to COMMON
   267     07F0  120A  118A  2779  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   268     07F5  00F4               	movwf	__pdataCOMMON& (0+127)
   269     07F6  120A  118A  277A  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   270     07FB  00F5               	movwf	(__pdataCOMMON+1)& (0+127)
   271     07FC                     end_of_initialization:	
   272                           ;End of C runtime variable initialization code
   273                           
   274     07FC                     __end_of__initialization:
   275     07FC  0183               	clrf	3
   276     07FD  120A  118A  2FB3   	ljmp	_main	;jump to C main() function
   277                           
   278                           	psect	dataCOMMON
   279     0074                     __pdataCOMMON:
   280     0074                     _read_cmd:
   281     0074                     	ds	1
   282     0075                     _write_cmd:
   283     0075                     	ds	1
   284                           
   285                           	psect	cstackCOMMON
   286     0070                     __pcstackCOMMON:
   287     0070                     ?_waitmssp:
   288     0070                     ??_waitmssp:	
   289                           ; 1 bytes @ 0x0
   290                           
   291     0070                     ?_i2c_init:	
   292                           ; 1 bytes @ 0x0
   293                           
   294     0070                     ??_i2c_init:	
   295                           ; 1 bytes @ 0x0
   296                           
   297     0070                     ?_i2c_start:	
   298                           ; 1 bytes @ 0x0
   299                           
   300     0070                     ??_i2c_start:	
   301                           ; 1 bytes @ 0x0
   302                           
   303     0070                     ?_i2c_send:	
   304                           ; 1 bytes @ 0x0
   305                           
   306     0070                     ??_i2c_send:	
   307                           ; 1 bytes @ 0x0
   308                           
   309     0070                     ?_main:	
   310                           ; 1 bytes @ 0x0
   311                           
   312     0070                     i2c_send@dat:	
   313                           ; 1 bytes @ 0x0
   314                           
   315                           
   316                           ; 1 bytes @ 0x0
   317     0070                     	ds	1
   318     0071                     ??_main:
   319                           
   320                           ; 1 bytes @ 0x1
   321     0071                     	ds	3
   322                           
   323                           	psect	maintext
   324     07B3                     __pmaintext:	
   325 ;;
   326 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   327 ;;
   328 ;; *************** function _main *****************
   329 ;; Defined at:
   330 ;;		line 179 in file "newmain.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2, status,0, pclath, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : B00/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   344 ;;      Params:         0       0       0       0       0
   345 ;;      Locals:         0       0       0       0       0
   346 ;;      Temps:          3       0       0       0       0
   347 ;;      Totals:         3       0       0       0       0
   348 ;;Total ram usage:        3 bytes
   349 ;; Hardware stack levels required when called: 2
   350 ;; This function calls:
   351 ;;		_i2c_init
   352 ;;		_i2c_send
   353 ;;		_i2c_start
   354 ;; This function is called by:
   355 ;;		Startup code after reset
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359     07B3                     _main:	
   360                           ;psect for function _main
   361                           
   362     07B3                     l869:	
   363                           ;incstack = 0
   364                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   365                           
   366                           
   367                           ;newmain.c: 181:   nRBPU = 0;
   368     07B3  1683               	bsf	3,5	;RP0=1, select bank1
   369     07B4  1303               	bcf	3,6	;RP1=0, select bank1
   370     07B5  1381               	bcf	1,7	;volatile
   371     07B6                     l871:
   372                           
   373                           ;newmain.c: 182:   TRISB = 0x00;
   374     07B6  0186               	clrf	6	;volatile
   375                           
   376                           ;newmain.c: 183:   TRISD = 0x00;
   377     07B7  0188               	clrf	8	;volatile
   378                           
   379                           ;newmain.c: 184:   PORTD = 0x00;
   380     07B8  1283               	bcf	3,5	;RP0=0, select bank0
   381     07B9  1303               	bcf	3,6	;RP1=0, select bank0
   382     07BA  0188               	clrf	8	;volatile
   383     07BB                     l873:
   384                           
   385                           ;newmain.c: 185:   i2c_init();
   386     07BB  120A  118A  279D  120A  118A  	fcall	_i2c_init
   387     07C0                     l875:
   388                           
   389                           ;newmain.c: 187:   {;newmain.c: 188:     PORTB=0XFF;
   390     07C0  30FF               	movlw	255
   391     07C1  1283               	bcf	3,5	;RP0=0, select bank0
   392     07C2  1303               	bcf	3,6	;RP1=0, select bank0
   393     07C3  0086               	movwf	6	;volatile
   394     07C4                     l877:
   395                           
   396                           ;newmain.c: 189:     i2c_start();
   397     07C4  120A  118A  2783  120A  118A  	fcall	_i2c_start
   398     07C9                     l879:
   399                           
   400                           ;newmain.c: 190:     i2c_send(0x30);
   401     07C9  3030               	movlw	48
   402     07CA  120A  118A  278C  120A  118A  	fcall	_i2c_send
   403     07CF                     l881:
   404                           
   405                           ;newmain.c: 192:     _delay((unsigned long)((500)*(20000000/4000.0)));
   406     07CF  300D               	movlw	13
   407     07D0  00F3               	movwf	??_main+2
   408     07D1  30AF               	movlw	175
   409     07D2  00F2               	movwf	??_main+1
   410     07D3  30B6               	movlw	182
   411     07D4  00F1               	movwf	??_main
   412     07D5                     u147:
   413     07D5  0BF1               	decfsz	??_main,f
   414     07D6  2FD5               	goto	u147
   415     07D7  0BF2               	decfsz	??_main+1,f
   416     07D8  2FD5               	goto	u147
   417     07D9  0BF3               	decfsz	??_main+2,f
   418     07DA  2FD5               	goto	u147
   419     07DB  0000               	nop
   420     07DC                     l883:
   421                           
   422                           ;newmain.c: 193:     PORTB=0X00;
   423     07DC  1283               	bcf	3,5	;RP0=0, select bank0
   424     07DD  1303               	bcf	3,6	;RP1=0, select bank0
   425     07DE  0186               	clrf	6	;volatile
   426     07DF                     l885:
   427                           
   428                           ;newmain.c: 198:     _delay((unsigned long)((500)*(20000000/4000.0)));
   429     07DF  300D               	movlw	13
   430     07E0  00F3               	movwf	??_main+2
   431     07E1  30AF               	movlw	175
   432     07E2  00F2               	movwf	??_main+1
   433     07E3  30B6               	movlw	182
   434     07E4  00F1               	movwf	??_main
   435     07E5                     u157:
   436     07E5  0BF1               	decfsz	??_main,f
   437     07E6  2FE5               	goto	u157
   438     07E7  0BF2               	decfsz	??_main+1,f
   439     07E8  2FE5               	goto	u157
   440     07E9  0BF3               	decfsz	??_main+2,f
   441     07EA  2FE5               	goto	u157
   442     07EB  0000               	nop
   443     07EC  2FC0               	goto	l875
   444     07ED  120A  118A  2800   	ljmp	start
   445     07F0                     __end_of_main:
   446                           
   447                           	psect	text1
   448     0783                     __ptext1:	
   449 ;; *************** function _i2c_start *****************
   450 ;; Defined at:
   451 ;;		line 111 in file "newmain.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		status,2, status,0, pclath, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   465 ;;      Params:         0       0       0       0       0
   466 ;;      Locals:         0       0       0       0       0
   467 ;;      Temps:          0       0       0       0       0
   468 ;;      Totals:         0       0       0       0       0
   469 ;;Total ram usage:        0 bytes
   470 ;; Hardware stack levels used: 1
   471 ;; Hardware stack levels required when called: 1
   472 ;; This function calls:
   473 ;;		_waitmssp
   474 ;; This function is called by:
   475 ;;		_main
   476 ;;		_i2c_send_byte
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480     0783                     _i2c_start:	
   481                           ;psect for function _i2c_start
   482                           
   483     0783                     l759:	
   484                           ;incstack = 0
   485                           ; Regs used in _i2c_start: [status,2+status,0+pclath+cstack]
   486                           
   487                           
   488                           ;newmain.c: 113:     SEN=1;
   489     0783  1683               	bsf	3,5	;RP0=1, select bank1
   490     0784  1303               	bcf	3,6	;RP1=0, select bank1
   491     0785  1411               	bsf	17,0	;volatile
   492     0786                     l761:
   493                           
   494                           ;newmain.c: 114:     waitmssp();
   495     0786  120A  118A  277B  120A  118A  	fcall	_waitmssp
   496     078B                     l112:
   497     078B  0008               	return
   498     078C                     __end_of_i2c_start:
   499                           
   500                           	psect	text2
   501     078C                     __ptext2:	
   502 ;; *************** function _i2c_send *****************
   503 ;; Defined at:
   504 ;;		line 139 in file "newmain.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;  dat             1    wreg     unsigned char 
   507 ;; Auto vars:     Size  Location     Type
   508 ;;  dat             1    0[COMMON] unsigned char 
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, status,2, status,0, pclath, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   518 ;;      Params:         0       0       0       0       0
   519 ;;      Locals:         1       0       0       0       0
   520 ;;      Temps:          0       0       0       0       0
   521 ;;      Totals:         1       0       0       0       0
   522 ;;Total ram usage:        1 bytes
   523 ;; Hardware stack levels used: 1
   524 ;; Hardware stack levels required when called: 1
   525 ;; This function calls:
   526 ;;		_waitmssp
   527 ;; This function is called by:
   528 ;;		_main
   529 ;;		_i2c_send_byte
   530 ;;		_i2c_read_byte
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534     078C                     _i2c_send:	
   535                           ;psect for function _i2c_send
   536                           
   537                           
   538                           ;incstack = 0
   539                           ; Regs used in _i2c_send: [wreg+status,2+status,0+pclath+cstack]
   540                           ;i2c_send@dat stored from wreg
   541     078C  00F0               	movwf	i2c_send@dat
   542     078D                     l127:	
   543                           ;newmain.c: 139: void i2c_send(unsigned char dat);newmain.c: 140: {;newmain.c: 141: L1: 
      +                          SSPBUF=dat;
   544                           
   545     078D                     l775:
   546     078D  0870               	movf	i2c_send@dat,w
   547     078E  1283               	bcf	3,5	;RP0=0, select bank0
   548     078F  1303               	bcf	3,6	;RP1=0, select bank0
   549     0790  0093               	movwf	19	;volatile
   550     0791                     l777:
   551                           
   552                           ;newmain.c: 142:     waitmssp();
   553     0791  120A  118A  277B  120A  118A  	fcall	_waitmssp
   554     0796                     l128:	
   555                           ;newmain.c: 143:     while(ACKSTAT){i2c_restart;goto L1;}
   556                           
   557     0796  1683               	bsf	3,5	;RP0=1, select bank1
   558     0797  1303               	bcf	3,6	;RP1=0, select bank1
   559     0798  1B11               	btfsc	17,6	;volatile
   560     0799  2F9B               	goto	u61
   561     079A  2F9C               	goto	u60
   562     079B                     u61:
   563     079B  2F8D               	goto	l127
   564     079C                     u60:
   565     079C                     l131:
   566     079C  0008               	return
   567     079D                     __end_of_i2c_send:
   568                           
   569                           	psect	text3
   570     077B                     __ptext3:	
   571 ;; *************** function _waitmssp *****************
   572 ;; Defined at:
   573 ;;		line 99 in file "newmain.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;		None
   576 ;; Auto vars:     Size  Location     Type
   577 ;;		None
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      void 
   580 ;; Registers used:
   581 ;;		None
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   587 ;;      Params:         0       0       0       0       0
   588 ;;      Locals:         0       0       0       0       0
   589 ;;      Temps:          0       0       0       0       0
   590 ;;      Totals:         0       0       0       0       0
   591 ;;Total ram usage:        0 bytes
   592 ;; Hardware stack levels used: 1
   593 ;; This function calls:
   594 ;;		Nothing
   595 ;; This function is called by:
   596 ;;		_i2c_start
   597 ;;		_i2c_send
   598 ;;		_i2c_stop
   599 ;;		_i2c_restart
   600 ;;		_i2c_ack
   601 ;;		_i2c_nak
   602 ;;		_i2c_read
   603 ;;		_i2c_read_byte
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607     077B                     _waitmssp:	
   608                           ;psect for function _waitmssp
   609                           
   610     077B                     l747:	
   611                           ;incstack = 0
   612                           ; Regs used in _waitmssp: []
   613                           
   614     077B                     l103:	
   615                           ;newmain.c: 101:     while(!SSPIF);
   616                           
   617     077B  1283               	bcf	3,5	;RP0=0, select bank0
   618     077C  1303               	bcf	3,6	;RP1=0, select bank0
   619     077D  1D8C               	btfss	12,3	;volatile
   620     077E  2F80               	goto	u11
   621     077F  2F81               	goto	u10
   622     0780                     u11:
   623     0780  2F7B               	goto	l103
   624     0781                     u10:
   625     0781                     l105:
   626                           
   627                           ;newmain.c: 102:     SSPIF=0;
   628     0781  118C               	bcf	12,3	;volatile
   629     0782                     l106:
   630     0782  0008               	return
   631     0783                     __end_of_waitmssp:
   632                           
   633                           	psect	text4
   634     079D                     __ptext4:	
   635 ;; *************** function _i2c_init *****************
   636 ;; Defined at:
   637 ;;		line 105 in file "newmain.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;		None
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   651 ;;      Params:         0       0       0       0       0
   652 ;;      Locals:         0       0       0       0       0
   653 ;;      Temps:          0       0       0       0       0
   654 ;;      Totals:         0       0       0       0       0
   655 ;;Total ram usage:        0 bytes
   656 ;; Hardware stack levels used: 1
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_main
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664     079D                     _i2c_init:	
   665                           ;psect for function _i2c_init
   666                           
   667     079D                     l755:	
   668                           ;incstack = 0
   669                           ; Regs used in _i2c_init: [wreg]
   670                           
   671                           
   672                           ;newmain.c: 107:     TRISC3=TRISC4=1;
   673     079D  1683               	bsf	3,5	;RP0=1, select bank1
   674     079E  1303               	bcf	3,6	;RP1=0, select bank1
   675     079F  1607               	bsf	7,4	;volatile
   676     07A0  1A07               	btfsc	7,4	;volatile
   677     07A1  2FA3               	goto	u41
   678     07A2  2FA7               	goto	u40
   679     07A3                     u41:
   680     07A3  1683               	bsf	3,5	;RP0=1, select bank1
   681     07A4  1303               	bcf	3,6	;RP1=0, select bank1
   682     07A5  1587               	bsf	7,3	;volatile
   683     07A6  2FAA               	goto	u54
   684     07A7                     u40:
   685     07A7  1683               	bsf	3,5	;RP0=1, select bank1
   686     07A8  1303               	bcf	3,6	;RP1=0, select bank1
   687     07A9  1187               	bcf	7,3	;volatile
   688     07AA                     u54:
   689     07AA                     l757:
   690                           
   691                           ;newmain.c: 108:     SSPCON=0x28;
   692     07AA  3028               	movlw	40
   693     07AB  1283               	bcf	3,5	;RP0=0, select bank0
   694     07AC  1303               	bcf	3,6	;RP1=0, select bank0
   695     07AD  0094               	movwf	20	;volatile
   696                           
   697                           ;newmain.c: 109:     SSPADD=((100000/4)/100)-1;
   698     07AE  30F9               	movlw	249
   699     07AF  1683               	bsf	3,5	;RP0=1, select bank1
   700     07B0  1303               	bcf	3,6	;RP1=0, select bank1
   701     07B1  0093               	movwf	19	;volatile
   702     07B2                     l109:
   703     07B2  0008               	return
   704     07B3                     __end_of_i2c_init:
   705     007E                     btemp	set	126	;btemp
   706     007E                     wtemp0	set	126
   707                           
   708                           	psect	config
   709                           
   710                           ;Config register CONFIG @ 0x2007
   711                           ;	Oscillator Selection bits
   712                           ;	FOSC = HS, HS oscillator
   713                           ;	Watchdog Timer Enable bit
   714                           ;	WDTE = OFF, WDT disabled
   715                           ;	Power-up Timer Enable bit
   716                           ;	PWRTE = OFF, PWRT disabled
   717                           ;	Brown-out Reset Enable bit
   718                           ;	BOREN = ON, BOR enabled
   719                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   720                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   721                           ;	Data EEPROM Memory Code Protection bit
   722                           ;	CPD = OFF, Data EEPROM code protection off
   723                           ;	Flash Program Memory Write Enable bits
   724                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   725                           ;	In-Circuit Debugger Mode bit
   726                           ;	DEBUG = 0x1, unprogrammed default
   727                           ;	Flash Program Memory Code Protection bit
   728                           ;	CP = OFF, Code protection off
   729     2007                     	org	8199
   730     2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_i2c_send

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      15
                                              1 COMMON     3     3      0
                           _i2c_init
                           _i2c_send
                          _i2c_start
 ---------------------------------------------------------------------------------
 (1) _i2c_start                                            0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (1) _i2c_send                                             1     1      0      15
                                              0 COMMON     1     1      0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _waitmssp                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_init
   _i2c_send
     _waitmssp
   _i2c_start
     _waitmssp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      4       6       1       42.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       6      12        0.0%
ABS                  0      0       6       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Jun 04 12:40:08 2024

                     u10 0781                       u11 0780                       u40 07A7  
                     u41 07A3                       u60 079C                       u61 079B  
                     u54 07AA                      l103 077B                      l112 078B  
                    l105 0781                      l106 0782                      l131 079C  
                    l109 07B2                      l127 078D                      l128 0796  
                    l761 0786                      l755 079D                      l747 077B  
                    l757 07AA                      l775 078D                      l759 0783  
                    l871 07B6                      l777 0791                      l881 07CF  
                    l873 07BB                      l883 07DC                      l875 07C0  
                    l885 07DF                      l877 07C4                      l869 07B3  
                    l879 07C9                      u147 07D5                      u157 07E5  
                    _PEN 048A                      _SEN 0488                     _RCEN 048B  
                   _RSEN 0489                     _main 07B3                     btemp 007E  
                   start 0000                    ?_main 0070                    _ACKEN 048C  
                  _ACKDT 048D                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _SSPIF 0063  
            i2c_send@dat 0070                    _nRBPU 040F                    status 0003  
                  wtemp0 007E          __initialization 07F0             __end_of_main 07F0  
       __end_of_i2c_init 07B3         __end_of_i2c_send 079D                   ??_main 0071  
                 _SSPADD 0093                   _TRISC3 043B                   _TRISC4 043C  
                 _SSPCON 0014                   _SSPBUF 0013             __pdataCOMMON 0074  
       __end_of_waitmssp 0783  __end_of__initialization 07FC           __pcstackCOMMON 0070  
      __end_of_i2c_start 078C                ?_i2c_init 0070                ?_i2c_send 0070  
             __pmaintext 07B3                  _ACKSTAT 048E                  _SSPCON2 0091  
                _SSPSTAT 0094               ??_i2c_init 0070               ??_i2c_send 0070  
              ?_waitmssp 0070                  __ptext1 0783                  __ptext2 078C  
                __ptext3 077B                  __ptext4 079D     end_of_initialization 07FC  
             ??_waitmssp 0070            __pidataCOMMON 0779      start_initialization 07F0  
              _i2c_start 0783                ___latbits 0002               ?_i2c_start 0070  
            ??_i2c_start 0070                _write_cmd 0075                 _i2c_init 079D  
               _i2c_send 078C                 _read_cmd 0074                 _waitmssp 077B  
