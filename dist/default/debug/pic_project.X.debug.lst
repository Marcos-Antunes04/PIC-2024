

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Jun 07 18:24:27 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31     0000                     
    32                           ; Generated 22/03/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F877A Definitions
    64                           ; 
    65                           ; SFR Addresses
    66     0000                     	;# 
    67     0001                     	;# 
    68     0002                     	;# 
    69     0003                     	;# 
    70     0004                     	;# 
    71     0005                     	;# 
    72     0006                     	;# 
    73     0007                     	;# 
    74     0008                     	;# 
    75     0009                     	;# 
    76     000A                     	;# 
    77     000B                     	;# 
    78     000C                     	;# 
    79     000D                     	;# 
    80     000E                     	;# 
    81     000E                     	;# 
    82     000F                     	;# 
    83     0010                     	;# 
    84     0011                     	;# 
    85     0012                     	;# 
    86     0013                     	;# 
    87     0014                     	;# 
    88     0015                     	;# 
    89     0015                     	;# 
    90     0016                     	;# 
    91     0017                     	;# 
    92     0018                     	;# 
    93     0019                     	;# 
    94     001A                     	;# 
    95     001B                     	;# 
    96     001B                     	;# 
    97     001C                     	;# 
    98     001D                     	;# 
    99     001E                     	;# 
   100     001F                     	;# 
   101     0081                     	;# 
   102     0085                     	;# 
   103     0086                     	;# 
   104     0087                     	;# 
   105     0088                     	;# 
   106     0089                     	;# 
   107     008C                     	;# 
   108     008D                     	;# 
   109     008E                     	;# 
   110     0091                     	;# 
   111     0092                     	;# 
   112     0093                     	;# 
   113     0094                     	;# 
   114     0098                     	;# 
   115     0099                     	;# 
   116     009C                     	;# 
   117     009D                     	;# 
   118     009E                     	;# 
   119     009F                     	;# 
   120     010C                     	;# 
   121     010D                     	;# 
   122     010E                     	;# 
   123     010F                     	;# 
   124     018C                     	;# 
   125     018D                     	;# 
   126     0000                     	;# 
   127     0001                     	;# 
   128     0002                     	;# 
   129     0003                     	;# 
   130     0004                     	;# 
   131     0005                     	;# 
   132     0006                     	;# 
   133     0007                     	;# 
   134     0008                     	;# 
   135     0009                     	;# 
   136     000A                     	;# 
   137     000B                     	;# 
   138     000C                     	;# 
   139     000D                     	;# 
   140     000E                     	;# 
   141     000E                     	;# 
   142     000F                     	;# 
   143     0010                     	;# 
   144     0011                     	;# 
   145     0012                     	;# 
   146     0013                     	;# 
   147     0014                     	;# 
   148     0015                     	;# 
   149     0015                     	;# 
   150     0016                     	;# 
   151     0017                     	;# 
   152     0018                     	;# 
   153     0019                     	;# 
   154     001A                     	;# 
   155     001B                     	;# 
   156     001B                     	;# 
   157     001C                     	;# 
   158     001D                     	;# 
   159     001E                     	;# 
   160     001F                     	;# 
   161     0081                     	;# 
   162     0085                     	;# 
   163     0086                     	;# 
   164     0087                     	;# 
   165     0088                     	;# 
   166     0089                     	;# 
   167     008C                     	;# 
   168     008D                     	;# 
   169     008E                     	;# 
   170     0091                     	;# 
   171     0092                     	;# 
   172     0093                     	;# 
   173     0094                     	;# 
   174     0098                     	;# 
   175     0099                     	;# 
   176     009C                     	;# 
   177     009D                     	;# 
   178     009E                     	;# 
   179     009F                     	;# 
   180     010C                     	;# 
   181     010D                     	;# 
   182     010E                     	;# 
   183     010F                     	;# 
   184     018C                     	;# 
   185     018D                     	;# 
   186                           
   187                           	psect	strings
   188     0003                     __pstrings:
   189     0003                     stringtab:
   190     0003                     __stringtab:
   191                           
   192                           ;	String table - string pointers are 1 byte each
   193     0003  1BFF               	btfsc	btemp+1,7
   194     0004  280D               	ljmp	stringcode
   195     0005  1383               	bcf	3,7
   196     0006  187F               	btfsc	btemp+1,0
   197     0007  1783               	bsf	3,7
   198     0008  0800               	movf	0,w
   199     0009  0A84               	incf	4,f
   200     000A  1903               	skipnz
   201     000B  0AFF               	incf	btemp+1,f
   202     000C  0008               	return
   203     000D                     stringcode:
   204     000D                     stringdir:
   205     000D  3000               	movlw	high stringdir
   206     000E  008A               	movwf	10
   207     000F  0804               	movf	4,w
   208     0010  0A84               	incf	4,f
   209     0011  0782               	addwf	2,f
   210     0012                     __stringbase:
   211     0012  3400               	retlw	0
   212     0013                     __end_of__stringtab:
   213     0013                     _hexpowers:
   214     0013  3401               	retlw	1
   215     0014  3400               	retlw	0
   216     0015  3410               	retlw	16
   217     0016  3400               	retlw	0
   218     0017  3400               	retlw	0
   219     0018  3401               	retlw	1
   220     0019  3400               	retlw	0
   221     001A  3410               	retlw	16
   222     001B                     __end_of_hexpowers:
   223     0008                     _PORTD	set	8
   224     001E                     _ADRESH	set	30
   225     001F                     _ADCON0bits	set	31
   226     001F                     _ADCON0	set	31
   227     0013                     _SSPBUF	set	19
   228     0014                     _SSPCON	set	20
   229     0006                     _PORTB	set	6
   230     00FA                     _GO_DONE	set	250
   231     0063                     _SSPIF	set	99
   232     0088                     _TRISD	set	136
   233     0086                     _TRISB	set	134
   234     0085                     _TRISA	set	133
   235     009E                     _ADRESL	set	158
   236     009F                     _ADCON1	set	159
   237     0091                     _SSPCON2bits	set	145
   238     0087                     _TRISCbits	set	135
   239     0093                     _SSPADD	set	147
   240     0094                     _SSPSTAT	set	148
   241     0091                     _SSPCON2	set	145
   242     048E                     _ACKSTAT	set	1166
   243     001B                     STR_5:
   244     001B  3430               	retlw	48	;'0'
   245     001C  3431               	retlw	49	;'1'
   246     001D  3432               	retlw	50	;'2'
   247     001E  3433               	retlw	51	;'3'
   248     001F  3434               	retlw	52	;'4'
   249     0020  3435               	retlw	53	;'5'
   250     0021  3436               	retlw	54	;'6'
   251     0022  3437               	retlw	55	;'7'
   252     0023  3438               	retlw	56	;'8'
   253     0024  3439               	retlw	57	;'9'
   254     0025  3461               	retlw	97	;'a'
   255     0026  3462               	retlw	98	;'b'
   256     0027  3463               	retlw	99	;'c'
   257     0028  3464               	retlw	100	;'d'
   258     0029  3465               	retlw	101	;'e'
   259     002A  3466               	retlw	102	;'f'
   260     002B  3400               	retlw	0
   261     002C                     STR_3:
   262     002C  3441               	retlw	65	;'A'
   263     002D  3443               	retlw	67	;'C'
   264     002E  3445               	retlw	69	;'E'
   265     002F  344C               	retlw	76	;'L'
   266     0030  3445               	retlw	69	;'E'
   267     0031  3452               	retlw	82	;'R'
   268     0032  344F               	retlw	79	;'O'
   269     0033  344D               	retlw	77	;'M'
   270     0034  3445               	retlw	69	;'E'
   271     0035  3454               	retlw	84	;'T'
   272     0036  3452               	retlw	82	;'R'
   273     0037  344F               	retlw	79	;'O'
   274     0038  3400               	retlw	0
   275     0039                     STR_2:
   276     0039  3446               	retlw	70	;'F'
   277     003A  3472               	retlw	114	;'r'
   278     003B  346F               	retlw	111	;'o'
   279     003C  346D               	retlw	109	;'m'
   280     003D  3420               	retlw	32	;' '
   281     003E  3441               	retlw	65	;'A'
   282     003F  346E               	retlw	110	;'n'
   283     0040  3474               	retlw	116	;'t'
   284     0041  3475               	retlw	117	;'u'
   285     0042  346E               	retlw	110	;'n'
   286     0043  3465               	retlw	101	;'e'
   287     0044  3473               	retlw	115	;'s'
   288     0045  3400               	retlw	0
   289     0046                     STR_1:
   290     0046  3448               	retlw	72	;'H'
   291     0047  3465               	retlw	101	;'e'
   292     0048  346C               	retlw	108	;'l'
   293     0049  346C               	retlw	108	;'l'
   294     004A  346F               	retlw	111	;'o'
   295     004B  3420               	retlw	32	;' '
   296     004C  3457               	retlw	87	;'W'
   297     004D  346F               	retlw	111	;'o'
   298     004E  3472               	retlw	114	;'r'
   299     004F  346C               	retlw	108	;'l'
   300     0050  3464               	retlw	100	;'d'
   301     0051  3400               	retlw	0
   302     0052                     STR_4:
   303     0052  3428               	retlw	40	;'('
   304     0053  346E               	retlw	110	;'n'
   305     0054  3475               	retlw	117	;'u'
   306     0055  346C               	retlw	108	;'l'
   307     0056  346C               	retlw	108	;'l'
   308     0057  3429               	retlw	41	;')'
   309     0058  3400               	retlw	0
   310                           
   311                           	psect	cinit
   312     07F8                     start_initialization:	
   313                           ; #config settings
   314                           
   315     07F8                     __initialization:
   316                           
   317                           ; Clear objects allocated to BANK0
   318     07F8  1283               	bcf	3,5	;RP0=0, select bank0
   319     07F9  1303               	bcf	3,6	;RP1=0, select bank0
   320     07FA  01BA               	clrf	__pbssBANK0& (0+127)
   321     07FB  01BB               	clrf	(__pbssBANK0+1)& (0+127)
   322     07FC                     end_of_initialization:	
   323                           ;End of C runtime variable initialization code
   324                           
   325     07FC                     __end_of__initialization:
   326     07FC  0183               	clrf	3
   327     07FD  120A  118A  2BEE   	ljmp	_main	;jump to C main() function
   328                           
   329                           	psect	bssBANK0
   330     003A                     __pbssBANK0:
   331     003A                     _adc_value:
   332     003A                     	ds	2
   333                           
   334                           	psect	cstackCOMMON
   335     0070                     __pcstackCOMMON:
   336     0070                     ?_isdigit:
   337     0070                     ??_isdigit:	
   338                           ; 1 bit 
   339                           
   340     0070                     ?_I2C_IDLE:	
   341                           ; 1 bytes @ 0x0
   342                           
   343     0070                     ??_I2C_IDLE:	
   344                           ; 1 bytes @ 0x0
   345                           
   346     0070                     ?_I2C_Start:	
   347                           ; 1 bytes @ 0x0
   348                           
   349     0070                     ??_I2C_Start:	
   350                           ; 1 bytes @ 0x0
   351                           
   352     0070                     ?_I2C_Stop:	
   353                           ; 1 bytes @ 0x0
   354                           
   355     0070                     ??_I2C_Stop:	
   356                           ; 1 bytes @ 0x0
   357                           
   358     0070                     ?_I2C_Write:	
   359                           ; 1 bytes @ 0x0
   360                           
   361     0070                     ??_I2C_Write:	
   362                           ; 1 bytes @ 0x0
   363                           
   364     0070                     ?_ADC_Setup:	
   365                           ; 1 bytes @ 0x0
   366                           
   367     0070                     ??_ADC_Setup:	
   368                           ; 1 bytes @ 0x0
   369                           
   370     0070                     ?_lcd_send_cmd:	
   371                           ; 1 bytes @ 0x0
   372                           
   373     0070                     ?_lcd_send_data:	
   374                           ; 1 bytes @ 0x0
   375                           
   376     0070                     ?_lcd_clear:	
   377                           ; 1 bytes @ 0x0
   378                           
   379     0070                     ?_lcd_init:	
   380                           ; 1 bytes @ 0x0
   381                           
   382     0070                     ?_main:	
   383                           ; 1 bytes @ 0x0
   384                           
   385     0070                     ?___bmul:	
   386                           ; 1 bytes @ 0x0
   387                           
   388     0070                     ?___wmul:	
   389                           ; 1 bytes @ 0x0
   390                           
   391     0070                     ?___lwdiv:	
   392                           ; 2 bytes @ 0x0
   393                           
   394     0070                     ?___lldiv:	
   395                           ; 2 bytes @ 0x0
   396                           
   397     0070                     I2C_Write@Data:	
   398                           ; 4 bytes @ 0x0
   399                           
   400     0070                     I2C_Multi_Send@cmd:	
   401                           ; 1 bytes @ 0x0
   402                           
   403     0070                     ___bmul@multiplicand:	
   404                           ; 1 bytes @ 0x0
   405                           
   406     0070                     _isdigit$708:	
   407                           ; 1 bytes @ 0x0
   408                           
   409     0070                     ___wmul@multiplier:	
   410                           ; 1 bytes @ 0x0
   411                           
   412     0070                     ___lwdiv@divisor:	
   413                           ; 2 bytes @ 0x0
   414                           
   415     0070                     ___lldiv@divisor:	
   416                           ; 2 bytes @ 0x0
   417                           
   418                           
   419                           ; 4 bytes @ 0x0
   420     0070                     	ds	1
   421     0071                     ?_I2C_Multi_Send:
   422     0071                     ??___bmul:	
   423                           ; 1 bytes @ 0x1
   424                           
   425     0071                     I2C_Multi_Send@address:	
   426                           ; 1 bytes @ 0x1
   427                           
   428     0071                     ___bmul@product:	
   429                           ; 1 bytes @ 0x1
   430                           
   431     0071                     isdigit@c:	
   432                           ; 1 bytes @ 0x1
   433                           
   434                           
   435                           ; 1 bytes @ 0x1
   436     0071                     	ds	1
   437     0072                     I2C_Multi_Send@data:
   438     0072                     ___bmul@multiplier:	
   439                           ; 1 bytes @ 0x2
   440                           
   441     0072                     ___wmul@multiplicand:	
   442                           ; 1 bytes @ 0x2
   443                           
   444     0072                     ___lwdiv@dividend:	
   445                           ; 2 bytes @ 0x2
   446                           
   447                           
   448                           ; 2 bytes @ 0x2
   449     0072                     	ds	1
   450     0073                     I2C_Multi_Send@size:
   451                           
   452                           ; 2 bytes @ 0x3
   453     0073                     	ds	1
   454     0074                     ??___wmul:
   455     0074                     ??___lwdiv:	
   456                           ; 1 bytes @ 0x4
   457                           
   458     0074                     ___wmul@product:	
   459                           ; 1 bytes @ 0x4
   460                           
   461     0074                     ___lwdiv@quotient:	
   462                           ; 2 bytes @ 0x4
   463                           
   464     0074                     ___lldiv@dividend:	
   465                           ; 2 bytes @ 0x4
   466                           
   467                           
   468                           ; 4 bytes @ 0x4
   469     0074                     	ds	1
   470     0075                     ??_I2C_Multi_Send:
   471                           
   472                           ; 1 bytes @ 0x5
   473     0075                     	ds	1
   474     0076                     I2C_Multi_Send@send:
   475     0076                     ___lwdiv@counter:	
   476                           ; 1 bytes @ 0x6
   477                           
   478                           
   479                           ; 1 bytes @ 0x6
   480     0076                     	ds	1
   481     0077                     ?_sprintf:
   482     0077                     sprintf@f:	
   483                           ; 2 bytes @ 0x7
   484                           
   485     0077                     I2C_Multi_Send@n:	
   486                           ; 1 bytes @ 0x7
   487                           
   488                           
   489                           ; 2 bytes @ 0x7
   490     0077                     	ds	1
   491     0078                     ??_sprintf:
   492     0078                     ??___lldiv:	
   493                           ; 1 bytes @ 0x8
   494                           
   495                           
   496                           ; 1 bytes @ 0x8
   497     0078                     	ds	1
   498     0079                     ??_lcd_send_cmd:
   499     0079                     ??_lcd_send_data:	
   500                           ; 1 bytes @ 0x9
   501                           
   502     0079                     ___lldiv@quotient:	
   503                           ; 1 bytes @ 0x9
   504                           
   505                           
   506                           ; 4 bytes @ 0x9
   507     0079                     	ds	3
   508     007C                     ??_lcd_clear:
   509     007C                     ??_lcd_put_cur:	
   510                           ; 1 bytes @ 0xC
   511                           
   512     007C                     ?_lcd_send_string:	
   513                           ; 1 bytes @ 0xC
   514                           
   515     007C                     lcd_clear@i:	
   516                           ; 1 bytes @ 0xC
   517                           
   518     007C                     lcd_send_string@str:	
   519                           ; 2 bytes @ 0xC
   520                           
   521                           
   522                           ; 2 bytes @ 0xC
   523     007C                     	ds	1
   524     007D                     ___lldiv@counter:
   525                           
   526                           ; 1 bytes @ 0xD
   527     007D                     	ds	1
   528     007E                     ??_lcd_send_string:
   529                           
   530                           	psect	cstackBANK0
   531     0020                     __pcstackBANK0:	
   532                           ; 1 bytes @ 0xE
   533                           
   534     0020                     ?_I2C_Master_Init:
   535     0020                     sprintf@idx:	
   536                           ; 1 bytes @ 0x0
   537                           
   538     0020                     I2C_Master_Init@c:	
   539                           ; 1 bytes @ 0x0
   540                           
   541     0020                     lcd_send_cmd@data_t:	
   542                           ; 4 bytes @ 0x0
   543                           
   544     0020                     lcd_send_data@data_t:	
   545                           ; 4 bytes @ 0x0
   546                           
   547                           
   548                           ; 4 bytes @ 0x0
   549     0020                     	ds	1
   550     0021                     sprintf@ap:
   551                           
   552                           ; 1 bytes @ 0x1
   553     0021                     	ds	1
   554     0022                     sprintf@val:
   555                           
   556                           ; 2 bytes @ 0x2
   557     0022                     	ds	2
   558     0024                     ??_I2C_Master_Init:
   559     0024                     lcd_send_cmd@cmd:	
   560                           ; 1 bytes @ 0x4
   561                           
   562     0024                     lcd_send_data@data:	
   563                           ; 1 bytes @ 0x4
   564                           
   565     0024                     sprintf@cp:	
   566                           ; 1 bytes @ 0x4
   567                           
   568                           
   569                           ; 2 bytes @ 0x4
   570     0024                     	ds	1
   571     0025                     lcd_send_cmd@data_u:
   572     0025                     lcd_send_data@data_u:	
   573                           ; 1 bytes @ 0x5
   574                           
   575                           
   576                           ; 1 bytes @ 0x5
   577     0025                     	ds	1
   578     0026                     lcd_send_cmd@data_l:
   579     0026                     lcd_send_data@data_l:	
   580                           ; 1 bytes @ 0x6
   581                           
   582     0026                     sprintf@flag:	
   583                           ; 1 bytes @ 0x6
   584                           
   585                           
   586                           ; 2 bytes @ 0x6
   587     0026                     	ds	1
   588     0027                     ?_lcd_put_cur:
   589     0027                     ??_lcd_init:	
   590                           ; 1 bytes @ 0x7
   591                           
   592     0027                     lcd_put_cur@row:	
   593                           ; 1 bytes @ 0x7
   594                           
   595                           
   596                           ; 2 bytes @ 0x7
   597     0027                     	ds	1
   598     0028                     sprintf@len:
   599                           
   600                           ; 2 bytes @ 0x8
   601     0028                     	ds	1
   602     0029                     lcd_put_cur@col:
   603                           
   604                           ; 2 bytes @ 0x9
   605     0029                     	ds	1
   606     002A                     sprintf@sp:
   607                           
   608                           ; 1 bytes @ 0xA
   609     002A                     	ds	1
   610     002B                     sprintf@width:
   611                           
   612                           ; 2 bytes @ 0xB
   613     002B                     	ds	2
   614     002D                     sprintf@prec:
   615                           
   616                           ; 1 bytes @ 0xD
   617     002D                     	ds	1
   618     002E                     sprintf@c:
   619                           
   620                           ; 1 bytes @ 0xE
   621     002E                     	ds	1
   622     002F                     ??_main:
   623                           
   624                           ; 1 bytes @ 0xF
   625     002F                     	ds	3
   626     0032                     main@str1:
   627                           
   628                           ; 4 bytes @ 0x12
   629     0032                     	ds	4
   630     0036                     main@num:
   631                           
   632                           ; 4 bytes @ 0x16
   633     0036                     	ds	4
   634                           
   635                           	psect	maintext
   636     03EE                     __pmaintext:	
   637 ;;
   638 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   639 ;;
   640 ;; *************** function _main *****************
   641 ;; Defined at:
   642 ;;		line 209 in file "newmain.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;  str1            4   18[BANK0 ] unsigned char [4]
   647 ;;  num             4   22[BANK0 ] float 
   648 ;;  str2            4    0        unsigned char [4]
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : B00/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   658 ;;      Params:         0       0       0       0       0
   659 ;;      Locals:         0       8       0       0       0
   660 ;;      Temps:          0       3       0       0       0
   661 ;;      Totals:         0      11       0       0       0
   662 ;;Total ram usage:       11 bytes
   663 ;; Hardware stack levels required when called: 5
   664 ;; This function calls:
   665 ;;		_ADC_Setup
   666 ;;		_I2C_Master_Init
   667 ;;		_lcd_clear
   668 ;;		_lcd_init
   669 ;;		_lcd_put_cur
   670 ;;		_lcd_send_string
   671 ;;		_sprintf
   672 ;; This function is called by:
   673 ;;		Startup code after reset
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677     03EE                     _main:	
   678                           ;psect for function _main
   679                           
   680     03EE                     l1851:	
   681                           ;incstack = 0
   682                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   683                           
   684                           
   685                           ;newmain.c: 212: 
   686     03EE  30FF               	movlw	255
   687     03EF  1683               	bsf	3,5	;RP0=1, select bank1
   688     03F0  1303               	bcf	3,6	;RP1=0, select bank1
   689     03F1  0085               	movwf	5	;volatile
   690     03F2                     l1853:
   691                           
   692                           ;newmain.c: 213:   _delay((unsigned long)((2000)*(20000000/4000.0)));
   693     03F2  0186               	clrf	6	;volatile
   694     03F3                     l1855:
   695                           
   696                           ;newmain.c: 214: 
   697     03F3  0188               	clrf	8	;volatile
   698     03F4                     l1857:
   699                           
   700                           ;newmain.c: 215:   lcd_put_cur(1,0);
   701     03F4  1283               	bcf	3,5	;RP0=0, select bank0
   702     03F5  1303               	bcf	3,6	;RP1=0, select bank0
   703     03F6  0188               	clrf	8	;volatile
   704     03F7                     l1859:
   705                           
   706                           ;newmain.c: 216: 
   707     03F7  0186               	clrf	6	;volatile
   708     03F8                     l1861:
   709                           
   710                           ;newmain.c: 218: 
   711     03F8  3000               	movlw	0
   712     03F9  00A3               	movwf	I2C_Master_Init@c+3
   713     03FA  3001               	movlw	1
   714     03FB  00A2               	movwf	I2C_Master_Init@c+2
   715     03FC  3086               	movlw	134
   716     03FD  00A1               	movwf	I2C_Master_Init@c+1
   717     03FE  30A0               	movlw	160
   718     03FF  00A0               	movwf	I2C_Master_Init@c
   719     0400  120A  118A  2284  120A  118A  	fcall	_I2C_Master_Init
   720     0405                     l1863:
   721                           
   722                           ;newmain.c: 220: 
   723     0405  120A  118A  216B  120A  118A  	fcall	_ADC_Setup
   724     040A                     l1865:
   725                           
   726                           ;newmain.c: 222:       sprintf(str1,&num);
   727     040A  3044               	movlw	68
   728     040B  1283               	bcf	3,5	;RP0=0, select bank0
   729     040C  1303               	bcf	3,6	;RP1=0, select bank0
   730     040D  00B9               	movwf	main@num+3
   731     040E  3080               	movlw	128
   732     040F  00B8               	movwf	main@num+2
   733     0410  3000               	movlw	0
   734     0411  00B7               	movwf	main@num+1
   735     0412  3000               	movlw	0
   736     0413  00B6               	movwf	main@num
   737     0414                     l1867:
   738                           
   739                           ;newmain.c: 223: ;newmain.c: 224:       lcd_put_cur(0,0);;newmain.c: 225:       lcd_send
      +                          _string("ACELEROMETRO");
   740     0414  3033               	movlw	51
   741     0415  1283               	bcf	3,5	;RP0=0, select bank0
   742     0416  1303               	bcf	3,6	;RP1=0, select bank0
   743     0417  00B1               	movwf	??_main+2
   744     0418  30BB               	movlw	187
   745     0419  00B0               	movwf	??_main+1
   746     041A  30DF               	movlw	223
   747     041B  00AF               	movwf	??_main
   748     041C                     u1267:
   749     041C  0BAF               	decfsz	??_main,f
   750     041D  2C1C               	goto	u1267
   751     041E  0BB0               	decfsz	??_main+1,f
   752     041F  2C1C               	goto	u1267
   753     0420  0BB1               	decfsz	??_main+2,f
   754     0421  2C1C               	goto	u1267
   755     0422                     l1869:
   756                           
   757                           ;newmain.c: 227:       lcd_send_string(str1);
   758     0422  120A  118A  2493  120A  118A  	fcall	_lcd_init
   759     0427                     l1871:
   760                           
   761                           ;newmain.c: 228:   }
   762     0427  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   763     0428  00FC               	movwf	lcd_send_string@str
   764     0429  3080               	movlw	128
   765     042A  00FD               	movwf	lcd_send_string@str+1
   766     042B  120A  118A  222F  120A  118A  	fcall	_lcd_send_string
   767     0430  3033               	movlw	51
   768     0431  1283               	bcf	3,5	;RP0=0, select bank0
   769     0432  1303               	bcf	3,6	;RP1=0, select bank0
   770     0433  00B1               	movwf	??_main+2
   771     0434  30BB               	movlw	187
   772     0435  00B0               	movwf	??_main+1
   773     0436  30DF               	movlw	223
   774     0437  00AF               	movwf	??_main
   775     0438                     u1277:
   776     0438  0BAF               	decfsz	??_main,f
   777     0439  2C38               	goto	u1277
   778     043A  0BB0               	decfsz	??_main+1,f
   779     043B  2C38               	goto	u1277
   780     043C  0BB1               	decfsz	??_main+2,f
   781     043D  2C38               	goto	u1277
   782     043E                     l1873:
   783     043E  3001               	movlw	1
   784     043F  1283               	bcf	3,5	;RP0=0, select bank0
   785     0440  1303               	bcf	3,6	;RP1=0, select bank0
   786     0441  00A7               	movwf	lcd_put_cur@row
   787     0442  3000               	movlw	0
   788     0443  00A8               	movwf	lcd_put_cur@row+1
   789     0444  3000               	movlw	0
   790     0445  00A9               	movwf	lcd_put_cur@col
   791     0446  00AA               	movwf	lcd_put_cur@col+1
   792     0447  120A  118A  21CA  120A  118A  	fcall	_lcd_put_cur
   793     044C                     l1875:
   794     044C  3027               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   795     044D  00FC               	movwf	lcd_send_string@str
   796     044E  3080               	movlw	128
   797     044F  00FD               	movwf	lcd_send_string@str+1
   798     0450  120A  118A  222F  120A  118A  	fcall	_lcd_send_string
   799     0455                     l1877:
   800     0455  120A  118A  21E8  120A  118A  	fcall	_lcd_clear
   801     045A                     l1879:
   802     045A  3036               	movlw	(low (main@num| 0))& (0+255)
   803     045B  00F7               	movwf	sprintf@f
   804     045C  3032               	movlw	(low (main@str1| 0))& (0+255)
   805     045D  120A  118A  253B  120A  118A  	fcall	_sprintf
   806     0462                     l1881:
   807     0462  3000               	movlw	0
   808     0463  1283               	bcf	3,5	;RP0=0, select bank0
   809     0464  1303               	bcf	3,6	;RP1=0, select bank0
   810     0465  00A7               	movwf	lcd_put_cur@row
   811     0466  00A8               	movwf	lcd_put_cur@row+1
   812     0467  3000               	movlw	0
   813     0468  00A9               	movwf	lcd_put_cur@col
   814     0469  00AA               	movwf	lcd_put_cur@col+1
   815     046A  120A  118A  21CA  120A  118A  	fcall	_lcd_put_cur
   816     046F                     l1883:
   817     046F  301A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   818     0470  00FC               	movwf	lcd_send_string@str
   819     0471  3080               	movlw	128
   820     0472  00FD               	movwf	lcd_send_string@str+1
   821     0473  120A  118A  222F  120A  118A  	fcall	_lcd_send_string
   822     0478                     l1885:
   823     0478  3001               	movlw	1
   824     0479  1283               	bcf	3,5	;RP0=0, select bank0
   825     047A  1303               	bcf	3,6	;RP1=0, select bank0
   826     047B  00A7               	movwf	lcd_put_cur@row
   827     047C  3000               	movlw	0
   828     047D  00A8               	movwf	lcd_put_cur@row+1
   829     047E  3000               	movlw	0
   830     047F  00A9               	movwf	lcd_put_cur@col
   831     0480  00AA               	movwf	lcd_put_cur@col+1
   832     0481  120A  118A  21CA  120A  118A  	fcall	_lcd_put_cur
   833     0486                     l1887:
   834     0486  3032               	movlw	(low (main@str1| 0))& (0+255)
   835     0487  00FC               	movwf	lcd_send_string@str
   836     0488  3000               	movlw	0
   837     0489  00FD               	movwf	lcd_send_string@str+1
   838     048A  120A  118A  222F  120A  118A  	fcall	_lcd_send_string
   839     048F  2C5A               	goto	l1879
   840     0490  120A  118A  2800   	ljmp	start
   841     0493                     __end_of_main:
   842                           
   843                           	psect	text1
   844     053B                     __ptext1:	
   845 ;; *************** function _sprintf *****************
   846 ;; Defined at:
   847 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  sp              1    wreg     PTR unsigned char 
   850 ;;		 -> main@str1(4), 
   851 ;;  f               1    7[COMMON] PTR const unsigned char 
   852 ;;		 -> main@num(4), 
   853 ;; Auto vars:     Size  Location     Type
   854 ;;  sp              1   10[BANK0 ] PTR unsigned char 
   855 ;;		 -> main@str1(4), 
   856 ;;  idx             1    0[BANK0 ] unsigned char 
   857 ;;  tmpval          4    0        struct .
   858 ;;  width           2   11[BANK0 ] int 
   859 ;;  len             2    8[BANK0 ] unsigned int 
   860 ;;  flag            2    6[BANK0 ] unsigned short 
   861 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
   862 ;;		 -> STR_4(7), sprintf@c(1), ?_sprintf(2), 
   863 ;;  val             2    2[BANK0 ] unsigned int 
   864 ;;  c               1   14[BANK0 ] unsigned char 
   865 ;;  prec            1   13[BANK0 ] char 
   866 ;;  ap              1    1[BANK0 ] PTR void [1]
   867 ;;		 -> ?_sprintf(2), 
   868 ;; Return value:  Size  Location     Type
   869 ;;                  2    7[COMMON] int 
   870 ;; Registers used:
   871 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   877 ;;      Params:         1       0       0       0       0
   878 ;;      Locals:         0      15       0       0       0
   879 ;;      Temps:          3       0       0       0       0
   880 ;;      Totals:         4      15       0       0       0
   881 ;;Total ram usage:       19 bytes
   882 ;; Hardware stack levels used: 1
   883 ;; Hardware stack levels required when called: 1
   884 ;; This function calls:
   885 ;;		___bmul
   886 ;;		___lwdiv
   887 ;;		___wmul
   888 ;;		_isdigit
   889 ;; This function is called by:
   890 ;;		_main
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894     053B                     _sprintf:	
   895                           ;psect for function _sprintf
   896                           
   897                           
   898                           ;incstack = 0
   899                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   900                           ;sprintf@sp stored from wreg
   901     053B  1283               	bcf	3,5	;RP0=0, select bank0
   902     053C  1303               	bcf	3,6	;RP1=0, select bank0
   903     053D  00AA               	movwf	sprintf@sp
   904     053E                     l1649:
   905                           
   906                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
   907     053E  3078               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   908     053F  00A1               	movwf	sprintf@ap
   909                           
   910                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   911     0540  2FE6               	goto	l1817
   912     0541                     l1651:
   913                           
   914                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   915     0541  3025               	movlw	37
   916     0542  062E               	xorwf	sprintf@c,w
   917     0543  1903               	btfsc	3,2
   918     0544  2D46               	goto	u961
   919     0545  2D47               	goto	u960
   920     0546                     u961:
   921     0546  2D50               	goto	l1657
   922     0547                     u960:
   923     0547                     l1653:
   924                           
   925                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   926     0547  082A               	movf	sprintf@sp,w
   927     0548  0084               	movwf	4
   928     0549  082E               	movf	sprintf@c,w
   929     054A  0080               	movwf	0
   930     054B                     l1655:
   931     054B  3001               	movlw	1
   932     054C  00FF               	movwf	btemp+1
   933     054D  087F               	movf	btemp+1,w
   934     054E  07AA               	addwf	sprintf@sp,f
   935                           
   936                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
   937     054F  2FE6               	goto	l1817
   938     0550                     l1657:
   939                           
   940                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 563:   width = 0;
   941     0550  01AB               	clrf	sprintf@width
   942     0551  01AC               	clrf	sprintf@width+1
   943                           
   944                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
   945     0552  01A6               	clrf	sprintf@flag
   946     0553  01A7               	clrf	sprintf@flag+1
   947     0554  2D5A               	goto	l1663
   948     0555                     l234:	
   949                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 570:    case '-':
   950                           
   951                           
   952                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 571:     flag |= 
      +                          0x08;
   953     0555  15A6               	bsf	sprintf@flag,3
   954     0556                     l1659:
   955                           
   956                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 572:     f++;
   957     0556  3001               	movlw	1
   958     0557  00FF               	movwf	btemp+1
   959     0558  087F               	movf	btemp+1,w
   960     0559  07F7               	addwf	sprintf@f,f
   961     055A                     l1663:	
   962                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 573:     continue
      +                          ;
   963                           
   964     055A  0877               	movf	sprintf@f,w
   965     055B  0084               	movwf	4
   966     055C  0800               	movf	0,w
   967     055D  00F8               	movwf	??_sprintf
   968     055E  01F9               	clrf	??_sprintf+1
   969                           
   970                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   971                           ; Switch size 1, requested type "simple"
   972                           ; Number of cases is 1, Range of values is 0 to 0
   973                           ; switch strategies available:
   974                           ; Name         Instructions Cycles
   975                           ; simple_byte            4     3 (average)
   976                           ; direct_byte           11     8 (fixed)
   977                           ; jumptable            260     6 (fixed)
   978                           ;	Chosen strategy is simple_byte
   979     055F  0879               	movf	??_sprintf+1,w
   980     0560  3A00               	xorlw	0	; case 0
   981     0561  1903               	skipnz
   982     0562  2D64               	goto	l1969
   983     0563  2D69               	goto	l1665
   984     0564                     l1969:
   985                           
   986                           ; Switch size 1, requested type "simple"
   987                           ; Number of cases is 1, Range of values is 45 to 45
   988                           ; switch strategies available:
   989                           ; Name         Instructions Cycles
   990                           ; simple_byte            4     3 (average)
   991                           ; direct_byte           14    11 (fixed)
   992                           ; jumptable            263     9 (fixed)
   993                           ;	Chosen strategy is simple_byte
   994     0564  0878               	movf	??_sprintf,w
   995     0565  3A2D               	xorlw	45	; case 45
   996     0566  1903               	skipnz
   997     0567  2D55               	goto	l234
   998     0568  2D69               	goto	l1665
   999     0569                     l1665:
  1000                           
  1001                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1002     0569  0877               	movf	sprintf@f,w
  1003     056A  0084               	movwf	4
  1004     056B  0800               	movf	0,w
  1005     056C  120A  118A  21A3  120A  118A  	fcall	_isdigit
  1006     0571  1C03               	btfss	3,0
  1007     0572  2D74               	goto	u971
  1008     0573  2D75               	goto	u970
  1009     0574                     u971:
  1010     0574  2DAE               	goto	l1677
  1011     0575                     u970:
  1012     0575                     l1667:
  1013                           
  1014                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1015     0575  1283               	bcf	3,5	;RP0=0, select bank0
  1016     0576  1303               	bcf	3,6	;RP1=0, select bank0
  1017     0577  01AB               	clrf	sprintf@width
  1018     0578  01AC               	clrf	sprintf@width+1
  1019     0579                     l1669:
  1020                           
  1021                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1022     0579  300A               	movlw	10
  1023     057A  00F0               	movwf	___wmul@multiplier
  1024     057B  3000               	movlw	0
  1025     057C  00F1               	movwf	___wmul@multiplier+1
  1026     057D  1283               	bcf	3,5	;RP0=0, select bank0
  1027     057E  1303               	bcf	3,6	;RP1=0, select bank0
  1028     057F  082C               	movf	sprintf@width+1,w
  1029     0580  00F3               	movwf	___wmul@multiplicand+1
  1030     0581  082B               	movf	sprintf@width,w
  1031     0582  00F2               	movwf	___wmul@multiplicand
  1032     0583  120A  118A  220A  120A  118A  	fcall	___wmul
  1033     0588  0871               	movf	?___wmul+1,w
  1034     0589  1283               	bcf	3,5	;RP0=0, select bank0
  1035     058A  1303               	bcf	3,6	;RP1=0, select bank0
  1036     058B  00AC               	movwf	sprintf@width+1
  1037     058C  0870               	movf	?___wmul,w
  1038     058D  00AB               	movwf	sprintf@width
  1039     058E                     l1671:
  1040                           
  1041                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1042     058E  0877               	movf	sprintf@f,w
  1043     058F  0084               	movwf	4
  1044     0590  1383               	bcf	3,7	;select IRP bank0
  1045     0591  0800               	movf	0,w
  1046     0592  3ED0               	addlw	208
  1047     0593  00F8               	movwf	??_sprintf
  1048     0594  30FF               	movlw	255
  1049     0595  1803               	skipnc
  1050     0596  3000               	movlw	0
  1051     0597  00F9               	movwf	??_sprintf+1
  1052     0598  0878               	movf	??_sprintf,w
  1053     0599  07AB               	addwf	sprintf@width,f
  1054     059A  1803               	skipnc
  1055     059B  0AAC               	incf	sprintf@width+1,f
  1056     059C  0879               	movf	??_sprintf+1,w
  1057     059D  07AC               	addwf	sprintf@width+1,f
  1058     059E                     l1673:
  1059     059E  3001               	movlw	1
  1060     059F  00FF               	movwf	btemp+1
  1061     05A0  087F               	movf	btemp+1,w
  1062     05A1  07F7               	addwf	sprintf@f,f
  1063     05A2                     l1675:
  1064                           
  1065                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1066     05A2  0877               	movf	sprintf@f,w
  1067     05A3  0084               	movwf	4
  1068     05A4  0800               	movf	0,w
  1069     05A5  120A  118A  21A3  120A  118A  	fcall	_isdigit
  1070     05AA  1803               	btfsc	3,0
  1071     05AB  2DAD               	goto	u981
  1072     05AC  2DAE               	goto	u980
  1073     05AD                     u981:
  1074     05AD  2D79               	goto	l1669
  1075     05AE                     u980:
  1076     05AE                     l1677:
  1077                           
  1078                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1079     05AE  0877               	movf	sprintf@f,w
  1080     05AF  0084               	movwf	4
  1081     05B0  302E               	movlw	46
  1082     05B1  1383               	bcf	3,7	;select IRP bank0
  1083     05B2  0600               	xorwf	0,w
  1084     05B3  1D03               	btfss	3,2
  1085     05B4  2DB6               	goto	u991
  1086     05B5  2DB7               	goto	u990
  1087     05B6                     u991:
  1088     05B6  2DE6               	goto	l1693
  1089     05B7                     u990:
  1090     05B7                     l1679:
  1091                           
  1092                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1093     05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1094     05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1095     05B9  1727               	bsf	sprintf@flag+1,6
  1096     05BA                     l1681:
  1097                           
  1098                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 630:    f++;
  1099     05BA  3001               	movlw	1
  1100     05BB  00FF               	movwf	btemp+1
  1101     05BC  087F               	movf	btemp+1,w
  1102     05BD  07F7               	addwf	sprintf@f,f
  1103     05BE                     l1683:
  1104                           
  1105                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1106     05BE  01AD               	clrf	sprintf@prec
  1107                           
  1108                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1109     05BF  2DD9               	goto	l1691
  1110     05C0                     l1685:
  1111                           
  1112                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1113     05C0  1283               	bcf	3,5	;RP0=0, select bank0
  1114     05C1  1303               	bcf	3,6	;RP1=0, select bank0
  1115     05C2  082D               	movf	sprintf@prec,w
  1116     05C3  00F0               	movwf	___bmul@multiplicand
  1117     05C4  300A               	movlw	10
  1118     05C5  120A  118A  21B5  120A  118A  	fcall	___bmul
  1119     05CA  1283               	bcf	3,5	;RP0=0, select bank0
  1120     05CB  1303               	bcf	3,6	;RP1=0, select bank0
  1121     05CC  00AD               	movwf	sprintf@prec
  1122     05CD                     l1687:
  1123                           
  1124                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1125     05CD  0877               	movf	sprintf@f,w
  1126     05CE  0084               	movwf	4
  1127     05CF  1383               	bcf	3,7	;select IRP bank0
  1128     05D0  0800               	movf	0,w
  1129     05D1  3ED0               	addlw	-48
  1130     05D2  00FF               	movwf	btemp+1
  1131     05D3  087F               	movf	btemp+1,w
  1132     05D4  07AD               	addwf	sprintf@prec,f
  1133     05D5                     l1689:
  1134     05D5  3001               	movlw	1
  1135     05D6  00FF               	movwf	btemp+1
  1136     05D7  087F               	movf	btemp+1,w
  1137     05D8  07F7               	addwf	sprintf@f,f
  1138     05D9                     l1691:
  1139                           
  1140                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1141     05D9  0877               	movf	sprintf@f,w
  1142     05DA  0084               	movwf	4
  1143     05DB  0800               	movf	0,w
  1144     05DC  120A  118A  21A3  120A  118A  	fcall	_isdigit
  1145     05E1  1803               	btfsc	3,0
  1146     05E2  2DE4               	goto	u1001
  1147     05E3  2DE5               	goto	u1000
  1148     05E4                     u1001:
  1149     05E4  2DC0               	goto	l1685
  1150     05E5                     u1000:
  1151     05E5  2EB8               	goto	l1751
  1152     05E6                     l1693:
  1153                           
  1154                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1155     05E6  1283               	bcf	3,5	;RP0=0, select bank0
  1156     05E7  1303               	bcf	3,6	;RP1=0, select bank0
  1157     05E8  01AD               	clrf	sprintf@prec
  1158     05E9  2EB8               	goto	l1751
  1159     05EA                     l1695:
  1160                           
  1161                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 760:     cp = (*(
      +                          const char * *)__va_arg((*(const char * **)ap), (const char *)0));
  1162     05EA  0821               	movf	sprintf@ap,w
  1163     05EB  0084               	movwf	4
  1164     05EC  0800               	movf	0,w
  1165     05ED  00A4               	movwf	sprintf@cp
  1166     05EE  3000               	movlw	0
  1167     05EF  00A5               	movwf	sprintf@cp+1
  1168     05F0                     l1697:
  1169     05F0  3001               	movlw	1
  1170     05F1  00FF               	movwf	btemp+1
  1171     05F2  087F               	movf	btemp+1,w
  1172     05F3  07A1               	addwf	sprintf@ap,f
  1173     05F4                     l1699:
  1174                           
  1175                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 766:    if(!cp)
  1176     05F4  0824               	movf	sprintf@cp,w
  1177     05F5  0425               	iorwf	sprintf@cp+1,w
  1178     05F6  1D03               	btfss	3,2
  1179     05F7  2DF9               	goto	u1011
  1180     05F8  2DFA               	goto	u1010
  1181     05F9                     u1011:
  1182     05F9  2DFE               	goto	l1703
  1183     05FA                     u1010:
  1184     05FA                     l1701:
  1185                           
  1186                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 767:     cp = "(n
      +                          ull)";
  1187     05FA  3040               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1188     05FB  00A4               	movwf	sprintf@cp
  1189     05FC  3080               	movlw	128
  1190     05FD  00A5               	movwf	sprintf@cp+1
  1191     05FE                     l1703:
  1192                           
  1193                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 771:    len = 0;
  1194     05FE  01A8               	clrf	sprintf@len
  1195     05FF  01A9               	clrf	sprintf@len+1
  1196                           
  1197                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  1198     0600  2E07               	goto	l1707
  1199     0601                     l1705:
  1200                           
  1201                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 773:     len++;
  1202     0601  3001               	movlw	1
  1203     0602  07A8               	addwf	sprintf@len,f
  1204     0603  1803               	skipnc
  1205     0604  0AA9               	incf	sprintf@len+1,f
  1206     0605  3000               	movlw	0
  1207     0606  07A9               	addwf	sprintf@len+1,f
  1208     0607                     l1707:
  1209                           
  1210                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 772:    while(cp[
      +                          len])
  1211     0607  0828               	movf	sprintf@len,w
  1212     0608  0724               	addwf	sprintf@cp,w
  1213     0609  0084               	movwf	4
  1214     060A  0825               	movf	sprintf@cp+1,w
  1215     060B  1803               	skipnc
  1216     060C  0A25               	incf	sprintf@cp+1,w
  1217     060D  00FF               	movwf	btemp+1
  1218     060E  120A  118A  2003  120A  118A  	fcall	stringtab
  1219     0613  3A00               	xorlw	0
  1220     0614  1D03               	skipz
  1221     0615  2E17               	goto	u1021
  1222     0616  2E18               	goto	u1020
  1223     0617                     u1021:
  1224     0617  2E01               	goto	l1705
  1225     0618                     u1020:
  1226     0618                     l1709:
  1227                           
  1228                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 779:    if(prec &
      +                          & (prec < ((int)len)))
  1229     0618  082D               	movf	sprintf@prec,w
  1230     0619  1903               	btfsc	3,2
  1231     061A  2E1C               	goto	u1031
  1232     061B  2E1D               	goto	u1030
  1233     061C                     u1031:
  1234     061C  2E39               	goto	l258
  1235     061D                     u1030:
  1236     061D                     l1711:
  1237     061D  082D               	movf	sprintf@prec,w
  1238     061E  00F8               	movwf	??_sprintf
  1239     061F  01F9               	clrf	??_sprintf+1
  1240     0620  1BF8               	btfsc	??_sprintf,7
  1241     0621  03F9               	decf	??_sprintf+1,f
  1242     0622  0879               	movf	??_sprintf+1,w
  1243     0623  3A80               	xorlw	128
  1244     0624  00FA               	movwf	??_sprintf+2
  1245     0625  0829               	movf	sprintf@len+1,w
  1246     0626  3A80               	xorlw	128
  1247     0627  027A               	subwf	??_sprintf+2,w
  1248     0628  1D03               	skipz
  1249     0629  2E2C               	goto	u1045
  1250     062A  0828               	movf	sprintf@len,w
  1251     062B  0278               	subwf	??_sprintf,w
  1252     062C                     u1045:
  1253     062C  1803               	skipnc
  1254     062D  2E2F               	goto	u1041
  1255     062E  2E30               	goto	u1040
  1256     062F                     u1041:
  1257     062F  2E39               	goto	l258
  1258     0630                     u1040:
  1259     0630                     l1713:
  1260                           
  1261                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 780:     len = (u
      +                          nsigned char)prec;
  1262     0630  1283               	bcf	3,5	;RP0=0, select bank0
  1263     0631  1303               	bcf	3,6	;RP1=0, select bank0
  1264     0632  082D               	movf	sprintf@prec,w
  1265     0633  00F8               	movwf	??_sprintf
  1266     0634  01F9               	clrf	??_sprintf+1
  1267     0635  0878               	movf	??_sprintf,w
  1268     0636  00A8               	movwf	sprintf@len
  1269     0637  0879               	movf	??_sprintf+1,w
  1270     0638  00A9               	movwf	sprintf@len+1
  1271     0639                     l258:
  1272                           
  1273                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 783:    if(((unsi
      +                          gned)width) > len)
  1274     0639  1283               	bcf	3,5	;RP0=0, select bank0
  1275     063A  1303               	bcf	3,6	;RP1=0, select bank0
  1276     063B  082C               	movf	sprintf@width+1,w
  1277     063C  0229               	subwf	sprintf@len+1,w
  1278     063D  1D03               	skipz
  1279     063E  2E41               	goto	u1055
  1280     063F  082B               	movf	sprintf@width,w
  1281     0640  0228               	subwf	sprintf@len,w
  1282     0641                     u1055:
  1283     0641  1803               	skipnc
  1284     0642  2E44               	goto	u1051
  1285     0643  2E45               	goto	u1050
  1286     0644                     u1051:
  1287     0644  2E4C               	goto	l1717
  1288     0645                     u1050:
  1289     0645                     l1715:
  1290                           
  1291                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 784:     width -=
      +                           len;
  1292     0645  0828               	movf	sprintf@len,w
  1293     0646  02AB               	subwf	sprintf@width,f
  1294     0647  0829               	movf	sprintf@len+1,w
  1295     0648  1C03               	skipc
  1296     0649  03AC               	decf	sprintf@width+1,f
  1297     064A  02AC               	subwf	sprintf@width+1,f
  1298     064B  2E4E               	goto	l1719
  1299     064C                     l1717:
  1300                           
  1301                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 786:     width = 
      +                          0;
  1302     064C  01AB               	clrf	sprintf@width
  1303     064D  01AC               	clrf	sprintf@width+1
  1304     064E                     l1719:
  1305                           
  1306                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 788:    if(!(flag
      +                           & 0x08))
  1307     064E  19A6               	btfsc	sprintf@flag,3
  1308     064F  2E51               	goto	u1061
  1309     0650  2E52               	goto	u1060
  1310     0651                     u1061:
  1311     0651  2E84               	goto	l1735
  1312     0652                     u1060:
  1313     0652  2E5C               	goto	l1727
  1314     0653                     l1723:
  1315                           
  1316                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 791:      ((*sp++
      +                           = (' ')));
  1317     0653  082A               	movf	sprintf@sp,w
  1318     0654  0084               	movwf	4
  1319     0655  3020               	movlw	32
  1320     0656  1383               	bcf	3,7	;select IRP bank0
  1321     0657  0080               	movwf	0
  1322     0658                     l1725:
  1323     0658  3001               	movlw	1
  1324     0659  00FF               	movwf	btemp+1
  1325     065A  087F               	movf	btemp+1,w
  1326     065B  07AA               	addwf	sprintf@sp,f
  1327     065C                     l1727:
  1328                           
  1329                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 790:     while(wi
      +                          dth--)
  1330     065C  30FF               	movlw	255
  1331     065D  07AB               	addwf	sprintf@width,f
  1332     065E  1803               	skipnc
  1333     065F  0AAC               	incf	sprintf@width+1,f
  1334     0660  30FF               	movlw	255
  1335     0661  07AC               	addwf	sprintf@width+1,f
  1336     0662  0A2B               	incf	sprintf@width,w
  1337     0663  1D03               	skipz
  1338     0664  2E69               	goto	u1071
  1339     0665  0A2C               	incf	sprintf@width+1,w
  1340     0666  1D03               	btfss	3,2
  1341     0667  2E69               	goto	u1071
  1342     0668  2E6A               	goto	u1070
  1343     0669                     u1071:
  1344     0669  2E53               	goto	l1723
  1345     066A                     u1070:
  1346     066A  2E84               	goto	l1735
  1347     066B                     l1729:
  1348                           
  1349                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 794:     ((*sp++ 
      +                          = (*cp++)));
  1350     066B  0825               	movf	sprintf@cp+1,w
  1351     066C  00FF               	movwf	btemp+1
  1352     066D  0824               	movf	sprintf@cp,w
  1353     066E  0084               	movwf	4
  1354     066F  120A  118A  2003  120A  118A  	fcall	stringtab
  1355     0674  00FF               	movwf	btemp+1
  1356     0675  082A               	movf	sprintf@sp,w
  1357     0676  0084               	movwf	4
  1358     0677  087F               	movf	btemp+1,w
  1359     0678  1383               	bcf	3,7	;select IRP bank0
  1360     0679  0080               	movwf	0
  1361     067A                     l1731:
  1362     067A  3001               	movlw	1
  1363     067B  07A4               	addwf	sprintf@cp,f
  1364     067C  1803               	skipnc
  1365     067D  0AA5               	incf	sprintf@cp+1,f
  1366     067E  3000               	movlw	0
  1367     067F  07A5               	addwf	sprintf@cp+1,f
  1368     0680                     l1733:
  1369     0680  3001               	movlw	1
  1370     0681  00FF               	movwf	btemp+1
  1371     0682  087F               	movf	btemp+1,w
  1372     0683  07AA               	addwf	sprintf@sp,f
  1373     0684                     l1735:
  1374                           
  1375                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 793:    while(len
      +                          --)
  1376     0684  3001               	movlw	1
  1377     0685  02A8               	subwf	sprintf@len,f
  1378     0686  3000               	movlw	0
  1379     0687  1C03               	skipc
  1380     0688  03A9               	decf	sprintf@len+1,f
  1381     0689  02A9               	subwf	sprintf@len+1,f
  1382     068A  0A28               	incf	sprintf@len,w
  1383     068B  1D03               	skipz
  1384     068C  2E91               	goto	u1081
  1385     068D  0A29               	incf	sprintf@len+1,w
  1386     068E  1D03               	btfss	3,2
  1387     068F  2E91               	goto	u1081
  1388     0690  2E92               	goto	u1080
  1389     0691                     u1081:
  1390     0691  2E6B               	goto	l1729
  1391     0692                     u1080:
  1392     0692                     l267:
  1393                           
  1394                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 796:    if(flag &
      +                           0x08)
  1395     0692  1DA6               	btfss	sprintf@flag,3
  1396     0693  2E95               	goto	u1091
  1397     0694  2E96               	goto	u1090
  1398     0695                     u1091:
  1399     0695  2FE6               	goto	l1817
  1400     0696                     u1090:
  1401     0696  2EA0               	goto	l1743
  1402     0697                     l1739:
  1403                           
  1404                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 798:      ((*sp++
      +                           = (' ')));
  1405     0697  082A               	movf	sprintf@sp,w
  1406     0698  0084               	movwf	4
  1407     0699  3020               	movlw	32
  1408     069A  1383               	bcf	3,7	;select IRP bank0
  1409     069B  0080               	movwf	0
  1410     069C                     l1741:
  1411     069C  3001               	movlw	1
  1412     069D  00FF               	movwf	btemp+1
  1413     069E  087F               	movf	btemp+1,w
  1414     069F  07AA               	addwf	sprintf@sp,f
  1415     06A0                     l1743:
  1416                           
  1417                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 797:     while(wi
      +                          dth--)
  1418     06A0  30FF               	movlw	255
  1419     06A1  07AB               	addwf	sprintf@width,f
  1420     06A2  1803               	skipnc
  1421     06A3  0AAC               	incf	sprintf@width+1,f
  1422     06A4  30FF               	movlw	255
  1423     06A5  07AC               	addwf	sprintf@width+1,f
  1424     06A6  0A2B               	incf	sprintf@width,w
  1425     06A7  1D03               	skipz
  1426     06A8  2EAD               	goto	u1101
  1427     06A9  0A2C               	incf	sprintf@width+1,w
  1428     06AA  1D03               	btfss	3,2
  1429     06AB  2EAD               	goto	u1101
  1430     06AC  2EAE               	goto	u1100
  1431     06AD                     u1101:
  1432     06AD  2E97               	goto	l1739
  1433     06AE                     u1100:
  1434     06AE  2FE6               	goto	l1817
  1435     06AF                     l1745:
  1436                           
  1437                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 831:    cp = (cha
      +                          r *)&c;
  1438     06AF  302E               	movlw	(low (sprintf@c| 0))& (0+255)
  1439     06B0  00A4               	movwf	sprintf@cp
  1440     06B1  3000               	movlw	0
  1441     06B2  00A5               	movwf	sprintf@cp+1
  1442     06B3                     l1747:
  1443                           
  1444                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 832:    len = 1;
  1445     06B3  3001               	movlw	1
  1446     06B4  00A8               	movwf	sprintf@len
  1447     06B5  3000               	movlw	0
  1448     06B6  00A9               	movwf	sprintf@len+1
  1449                           
  1450                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 833:    goto dost
      +                          ring;
  1451     06B7  2E18               	goto	l1709
  1452     06B8                     l1751:
  1453     06B8  0877               	movf	sprintf@f,w
  1454     06B9  0084               	movwf	4
  1455     06BA  3001               	movlw	1
  1456     06BB  07F7               	addwf	sprintf@f,f
  1457     06BC  1383               	bcf	3,7	;select IRP bank0
  1458     06BD  0800               	movf	0,w
  1459     06BE  1283               	bcf	3,5	;RP0=0, select bank0
  1460     06BF  1303               	bcf	3,6	;RP1=0, select bank0
  1461     06C0  00AE               	movwf	sprintf@c
  1462     06C1  00F8               	movwf	??_sprintf
  1463     06C2  01F9               	clrf	??_sprintf+1
  1464                           
  1465                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1466                           ; Switch size 1, requested type "simple"
  1467                           ; Number of cases is 1, Range of values is 0 to 0
  1468                           ; switch strategies available:
  1469                           ; Name         Instructions Cycles
  1470                           ; simple_byte            4     3 (average)
  1471                           ; direct_byte           11     8 (fixed)
  1472                           ; jumptable            260     6 (fixed)
  1473                           ;	Chosen strategy is simple_byte
  1474     06C3  0879               	movf	??_sprintf+1,w
  1475     06C4  3A00               	xorlw	0	; case 0
  1476     06C5  1903               	skipnz
  1477     06C6  2EC8               	goto	l1971
  1478     06C7  2EAF               	goto	l1745
  1479     06C8                     l1971:
  1480                           
  1481                           ; Switch size 1, requested type "simple"
  1482                           ; Number of cases is 4, Range of values is 0 to 120
  1483                           ; switch strategies available:
  1484                           ; Name         Instructions Cycles
  1485                           ; simple_byte           13     7 (average)
  1486                           ; jumptable            260     6 (fixed)
  1487                           ;	Chosen strategy is simple_byte
  1488     06C8  0878               	movf	??_sprintf,w
  1489     06C9  3A00               	xorlw	0	; case 0
  1490     06CA  1903               	skipnz
  1491     06CB  2FF4               	goto	l1819
  1492     06CC  3A70               	xorlw	112	; case 112
  1493     06CD  1903               	skipnz
  1494     06CE  2ED6               	goto	l1753
  1495     06CF  3A03               	xorlw	3	; case 115
  1496     06D0  1903               	skipnz
  1497     06D1  2DEA               	goto	l1695
  1498     06D2  3A0B               	xorlw	11	; case 120
  1499     06D3  1903               	skipnz
  1500     06D4  2ED6               	goto	l1753
  1501     06D5  2EAF               	goto	l1745
  1502     06D6                     l1753:
  1503                           
  1504                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1505     06D6  0821               	movf	sprintf@ap,w
  1506     06D7  0084               	movwf	4
  1507     06D8  0800               	movf	0,w
  1508     06D9  00A2               	movwf	sprintf@val
  1509     06DA  0A84               	incf	4,f
  1510     06DB  0800               	movf	0,w
  1511     06DC  00A3               	movwf	sprintf@val+1
  1512     06DD                     l1755:
  1513     06DD  3002               	movlw	2
  1514     06DE  00FF               	movwf	btemp+1
  1515     06DF  087F               	movf	btemp+1,w
  1516     06E0  07A1               	addwf	sprintf@ap,f
  1517     06E1                     l1757:
  1518                           
  1519                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  1520     06E1  082D               	movf	sprintf@prec,w
  1521     06E2  1D03               	btfss	3,2
  1522     06E3  2EE5               	goto	u1111
  1523     06E4  2EE6               	goto	u1110
  1524     06E5                     u1111:
  1525     06E5  2EF0               	goto	l1763
  1526     06E6                     u1110:
  1527     06E6                     l1759:
  1528     06E6  0822               	movf	sprintf@val,w
  1529     06E7  0423               	iorwf	sprintf@val+1,w
  1530     06E8  1D03               	btfss	3,2
  1531     06E9  2EEB               	goto	u1121
  1532     06EA  2EEC               	goto	u1120
  1533     06EB                     u1121:
  1534     06EB  2EF0               	goto	l1763
  1535     06EC                     u1120:
  1536     06EC                     l1761:
  1537                           
  1538                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  1539     06EC  3001               	movlw	1
  1540     06ED  00FF               	movwf	btemp+1
  1541     06EE  087F               	movf	btemp+1,w
  1542     06EF  07AD               	addwf	sprintf@prec,f
  1543     06F0                     l1763:
  1544                           
  1545                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1342:    for(c = 
      +                          1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1546     06F0  01AE               	clrf	sprintf@c
  1547     06F1  0AAE               	incf	sprintf@c,f
  1548     06F2                     l1765:
  1549     06F2  3004               	movlw	4
  1550     06F3  062E               	xorwf	sprintf@c,w
  1551     06F4  1D03               	btfss	3,2
  1552     06F5  2EF7               	goto	u1131
  1553     06F6  2EF8               	goto	u1130
  1554     06F7                     u1131:
  1555     06F7  2EF9               	goto	l1769
  1556     06F8                     u1130:
  1557     06F8  2F1A               	goto	l1777
  1558     06F9                     l1769:
  1559                           
  1560                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1343:     if(val 
      +                          < hexpowers[c])
  1561     06F9  082E               	movf	sprintf@c,w
  1562     06FA  00F8               	movwf	??_sprintf
  1563     06FB  0778               	addwf	??_sprintf,w
  1564     06FC  3E01               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  1565     06FD  0084               	movwf	4
  1566     06FE  120A  118A  200D  120A  118A  	fcall	stringdir
  1567     0703  00F9               	movwf	??_sprintf+1
  1568     0704  120A  118A  200D  120A  118A  	fcall	stringdir
  1569     0709  00FA               	movwf	??_sprintf+2
  1570     070A  087A               	movf	??_sprintf+2,w
  1571     070B  0223               	subwf	sprintf@val+1,w
  1572     070C  1D03               	skipz
  1573     070D  2F10               	goto	u1145
  1574     070E  0879               	movf	??_sprintf+1,w
  1575     070F  0222               	subwf	sprintf@val,w
  1576     0710                     u1145:
  1577     0710  1803               	skipnc
  1578     0711  2F13               	goto	u1141
  1579     0712  2F14               	goto	u1140
  1580     0713                     u1141:
  1581     0713  2F15               	goto	l1773
  1582     0714                     u1140:
  1583     0714  2F1A               	goto	l1777
  1584     0715                     l1773:
  1585     0715  3001               	movlw	1
  1586     0716  00FF               	movwf	btemp+1
  1587     0717  087F               	movf	btemp+1,w
  1588     0718  07AE               	addwf	sprintf@c,f
  1589     0719  2EF2               	goto	l1765
  1590     071A                     l1777:
  1591                           
  1592                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  1593     071A  082D               	movf	sprintf@prec,w
  1594     071B  00F8               	movwf	??_sprintf
  1595     071C  01F9               	clrf	??_sprintf+1
  1596     071D  1BF8               	btfsc	??_sprintf,7
  1597     071E  03F9               	decf	??_sprintf+1,f
  1598     071F  0879               	movf	??_sprintf+1,w
  1599     0720  3A80               	xorlw	128
  1600     0721  3C80               	sublw	128
  1601     0722  1D03               	skipz
  1602     0723  2F26               	goto	u1155
  1603     0724  0878               	movf	??_sprintf,w
  1604     0725  022E               	subwf	sprintf@c,w
  1605     0726                     u1155:
  1606     0726  1803               	skipnc
  1607     0727  2F29               	goto	u1151
  1608     0728  2F2A               	goto	u1150
  1609     0729                     u1151:
  1610     0729  2F2F               	goto	l1781
  1611     072A                     u1150:
  1612     072A                     l1779:
  1613                           
  1614                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  1615     072A  1283               	bcf	3,5	;RP0=0, select bank0
  1616     072B  1303               	bcf	3,6	;RP1=0, select bank0
  1617     072C  082D               	movf	sprintf@prec,w
  1618     072D  00AE               	movwf	sprintf@c
  1619     072E  2F47               	goto	l278
  1620     072F                     l1781:
  1621     072F  1283               	bcf	3,5	;RP0=0, select bank0
  1622     0730  1303               	bcf	3,6	;RP1=0, select bank0
  1623     0731  082D               	movf	sprintf@prec,w
  1624     0732  00F8               	movwf	??_sprintf
  1625     0733  01F9               	clrf	??_sprintf+1
  1626     0734  1BF8               	btfsc	??_sprintf,7
  1627     0735  03F9               	decf	??_sprintf+1,f
  1628     0736  0879               	movf	??_sprintf+1,w
  1629     0737  3A80               	xorlw	128
  1630     0738  00FA               	movwf	??_sprintf+2
  1631     0739  3080               	movlw	128
  1632     073A  027A               	subwf	??_sprintf+2,w
  1633     073B  1D03               	skipz
  1634     073C  2F3F               	goto	u1165
  1635     073D  082E               	movf	sprintf@c,w
  1636     073E  0278               	subwf	??_sprintf,w
  1637     073F                     u1165:
  1638     073F  1803               	skipnc
  1639     0740  2F42               	goto	u1161
  1640     0741  2F43               	goto	u1160
  1641     0742                     u1161:
  1642     0742  2F47               	goto	l278
  1643     0743                     u1160:
  1644     0743                     l1783:
  1645                           
  1646                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  1647     0743  1283               	bcf	3,5	;RP0=0, select bank0
  1648     0744  1303               	bcf	3,6	;RP1=0, select bank0
  1649     0745  082E               	movf	sprintf@c,w
  1650     0746  00AD               	movwf	sprintf@prec
  1651     0747                     l278:
  1652                           
  1653                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  1654     0747  1283               	bcf	3,5	;RP0=0, select bank0
  1655     0748  1303               	bcf	3,6	;RP1=0, select bank0
  1656     0749  082C               	movf	sprintf@width+1,w
  1657     074A  3A80               	xorlw	128
  1658     074B  3C80               	sublw	128
  1659     074C  1D03               	skipz
  1660     074D  2F50               	goto	u1175
  1661     074E  082B               	movf	sprintf@width,w
  1662     074F  022E               	subwf	sprintf@c,w
  1663     0750                     u1175:
  1664     0750  1803               	skipnc
  1665     0751  2F53               	goto	u1171
  1666     0752  2F54               	goto	u1170
  1667     0753                     u1171:
  1668     0753  2F60               	goto	l1787
  1669     0754                     u1170:
  1670     0754                     l1785:
  1671                           
  1672                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  1673     0754  1283               	bcf	3,5	;RP0=0, select bank0
  1674     0755  1303               	bcf	3,6	;RP1=0, select bank0
  1675     0756  082E               	movf	sprintf@c,w
  1676     0757  00F8               	movwf	??_sprintf
  1677     0758  01F9               	clrf	??_sprintf+1
  1678     0759  0878               	movf	??_sprintf,w
  1679     075A  02AB               	subwf	sprintf@width,f
  1680     075B  0879               	movf	??_sprintf+1,w
  1681     075C  1C03               	skipc
  1682     075D  03AC               	decf	sprintf@width+1,f
  1683     075E  02AC               	subwf	sprintf@width+1,f
  1684     075F  2F64               	goto	l1789
  1685     0760                     l1787:
  1686                           
  1687                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  1688     0760  1283               	bcf	3,5	;RP0=0, select bank0
  1689     0761  1303               	bcf	3,6	;RP1=0, select bank0
  1690     0762  01AB               	clrf	sprintf@width
  1691     0763  01AC               	clrf	sprintf@width+1
  1692     0764                     l1789:
  1693                           
  1694                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1450:    if(width
  1695     0764  082B               	movf	sprintf@width,w
  1696     0765  042C               	iorwf	sprintf@width+1,w
  1697     0766  1903               	btfsc	3,2
  1698     0767  2F69               	goto	u1181
  1699     0768  2F6A               	goto	u1180
  1700     0769                     u1181:
  1701     0769  2FB5               	goto	l1807
  1702     076A                     u1180:
  1703     076A                     l1791:
  1704     076A  19A6               	btfsc	sprintf@flag,3
  1705     076B  2F6D               	goto	u1191
  1706     076C  2F6E               	goto	u1190
  1707     076D                     u1191:
  1708     076D  2FB5               	goto	l1807
  1709     076E                     u1190:
  1710     076E                     l1793:
  1711                           
  1712                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  1713     076E  082A               	movf	sprintf@sp,w
  1714     076F  0084               	movwf	4
  1715     0770  3020               	movlw	32
  1716     0771  1383               	bcf	3,7	;select IRP bank0
  1717     0772  0080               	movwf	0
  1718     0773                     l1795:
  1719     0773  3001               	movlw	1
  1720     0774  00FF               	movwf	btemp+1
  1721     0775  087F               	movf	btemp+1,w
  1722     0776  07AA               	addwf	sprintf@sp,f
  1723     0777                     l1797:
  1724     0777  30FF               	movlw	255
  1725     0778  07AB               	addwf	sprintf@width,f
  1726     0779  1803               	skipnc
  1727     077A  0AAC               	incf	sprintf@width+1,f
  1728     077B  30FF               	movlw	255
  1729     077C  07AC               	addwf	sprintf@width+1,f
  1730     077D  082B               	movf	sprintf@width,w
  1731     077E  042C               	iorwf	sprintf@width+1,w
  1732     077F  1D03               	btfss	3,2
  1733     0780  2F82               	goto	u1201
  1734     0781  2F83               	goto	u1200
  1735     0782                     u1201:
  1736     0782  2F6E               	goto	l1793
  1737     0783                     u1200:
  1738     0783  2FB5               	goto	l1807
  1739     0784                     l1799:
  1740                           
  1741                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1525:    {;C:\Program Fi
      +                          les\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1526:     unsigned char idx = (
      +                          val / hexpowers[(unsigned char)prec]) & 0xF;
  1742     0784  082D               	movf	sprintf@prec,w
  1743     0785  00F8               	movwf	??_sprintf
  1744     0786  0778               	addwf	??_sprintf,w
  1745     0787  3E01               	addlw	low ((_hexpowers-__stringbase)| (0+32768))
  1746     0788  0084               	movwf	4
  1747     0789  120A  118A  200D  120A  118A  	fcall	stringdir
  1748     078E  00F0               	movwf	___lwdiv@divisor
  1749     078F  120A  118A  200D  120A  118A  	fcall	stringdir
  1750     0794  00F1               	movwf	___lwdiv@divisor+1
  1751     0795  0823               	movf	sprintf@val+1,w
  1752     0796  00F3               	movwf	___lwdiv@dividend+1
  1753     0797  0822               	movf	sprintf@val,w
  1754     0798  00F2               	movwf	___lwdiv@dividend
  1755     0799  120A  118A  2344  120A  118A  	fcall	___lwdiv
  1756     079E  0870               	movf	?___lwdiv,w
  1757     079F  390F               	andlw	15
  1758     07A0  1283               	bcf	3,5	;RP0=0, select bank0
  1759     07A1  1303               	bcf	3,6	;RP1=0, select bank0
  1760     07A2  00A0               	movwf	sprintf@idx
  1761     07A3                     l1801:
  1762                           
  1763                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1532:     c = "01
      +                          23456789abcdef"[idx];
  1764     07A3  0820               	movf	sprintf@idx,w
  1765     07A4  3E09               	addlw	low ((STR_5-__stringbase)| (0+32768))
  1766     07A5  0084               	movwf	4
  1767     07A6  120A  118A  200D  120A  118A  	fcall	stringdir
  1768     07AB  00AE               	movwf	sprintf@c
  1769     07AC                     l1803:
  1770                           
  1771                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1534:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Program Fi
      +                          les\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)));
  1772     07AC  082A               	movf	sprintf@sp,w
  1773     07AD  0084               	movwf	4
  1774     07AE  082E               	movf	sprintf@c,w
  1775     07AF  1383               	bcf	3,7	;select IRP bank0
  1776     07B0  0080               	movwf	0
  1777     07B1                     l1805:
  1778     07B1  3001               	movlw	1
  1779     07B2  00FF               	movwf	btemp+1
  1780     07B3  087F               	movf	btemp+1,w
  1781     07B4  07AA               	addwf	sprintf@sp,f
  1782     07B5                     l1807:
  1783                           
  1784                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1785     07B5  30FF               	movlw	255
  1786     07B6  00FF               	movwf	btemp+1
  1787     07B7  087F               	movf	btemp+1,w
  1788     07B8  07AD               	addwf	sprintf@prec,f
  1789     07B9  0A2D               	incf	sprintf@prec,w
  1790     07BA  1D03               	btfss	3,2
  1791     07BB  2FBD               	goto	u1211
  1792     07BC  2FBE               	goto	u1210
  1793     07BD                     u1211:
  1794     07BD  2F84               	goto	l1799
  1795     07BE                     u1210:
  1796     07BE                     l287:
  1797                           
  1798                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1554:   if((flag 
      +                          & 0x08) && width > 0)
  1799     07BE  1DA6               	btfss	sprintf@flag,3
  1800     07BF  2FC1               	goto	u1221
  1801     07C0  2FC2               	goto	u1220
  1802     07C1                     u1221:
  1803     07C1  2FE6               	goto	l1817
  1804     07C2                     u1220:
  1805     07C2                     l1809:
  1806     07C2  082C               	movf	sprintf@width+1,w
  1807     07C3  3A80               	xorlw	128
  1808     07C4  00FF               	movwf	btemp+1
  1809     07C5  3080               	movlw	128
  1810     07C6  027F               	subwf	btemp+1,w
  1811     07C7  1D03               	skipz
  1812     07C8  2FCB               	goto	u1235
  1813     07C9  3001               	movlw	1
  1814     07CA  022B               	subwf	sprintf@width,w
  1815     07CB                     u1235:
  1816     07CB  1C03               	skipc
  1817     07CC  2FCE               	goto	u1231
  1818     07CD  2FCF               	goto	u1230
  1819     07CE                     u1231:
  1820     07CE  2FE6               	goto	l1817
  1821     07CF                     u1230:
  1822     07CF                     l1811:
  1823                           
  1824                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1556:     ((*sp++
      +                           = (' ')));
  1825     07CF  1283               	bcf	3,5	;RP0=0, select bank0
  1826     07D0  1303               	bcf	3,6	;RP1=0, select bank0
  1827     07D1  082A               	movf	sprintf@sp,w
  1828     07D2  0084               	movwf	4
  1829     07D3  3020               	movlw	32
  1830     07D4  1383               	bcf	3,7	;select IRP bank0
  1831     07D5  0080               	movwf	0
  1832     07D6                     l1813:
  1833     07D6  3001               	movlw	1
  1834     07D7  00FF               	movwf	btemp+1
  1835     07D8  087F               	movf	btemp+1,w
  1836     07D9  07AA               	addwf	sprintf@sp,f
  1837     07DA                     l1815:
  1838     07DA  30FF               	movlw	255
  1839     07DB  07AB               	addwf	sprintf@width,f
  1840     07DC  1803               	skipnc
  1841     07DD  0AAC               	incf	sprintf@width+1,f
  1842     07DE  30FF               	movlw	255
  1843     07DF  07AC               	addwf	sprintf@width+1,f
  1844     07E0  082B               	movf	sprintf@width,w
  1845     07E1  042C               	iorwf	sprintf@width+1,w
  1846     07E2  1D03               	btfss	3,2
  1847     07E3  2FE5               	goto	u1241
  1848     07E4  2FE6               	goto	u1240
  1849     07E5                     u1241:
  1850     07E5  2FCF               	goto	l1811
  1851     07E6                     u1240:
  1852     07E6                     l1817:
  1853                           
  1854                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1855     07E6  0877               	movf	sprintf@f,w
  1856     07E7  0084               	movwf	4
  1857     07E8  3001               	movlw	1
  1858     07E9  07F7               	addwf	sprintf@f,f
  1859     07EA  1383               	bcf	3,7	;select IRP bank0
  1860     07EB  0800               	movf	0,w
  1861     07EC  1283               	bcf	3,5	;RP0=0, select bank0
  1862     07ED  1303               	bcf	3,6	;RP1=0, select bank0
  1863     07EE  00AE               	movwf	sprintf@c
  1864     07EF  082E               	movf	sprintf@c,w
  1865     07F0  1D03               	btfss	3,2
  1866     07F1  2FF3               	goto	u1251
  1867     07F2  2FF4               	goto	u1250
  1868     07F3                     u1251:
  1869     07F3  2D41               	goto	l1651
  1870     07F4                     u1250:
  1871     07F4                     l1819:
  1872                           
  1873                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1874     07F4  082A               	movf	sprintf@sp,w
  1875     07F5  0084               	movwf	4
  1876     07F6  0180               	clrf	0
  1877     07F7                     l292:
  1878     07F7  0008               	return
  1879     07F8                     __end_of_sprintf:
  1880                           
  1881                           	psect	text2
  1882     01A3                     __ptext2:	
  1883 ;; *************** function _isdigit *****************
  1884 ;; Defined at:
  1885 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\isdigit.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;  c               1    wreg     unsigned char 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  c               1    1[COMMON] unsigned char 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;		None               void
  1892 ;; Registers used:
  1893 ;;		wreg, status,2, status,0
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1899 ;;      Params:         0       0       0       0       0
  1900 ;;      Locals:         2       0       0       0       0
  1901 ;;      Temps:          0       0       0       0       0
  1902 ;;      Totals:         2       0       0       0       0
  1903 ;;Total ram usage:        2 bytes
  1904 ;; Hardware stack levels used: 1
  1905 ;; This function calls:
  1906 ;;		Nothing
  1907 ;; This function is called by:
  1908 ;;		_sprintf
  1909 ;; This function uses a non-reentrant model
  1910 ;;
  1911                           
  1912     01A3                     _isdigit:	
  1913                           ;psect for function _isdigit
  1914                           
  1915                           
  1916                           ;incstack = 0
  1917                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  1918                           ;isdigit@c stored from wreg
  1919     01A3  00F1               	movwf	isdigit@c
  1920     01A4                     l1477:
  1921     01A4  01F0               	clrf	_isdigit$708
  1922     01A5                     l1479:
  1923     01A5  303A               	movlw	58
  1924     01A6  0271               	subwf	isdigit@c,w
  1925     01A7  1803               	skipnc
  1926     01A8  29AA               	goto	u711
  1927     01A9  29AB               	goto	u710
  1928     01AA                     u711:
  1929     01AA  29B3               	goto	l1485
  1930     01AB                     u710:
  1931     01AB                     l1481:
  1932     01AB  3030               	movlw	48
  1933     01AC  0271               	subwf	isdigit@c,w
  1934     01AD  1C03               	skipc
  1935     01AE  29B0               	goto	u721
  1936     01AF  29B1               	goto	u720
  1937     01B0                     u721:
  1938     01B0  29B3               	goto	l1485
  1939     01B1                     u720:
  1940     01B1                     l1483:
  1941     01B1  01F0               	clrf	_isdigit$708
  1942     01B2  0AF0               	incf	_isdigit$708,f
  1943     01B3                     l1485:
  1944     01B3  0C70               	rrf	_isdigit$708,w
  1945     01B4                     l749:
  1946     01B4  0008               	return
  1947     01B5                     __end_of_isdigit:
  1948                           
  1949                           	psect	text3
  1950     020A                     __ptext3:	
  1951 ;; *************** function ___wmul *****************
  1952 ;; Defined at:
  1953 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul16.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;  multiplier      2    0[COMMON] unsigned int 
  1956 ;;  multiplicand    2    2[COMMON] unsigned int 
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;  product         2    4[COMMON] unsigned int 
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  2    0[COMMON] unsigned int 
  1961 ;; Registers used:
  1962 ;;		wreg, status,2, status,0
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1968 ;;      Params:         4       0       0       0       0
  1969 ;;      Locals:         2       0       0       0       0
  1970 ;;      Temps:          0       0       0       0       0
  1971 ;;      Totals:         6       0       0       0       0
  1972 ;;Total ram usage:        6 bytes
  1973 ;; Hardware stack levels used: 1
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		_sprintf
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981     020A                     ___wmul:	
  1982                           ;psect for function ___wmul
  1983                           
  1984     020A                     l1489:	
  1985                           ;incstack = 0
  1986                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1987                           
  1988     020A  01F4               	clrf	___wmul@product
  1989     020B  01F5               	clrf	___wmul@product+1
  1990     020C                     l1491:
  1991     020C  1C70               	btfss	___wmul@multiplier,0
  1992     020D  2A0F               	goto	u731
  1993     020E  2A10               	goto	u730
  1994     020F                     u731:
  1995     020F  2A16               	goto	l296
  1996     0210                     u730:
  1997     0210                     l1493:
  1998     0210  0872               	movf	___wmul@multiplicand,w
  1999     0211  07F4               	addwf	___wmul@product,f
  2000     0212  1803               	skipnc
  2001     0213  0AF5               	incf	___wmul@product+1,f
  2002     0214  0873               	movf	___wmul@multiplicand+1,w
  2003     0215  07F5               	addwf	___wmul@product+1,f
  2004     0216                     l296:
  2005     0216  3001               	movlw	1
  2006     0217                     u745:
  2007     0217  1003               	clrc
  2008     0218  0DF2               	rlf	___wmul@multiplicand,f
  2009     0219  0DF3               	rlf	___wmul@multiplicand+1,f
  2010     021A  3EFF               	addlw	-1
  2011     021B  1D03               	skipz
  2012     021C  2A17               	goto	u745
  2013     021D                     l1495:
  2014     021D  3001               	movlw	1
  2015     021E                     u755:
  2016     021E  1003               	clrc
  2017     021F  0CF1               	rrf	___wmul@multiplier+1,f
  2018     0220  0CF0               	rrf	___wmul@multiplier,f
  2019     0221  3EFF               	addlw	-1
  2020     0222  1D03               	skipz
  2021     0223  2A1E               	goto	u755
  2022     0224                     l1497:
  2023     0224  0870               	movf	___wmul@multiplier,w
  2024     0225  0471               	iorwf	___wmul@multiplier+1,w
  2025     0226  1D03               	btfss	3,2
  2026     0227  2A29               	goto	u761
  2027     0228  2A2A               	goto	u760
  2028     0229                     u761:
  2029     0229  2A0C               	goto	l1491
  2030     022A                     u760:
  2031     022A                     l1499:
  2032     022A  0875               	movf	___wmul@product+1,w
  2033     022B  00F1               	movwf	?___wmul+1
  2034     022C  0874               	movf	___wmul@product,w
  2035     022D  00F0               	movwf	?___wmul
  2036     022E                     l298:
  2037     022E  0008               	return
  2038     022F                     __end_of___wmul:
  2039                           
  2040                           	psect	text4
  2041     0344                     __ptext4:	
  2042 ;; *************** function ___lwdiv *****************
  2043 ;; Defined at:
  2044 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;  divisor         2    0[COMMON] unsigned int 
  2047 ;;  dividend        2    2[COMMON] unsigned int 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;  quotient        2    4[COMMON] unsigned int 
  2050 ;;  counter         1    6[COMMON] unsigned char 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  2    0[COMMON] unsigned int 
  2053 ;; Registers used:
  2054 ;;		wreg, status,2, status,0, btemp+1
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2060 ;;      Params:         4       0       0       0       0
  2061 ;;      Locals:         3       0       0       0       0
  2062 ;;      Temps:          0       0       0       0       0
  2063 ;;      Totals:         7       0       0       0       0
  2064 ;;Total ram usage:        7 bytes
  2065 ;; Hardware stack levels used: 1
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_sprintf
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073     0344                     ___lwdiv:	
  2074                           ;psect for function ___lwdiv
  2075                           
  2076     0344                     l1545:	
  2077                           ;incstack = 0
  2078                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  2079                           
  2080     0344  01F4               	clrf	___lwdiv@quotient
  2081     0345  01F5               	clrf	___lwdiv@quotient+1
  2082     0346                     l1547:
  2083     0346  0870               	movf	___lwdiv@divisor,w
  2084     0347  0471               	iorwf	___lwdiv@divisor+1,w
  2085     0348  1903               	btfsc	3,2
  2086     0349  2B4B               	goto	u861
  2087     034A  2B4C               	goto	u860
  2088     034B                     u861:
  2089     034B  2B83               	goto	l1567
  2090     034C                     u860:
  2091     034C                     l1549:
  2092     034C  01F6               	clrf	___lwdiv@counter
  2093     034D  0AF6               	incf	___lwdiv@counter,f
  2094     034E  2B5A               	goto	l1555
  2095     034F                     l1551:
  2096     034F  3001               	movlw	1
  2097     0350                     u875:
  2098     0350  1003               	clrc
  2099     0351  0DF0               	rlf	___lwdiv@divisor,f
  2100     0352  0DF1               	rlf	___lwdiv@divisor+1,f
  2101     0353  3EFF               	addlw	-1
  2102     0354  1D03               	skipz
  2103     0355  2B50               	goto	u875
  2104     0356                     l1553:
  2105     0356  3001               	movlw	1
  2106     0357  00FF               	movwf	btemp+1
  2107     0358  087F               	movf	btemp+1,w
  2108     0359  07F6               	addwf	___lwdiv@counter,f
  2109     035A                     l1555:
  2110     035A  1FF1               	btfss	___lwdiv@divisor+1,7
  2111     035B  2B5D               	goto	u881
  2112     035C  2B5E               	goto	u880
  2113     035D                     u881:
  2114     035D  2B4F               	goto	l1551
  2115     035E                     u880:
  2116     035E                     l1557:
  2117     035E  3001               	movlw	1
  2118     035F                     u895:
  2119     035F  1003               	clrc
  2120     0360  0DF4               	rlf	___lwdiv@quotient,f
  2121     0361  0DF5               	rlf	___lwdiv@quotient+1,f
  2122     0362  3EFF               	addlw	-1
  2123     0363  1D03               	skipz
  2124     0364  2B5F               	goto	u895
  2125     0365  0871               	movf	___lwdiv@divisor+1,w
  2126     0366  0273               	subwf	___lwdiv@dividend+1,w
  2127     0367  1D03               	skipz
  2128     0368  2B6B               	goto	u905
  2129     0369  0870               	movf	___lwdiv@divisor,w
  2130     036A  0272               	subwf	___lwdiv@dividend,w
  2131     036B                     u905:
  2132     036B  1C03               	skipc
  2133     036C  2B6E               	goto	u901
  2134     036D  2B6F               	goto	u900
  2135     036E                     u901:
  2136     036E  2B76               	goto	l1563
  2137     036F                     u900:
  2138     036F                     l1559:
  2139     036F  0870               	movf	___lwdiv@divisor,w
  2140     0370  02F2               	subwf	___lwdiv@dividend,f
  2141     0371  0871               	movf	___lwdiv@divisor+1,w
  2142     0372  1C03               	skipc
  2143     0373  03F3               	decf	___lwdiv@dividend+1,f
  2144     0374  02F3               	subwf	___lwdiv@dividend+1,f
  2145     0375                     l1561:
  2146     0375  1474               	bsf	___lwdiv@quotient,0
  2147     0376                     l1563:
  2148     0376  3001               	movlw	1
  2149     0377                     u915:
  2150     0377  1003               	clrc
  2151     0378  0CF1               	rrf	___lwdiv@divisor+1,f
  2152     0379  0CF0               	rrf	___lwdiv@divisor,f
  2153     037A  3EFF               	addlw	-1
  2154     037B  1D03               	skipz
  2155     037C  2B77               	goto	u915
  2156     037D                     l1565:
  2157     037D  3001               	movlw	1
  2158     037E  02F6               	subwf	___lwdiv@counter,f
  2159     037F  1D03               	btfss	3,2
  2160     0380  2B82               	goto	u921
  2161     0381  2B83               	goto	u920
  2162     0382                     u921:
  2163     0382  2B5E               	goto	l1557
  2164     0383                     u920:
  2165     0383                     l1567:
  2166     0383  0875               	movf	___lwdiv@quotient+1,w
  2167     0384  00F1               	movwf	?___lwdiv+1
  2168     0385  0874               	movf	___lwdiv@quotient,w
  2169     0386  00F0               	movwf	?___lwdiv
  2170     0387                     l568:
  2171     0387  0008               	return
  2172     0388                     __end_of___lwdiv:
  2173                           
  2174                           	psect	text5
  2175     01B5                     __ptext5:	
  2176 ;; *************** function ___bmul *****************
  2177 ;; Defined at:
  2178 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  multiplier      1    wreg     unsigned char 
  2181 ;;  multiplicand    1    0[COMMON] unsigned char 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  multiplier      1    2[COMMON] unsigned char 
  2184 ;;  product         1    1[COMMON] unsigned char 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      unsigned char 
  2187 ;; Registers used:
  2188 ;;		wreg, status,2, status,0, btemp+1
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2194 ;;      Params:         1       0       0       0       0
  2195 ;;      Locals:         2       0       0       0       0
  2196 ;;      Temps:          0       0       0       0       0
  2197 ;;      Totals:         3       0       0       0       0
  2198 ;;Total ram usage:        3 bytes
  2199 ;; Hardware stack levels used: 1
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		_sprintf
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207     01B5                     ___bmul:	
  2208                           ;psect for function ___bmul
  2209                           
  2210                           
  2211                           ;incstack = 0
  2212                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  2213                           ;___bmul@multiplier stored from wreg
  2214     01B5  00F2               	movwf	___bmul@multiplier
  2215     01B6                     l1503:
  2216     01B6  01F1               	clrf	___bmul@product
  2217     01B7                     l1505:
  2218     01B7  1C72               	btfss	___bmul@multiplier,0
  2219     01B8  29BA               	goto	u771
  2220     01B9  29BB               	goto	u770
  2221     01BA                     u771:
  2222     01BA  29BF               	goto	l1509
  2223     01BB                     u770:
  2224     01BB                     l1507:
  2225     01BB  0870               	movf	___bmul@multiplicand,w
  2226     01BC  00FF               	movwf	btemp+1
  2227     01BD  087F               	movf	btemp+1,w
  2228     01BE  07F1               	addwf	___bmul@product,f
  2229     01BF                     l1509:
  2230     01BF  1003               	clrc
  2231     01C0  0DF0               	rlf	___bmul@multiplicand,f
  2232     01C1                     l1511:
  2233     01C1  1003               	clrc
  2234     01C2  0CF2               	rrf	___bmul@multiplier,f
  2235     01C3                     l1513:
  2236     01C3  0872               	movf	___bmul@multiplier,w
  2237     01C4  1D03               	btfss	3,2
  2238     01C5  29C7               	goto	u781
  2239     01C6  29C8               	goto	u780
  2240     01C7                     u781:
  2241     01C7  29B7               	goto	l1505
  2242     01C8                     u780:
  2243     01C8                     l1515:
  2244     01C8  0871               	movf	___bmul@product,w
  2245     01C9                     l322:
  2246     01C9  0008               	return
  2247     01CA                     __end_of___bmul:
  2248                           
  2249                           	psect	text6
  2250     022F                     __ptext6:	
  2251 ;; *************** function _lcd_send_string *****************
  2252 ;; Defined at:
  2253 ;;		line 200 in file "newmain.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  str             2   12[COMMON] PTR unsigned char 
  2256 ;;		 -> STR_3(13), main@str1(4), STR_2(13), STR_1(12), 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;		None
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      void 
  2261 ;; Registers used:
  2262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2268 ;;      Params:         2       0       0       0       0
  2269 ;;      Locals:         0       0       0       0       0
  2270 ;;      Temps:          0       0       0       0       0
  2271 ;;      Totals:         2       0       0       0       0
  2272 ;;Total ram usage:        2 bytes
  2273 ;; Hardware stack levels used: 1
  2274 ;; Hardware stack levels required when called: 4
  2275 ;; This function calls:
  2276 ;;		_lcd_send_data
  2277 ;; This function is called by:
  2278 ;;		_main
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282     022F                     _lcd_send_string:	
  2283                           ;psect for function _lcd_send_string
  2284                           
  2285     022F                     l1641:	
  2286                           ;incstack = 0
  2287                           ; Regs used in _lcd_send_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2288                           
  2289                           
  2290                           ;newmain.c: 200: ;newmain.c: 201:   I2C_Master_Init(100000);;newmain.c: 202: 
  2291     022F  2A44               	goto	l1647
  2292     0230                     l1643:
  2293     0230  087D               	movf	lcd_send_string@str+1,w
  2294     0231  00FF               	movwf	btemp+1
  2295     0232  087C               	movf	lcd_send_string@str,w
  2296     0233  0084               	movwf	4
  2297     0234  120A  118A  2003  120A  118A  	fcall	stringtab
  2298     0239  120A  118A  2300  120A  118A  	fcall	_lcd_send_data
  2299     023E                     l1645:
  2300     023E  3001               	movlw	1
  2301     023F  07FC               	addwf	lcd_send_string@str,f
  2302     0240  1803               	skipnc
  2303     0241  0AFD               	incf	lcd_send_string@str+1,f
  2304     0242  3000               	movlw	0
  2305     0243  07FD               	addwf	lcd_send_string@str+1,f
  2306     0244                     l1647:
  2307     0244  087D               	movf	lcd_send_string@str+1,w
  2308     0245  1283               	bcf	3,5	;RP0=0, select bank0
  2309     0246  1303               	bcf	3,6	;RP1=0, select bank0
  2310     0247  00FF               	movwf	btemp+1
  2311     0248  087C               	movf	lcd_send_string@str,w
  2312     0249  0084               	movwf	4
  2313     024A  120A  118A  2003  120A  118A  	fcall	stringtab
  2314     024F  3A00               	xorlw	0
  2315     0250  1D03               	skipz
  2316     0251  2A53               	goto	u951
  2317     0252  2A54               	goto	u950
  2318     0253                     u951:
  2319     0253  2A30               	goto	l1643
  2320     0254                     u950:
  2321     0254                     l126:
  2322     0254  0008               	return
  2323     0255                     __end_of_lcd_send_string:
  2324                           
  2325                           	psect	text7
  2326     01CA                     __ptext7:	
  2327 ;; *************** function _lcd_put_cur *****************
  2328 ;; Defined at:
  2329 ;;		line 158 in file "newmain.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  row             2    7[BANK0 ] int 
  2332 ;;  col             2    9[BANK0 ] int 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2344 ;;      Params:         0       4       0       0       0
  2345 ;;      Locals:         0       0       0       0       0
  2346 ;;      Temps:          0       0       0       0       0
  2347 ;;      Totals:         0       4       0       0       0
  2348 ;;Total ram usage:        4 bytes
  2349 ;; Hardware stack levels used: 1
  2350 ;; Hardware stack levels required when called: 4
  2351 ;; This function calls:
  2352 ;;		_lcd_send_cmd
  2353 ;; This function is called by:
  2354 ;;		_main
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358     01CA                     _lcd_put_cur:	
  2359                           ;psect for function _lcd_put_cur
  2360                           
  2361     01CA                     l1599:	
  2362                           ;incstack = 0
  2363                           ; Regs used in _lcd_put_cur: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2364                           
  2365                           
  2366                           ;newmain.c: 158: {;newmain.c: 159: ;newmain.c: 160:  _delay((unsigned long)((50)*(200000
      +                          00/4000.0)));
  2367     01CA  29D2               	goto	l1605
  2368     01CB                     l114:	
  2369                           ;newmain.c: 161:  lcd_send_cmd (0x30);;newmain.c: 162:  _delay((unsigned long)((5)*(2000
      +                          0000/4000.0)));
  2370                           
  2371                           
  2372                           ;newmain.c: 163:  lcd_send_cmd (0x30);
  2373     01CB  17A9               	bsf	lcd_put_cur@col,7
  2374                           
  2375                           ;newmain.c: 164:  _delay((unsigned long)((1)*(20000000/4000.0)));
  2376     01CC  29E1               	goto	l1607
  2377     01CD                     l1601:
  2378                           
  2379                           ;newmain.c: 166:  _delay((unsigned long)((10)*(20000000/4000.0)));
  2380     01CD  30C0               	movlw	192
  2381     01CE  04A9               	iorwf	lcd_put_cur@col,f
  2382     01CF  3000               	movlw	0
  2383     01D0  04AA               	iorwf	lcd_put_cur@col+1,f
  2384                           
  2385                           ;newmain.c: 167:  lcd_send_cmd (0x20);
  2386     01D1  29E1               	goto	l1607
  2387     01D2                     l1605:
  2388                           
  2389                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2390                           ; Switch size 1, requested type "simple"
  2391                           ; Number of cases is 1, Range of values is 0 to 0
  2392                           ; switch strategies available:
  2393                           ; Name         Instructions Cycles
  2394                           ; simple_byte            4     3 (average)
  2395                           ; direct_byte           11     8 (fixed)
  2396                           ; jumptable            260     6 (fixed)
  2397                           ;	Chosen strategy is simple_byte
  2398     01D2  1283               	bcf	3,5	;RP0=0, select bank0
  2399     01D3  1303               	bcf	3,6	;RP1=0, select bank0
  2400     01D4  0828               	movf	lcd_put_cur@row+1,w
  2401     01D5  3A00               	xorlw	0	; case 0
  2402     01D6  1903               	skipnz
  2403     01D7  29D9               	goto	l1973
  2404     01D8  29E1               	goto	l1607
  2405     01D9                     l1973:
  2406                           
  2407                           ; Switch size 1, requested type "simple"
  2408                           ; Number of cases is 2, Range of values is 0 to 1
  2409                           ; switch strategies available:
  2410                           ; Name         Instructions Cycles
  2411                           ; simple_byte            7     4 (average)
  2412                           ; direct_byte           14     8 (fixed)
  2413                           ; jumptable            260     6 (fixed)
  2414                           ;	Chosen strategy is simple_byte
  2415     01D9  0827               	movf	lcd_put_cur@row,w
  2416     01DA  3A00               	xorlw	0	; case 0
  2417     01DB  1903               	skipnz
  2418     01DC  29CB               	goto	l114
  2419     01DD  3A01               	xorlw	1	; case 1
  2420     01DE  1903               	skipnz
  2421     01DF  29CD               	goto	l1601
  2422     01E0  29E1               	goto	l1607
  2423     01E1                     l1607:
  2424                           
  2425                           ;newmain.c: 170: 
  2426     01E1  0829               	movf	lcd_put_cur@col,w
  2427     01E2  120A  118A  22BC  120A  118A  	fcall	_lcd_send_cmd
  2428     01E7                     l117:
  2429     01E7  0008               	return
  2430     01E8                     __end_of_lcd_put_cur:
  2431                           
  2432                           	psect	text8
  2433     0493                     __ptext8:	
  2434 ;; *************** function _lcd_init *****************
  2435 ;; Defined at:
  2436 ;;		line 174 in file "newmain.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;		None
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2450 ;;      Params:         0       0       0       0       0
  2451 ;;      Locals:         0       0       0       0       0
  2452 ;;      Temps:          0       3       0       0       0
  2453 ;;      Totals:         0       3       0       0       0
  2454 ;;Total ram usage:        3 bytes
  2455 ;; Hardware stack levels used: 1
  2456 ;; Hardware stack levels required when called: 4
  2457 ;; This function calls:
  2458 ;;		_lcd_send_cmd
  2459 ;; This function is called by:
  2460 ;;		_main
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464     0493                     _lcd_init:	
  2465                           ;psect for function _lcd_init
  2466                           
  2467     0493                     l1613:	
  2468                           ;incstack = 0
  2469                           ; Regs used in _lcd_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2470                           
  2471                           
  2472                           ;newmain.c: 177:  _delay((unsigned long)((1)*(20000000/4000.0)));
  2473     0493  3002               	movlw	2
  2474     0494  1283               	bcf	3,5	;RP0=0, select bank0
  2475     0495  1303               	bcf	3,6	;RP1=0, select bank0
  2476     0496  00A9               	movwf	??_lcd_init+2
  2477     0497  3045               	movlw	69
  2478     0498  00A8               	movwf	??_lcd_init+1
  2479     0499  30A9               	movlw	169
  2480     049A  00A7               	movwf	??_lcd_init
  2481     049B                     u1287:
  2482     049B  0BA7               	decfsz	??_lcd_init,f
  2483     049C  2C9B               	goto	u1287
  2484     049D  0BA8               	decfsz	??_lcd_init+1,f
  2485     049E  2C9B               	goto	u1287
  2486     049F  0BA9               	decfsz	??_lcd_init+2,f
  2487     04A0  2C9B               	goto	u1287
  2488     04A1                     l1615:
  2489                           
  2490                           ;newmain.c: 178:  lcd_send_cmd (0x06);
  2491     04A1  3030               	movlw	48
  2492     04A2  120A  118A  22BC  120A  118A  	fcall	_lcd_send_cmd
  2493     04A7                     l1617:
  2494                           
  2495                           ;newmain.c: 179:  _delay((unsigned long)((1)*(20000000/4000.0)));
  2496     04A7  3021               	movlw	33
  2497     04A8  1283               	bcf	3,5	;RP0=0, select bank0
  2498     04A9  1303               	bcf	3,6	;RP1=0, select bank0
  2499     04AA  00A8               	movwf	??_lcd_init+1
  2500     04AB  3075               	movlw	117
  2501     04AC  00A7               	movwf	??_lcd_init
  2502     04AD                     u1297:
  2503     04AD  0BA7               	decfsz	??_lcd_init,f
  2504     04AE  2CAD               	goto	u1297
  2505     04AF  0BA8               	decfsz	??_lcd_init+1,f
  2506     04B0  2CAD               	goto	u1297
  2507     04B1  2CB2               	nop2
  2508                           
  2509                           ;newmain.c: 180:  lcd_send_cmd (0x0C);
  2510     04B2  3030               	movlw	48
  2511     04B3  120A  118A  22BC  120A  118A  	fcall	_lcd_send_cmd
  2512     04B8                     l1619:
  2513                           
  2514                           ;newmain.c: 181: }
  2515     04B8  3007               	movlw	7
  2516     04B9  1283               	bcf	3,5	;RP0=0, select bank0
  2517     04BA  1303               	bcf	3,6	;RP1=0, select bank0
  2518     04BB  00A8               	movwf	??_lcd_init+1
  2519     04BC  307C               	movlw	124
  2520     04BD  00A7               	movwf	??_lcd_init
  2521     04BE                     u1307:
  2522     04BE  0BA7               	decfsz	??_lcd_init,f
  2523     04BF  2CBE               	goto	u1307
  2524     04C0  0BA8               	decfsz	??_lcd_init+1,f
  2525     04C1  2CBE               	goto	u1307
  2526     04C2  0000               	nop
  2527     04C3                     l1621:
  2528                           
  2529                           ;newmain.c: 182: 
  2530     04C3  3030               	movlw	48
  2531     04C4  120A  118A  22BC  120A  118A  	fcall	_lcd_send_cmd
  2532                           
  2533                           ;newmain.c: 183: void lcd_send_string (char *str)
  2534     04C9  3041               	movlw	65
  2535     04CA  1283               	bcf	3,5	;RP0=0, select bank0
  2536     04CB  1303               	bcf	3,6	;RP1=0, select bank0
  2537     04CC  00A8               	movwf	??_lcd_init+1
  2538     04CD  30ED               	movlw	237
  2539     04CE  00A7               	movwf	??_lcd_init
  2540     04CF                     u1317:
  2541     04CF  0BA7               	decfsz	??_lcd_init,f
  2542     04D0  2CCF               	goto	u1317
  2543     04D1  0BA8               	decfsz	??_lcd_init+1,f
  2544     04D2  2CCF               	goto	u1317
  2545     04D3  2CD4               	nop2
  2546     04D4                     l1623:
  2547                           
  2548                           ;newmain.c: 184: {
  2549     04D4  3020               	movlw	32
  2550     04D5  120A  118A  22BC  120A  118A  	fcall	_lcd_send_cmd
  2551     04DA                     l1625:
  2552                           
  2553                           ;newmain.c: 185:  while (*str) lcd_send_data (*str++);
  2554     04DA  3041               	movlw	65
  2555     04DB  1283               	bcf	3,5	;RP0=0, select bank0
  2556     04DC  1303               	bcf	3,6	;RP1=0, select bank0
  2557     04DD  00A8               	movwf	??_lcd_init+1
  2558     04DE  30ED               	movlw	237
  2559     04DF  00A7               	movwf	??_lcd_init
  2560     04E0                     u1327:
  2561     04E0  0BA7               	decfsz	??_lcd_init,f
  2562     04E1  2CE0               	goto	u1327
  2563     04E2  0BA8               	decfsz	??_lcd_init+1,f
  2564     04E3  2CE0               	goto	u1327
  2565     04E4  2CE5               	nop2
  2566                           
  2567                           ;newmain.c: 188: 
  2568     04E5  3028               	movlw	40
  2569     04E6  120A  118A  22BC  120A  118A  	fcall	_lcd_send_cmd
  2570     04EB                     l1627:
  2571                           
  2572                           ;newmain.c: 189: uint16_t adc_value = 0;
  2573     04EB  3007               	movlw	7
  2574     04EC  1283               	bcf	3,5	;RP0=0, select bank0
  2575     04ED  1303               	bcf	3,6	;RP1=0, select bank0
  2576     04EE  00A8               	movwf	??_lcd_init+1
  2577     04EF  307C               	movlw	124
  2578     04F0  00A7               	movwf	??_lcd_init
  2579     04F1                     u1337:
  2580     04F1  0BA7               	decfsz	??_lcd_init,f
  2581     04F2  2CF1               	goto	u1337
  2582     04F3  0BA8               	decfsz	??_lcd_init+1,f
  2583     04F4  2CF1               	goto	u1337
  2584     04F5  0000               	nop
  2585     04F6                     l1629:
  2586                           
  2587                           ;newmain.c: 190: 
  2588     04F6  3008               	movlw	8
  2589     04F7  120A  118A  22BC  120A  118A  	fcall	_lcd_send_cmd
  2590                           
  2591                           ;newmain.c: 191: 
  2592     04FC  3007               	movlw	7
  2593     04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2594     04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2595     04FF  00A8               	movwf	??_lcd_init+1
  2596     0500  307C               	movlw	124
  2597     0501  00A7               	movwf	??_lcd_init
  2598     0502                     u1347:
  2599     0502  0BA7               	decfsz	??_lcd_init,f
  2600     0503  2D02               	goto	u1347
  2601     0504  0BA8               	decfsz	??_lcd_init+1,f
  2602     0505  2D02               	goto	u1347
  2603     0506  0000               	nop
  2604     0507                     l1631:
  2605                           
  2606                           ;newmain.c: 192: void main()
  2607     0507  3001               	movlw	1
  2608     0508  120A  118A  22BC  120A  118A  	fcall	_lcd_send_cmd
  2609     050D                     l1633:
  2610                           
  2611                           ;newmain.c: 193: {
  2612     050D  3007               	movlw	7
  2613     050E  1283               	bcf	3,5	;RP0=0, select bank0
  2614     050F  1303               	bcf	3,6	;RP1=0, select bank0
  2615     0510  00A8               	movwf	??_lcd_init+1
  2616     0511  307C               	movlw	124
  2617     0512  00A7               	movwf	??_lcd_init
  2618     0513                     u1357:
  2619     0513  0BA7               	decfsz	??_lcd_init,f
  2620     0514  2D13               	goto	u1357
  2621     0515  0BA8               	decfsz	??_lcd_init+1,f
  2622     0516  2D13               	goto	u1357
  2623     0517  0000               	nop
  2624     0518                     l1635:
  2625                           
  2626                           ;newmain.c: 194: 
  2627     0518  3007               	movlw	7
  2628     0519  1283               	bcf	3,5	;RP0=0, select bank0
  2629     051A  1303               	bcf	3,6	;RP1=0, select bank0
  2630     051B  00A8               	movwf	??_lcd_init+1
  2631     051C  307C               	movlw	124
  2632     051D  00A7               	movwf	??_lcd_init
  2633     051E                     u1367:
  2634     051E  0BA7               	decfsz	??_lcd_init,f
  2635     051F  2D1E               	goto	u1367
  2636     0520  0BA8               	decfsz	??_lcd_init+1,f
  2637     0521  2D1E               	goto	u1367
  2638     0522  0000               	nop
  2639     0523                     l1637:
  2640                           
  2641                           ;newmain.c: 195:   TRISA = 0XFF;
  2642     0523  3006               	movlw	6
  2643     0524  120A  118A  22BC  120A  118A  	fcall	_lcd_send_cmd
  2644                           
  2645                           ;newmain.c: 196:   TRISB = 0x00;
  2646     0529  3007               	movlw	7
  2647     052A  1283               	bcf	3,5	;RP0=0, select bank0
  2648     052B  1303               	bcf	3,6	;RP1=0, select bank0
  2649     052C  00A8               	movwf	??_lcd_init+1
  2650     052D  307C               	movlw	124
  2651     052E  00A7               	movwf	??_lcd_init
  2652     052F                     u1377:
  2653     052F  0BA7               	decfsz	??_lcd_init,f
  2654     0530  2D2F               	goto	u1377
  2655     0531  0BA8               	decfsz	??_lcd_init+1,f
  2656     0532  2D2F               	goto	u1377
  2657     0533  0000               	nop
  2658     0534                     l1639:
  2659                           
  2660                           ;newmain.c: 197:   TRISD = 0x00;
  2661     0534  300C               	movlw	12
  2662     0535  120A  118A  22BC  120A  118A  	fcall	_lcd_send_cmd
  2663     053A                     l120:
  2664     053A  0008               	return
  2665     053B                     __end_of_lcd_init:
  2666                           
  2667                           	psect	text9
  2668     01E8                     __ptext9:	
  2669 ;; *************** function _lcd_clear *****************
  2670 ;; Defined at:
  2671 ;;		line 149 in file "newmain.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;		None
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  i               2   12[COMMON] int 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      void 
  2678 ;; Registers used:
  2679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2685 ;;      Params:         0       0       0       0       0
  2686 ;;      Locals:         2       0       0       0       0
  2687 ;;      Temps:          0       0       0       0       0
  2688 ;;      Totals:         2       0       0       0       0
  2689 ;;Total ram usage:        2 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; Hardware stack levels required when called: 4
  2692 ;; This function calls:
  2693 ;;		_lcd_send_cmd
  2694 ;;		_lcd_send_data
  2695 ;; This function is called by:
  2696 ;;		_main
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700     01E8                     _lcd_clear:	
  2701                           ;psect for function _lcd_clear
  2702                           
  2703     01E8                     l1585:	
  2704                           ;incstack = 0
  2705                           ; Regs used in _lcd_clear: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2706                           
  2707                           
  2708                           ;newmain.c: 151:     }
  2709     01E8  3080               	movlw	128
  2710     01E9  120A  118A  22BC  120A  118A  	fcall	_lcd_send_cmd
  2711     01EE                     l1587:
  2712                           
  2713                           ;newmain.c: 152: 
  2714     01EE  01FC               	clrf	lcd_clear@i
  2715     01EF  01FD               	clrf	lcd_clear@i+1
  2716     01F0                     l1593:
  2717                           
  2718                           ;newmain.c: 153:     lcd_send_cmd (col);;newmain.c: 154: }
  2719     01F0  3020               	movlw	32
  2720     01F1  120A  118A  2300  120A  118A  	fcall	_lcd_send_data
  2721     01F6                     l1595:
  2722                           
  2723                           ;newmain.c: 155: 
  2724     01F6  3001               	movlw	1
  2725     01F7  07FC               	addwf	lcd_clear@i,f
  2726     01F8  1803               	skipnc
  2727     01F9  0AFD               	incf	lcd_clear@i+1,f
  2728     01FA  3000               	movlw	0
  2729     01FB  07FD               	addwf	lcd_clear@i+1,f
  2730     01FC                     l1597:
  2731     01FC  087D               	movf	lcd_clear@i+1,w
  2732     01FD  3A80               	xorlw	128
  2733     01FE  00FF               	movwf	btemp+1
  2734     01FF  3080               	movlw	128
  2735     0200  027F               	subwf	btemp+1,w
  2736     0201  1D03               	skipz
  2737     0202  2A05               	goto	u945
  2738     0203  3046               	movlw	70
  2739     0204  027C               	subwf	lcd_clear@i,w
  2740     0205                     u945:
  2741     0205  1C03               	skipc
  2742     0206  2A08               	goto	u941
  2743     0207  2A09               	goto	u940
  2744     0208                     u941:
  2745     0208  29F0               	goto	l1593
  2746     0209                     u940:
  2747     0209                     l110:
  2748     0209  0008               	return
  2749     020A                     __end_of_lcd_clear:
  2750                           
  2751                           	psect	text10
  2752     0300                     __ptext10:	
  2753 ;; *************** function _lcd_send_data *****************
  2754 ;; Defined at:
  2755 ;;		line 132 in file "newmain.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  data            1    wreg     unsigned char 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  data            1    4[BANK0 ] unsigned char 
  2760 ;;  data_t          4    0[BANK0 ] unsigned char [4]
  2761 ;;  data_l          1    6[BANK0 ] unsigned char 
  2762 ;;  data_u          1    5[BANK0 ] unsigned char 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      void 
  2765 ;; Registers used:
  2766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2772 ;;      Params:         0       0       0       0       0
  2773 ;;      Locals:         0       7       0       0       0
  2774 ;;      Temps:          3       0       0       0       0
  2775 ;;      Totals:         3       7       0       0       0
  2776 ;;Total ram usage:       10 bytes
  2777 ;; Hardware stack levels used: 1
  2778 ;; Hardware stack levels required when called: 3
  2779 ;; This function calls:
  2780 ;;		_I2C_Multi_Send
  2781 ;;		_I2C_Start
  2782 ;;		_I2C_Stop
  2783 ;; This function is called by:
  2784 ;;		_lcd_clear
  2785 ;;		_lcd_send_string
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789     0300                     _lcd_send_data:	
  2790                           ;psect for function _lcd_send_data
  2791                           
  2792                           
  2793                           ;incstack = 0
  2794                           ; Regs used in _lcd_send_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2795                           ;lcd_send_data@data stored from wreg
  2796     0300  1283               	bcf	3,5	;RP0=0, select bank0
  2797     0301  1303               	bcf	3,6	;RP1=0, select bank0
  2798     0302  00A4               	movwf	lcd_send_data@data
  2799     0303                     l1457:
  2800                           
  2801                           ;newmain.c: 132: void lcd_clear (void);newmain.c: 133: {;newmain.c: 134:  lcd_send_cmd (
      +                          0x80);;newmain.c: 135:  for (int i=0; i<70; i++);newmain.c: 136:  {
  2802     0303  0824               	movf	lcd_send_data@data,w
  2803     0304  39F0               	andlw	240
  2804     0305  00A5               	movwf	lcd_send_data@data_u
  2805     0306                     l1459:
  2806                           
  2807                           ;newmain.c: 137:   lcd_send_data (' ');
  2808     0306  0824               	movf	lcd_send_data@data,w
  2809     0307  00F9               	movwf	??_lcd_send_data
  2810     0308  3003               	movlw	3
  2811     0309                     u705:
  2812     0309  1003               	clrc
  2813     030A  0DF9               	rlf	??_lcd_send_data,f
  2814     030B  3EFF               	addlw	-1
  2815     030C  1D03               	skipz
  2816     030D  2B09               	goto	u705
  2817     030E  1003               	clrc
  2818     030F  0D79               	rlf	??_lcd_send_data,w
  2819     0310  39F0               	andlw	240
  2820     0311  00A6               	movwf	lcd_send_data@data_l
  2821     0312                     l1461:
  2822                           
  2823                           ;newmain.c: 138:  }
  2824     0312  0825               	movf	lcd_send_data@data_u,w
  2825     0313  380D               	iorlw	13
  2826     0314  00A0               	movwf	lcd_send_data@data_t
  2827     0315                     l1463:
  2828                           
  2829                           ;newmain.c: 139: }
  2830     0315  0825               	movf	lcd_send_data@data_u,w
  2831     0316  3809               	iorlw	9
  2832     0317  00A1               	movwf	lcd_send_data@data_t+1
  2833     0318                     l1465:
  2834                           
  2835                           ;newmain.c: 140: 
  2836     0318  0826               	movf	lcd_send_data@data_l,w
  2837     0319  380D               	iorlw	13
  2838     031A  00A2               	movwf	lcd_send_data@data_t+2
  2839     031B                     l1467:
  2840                           
  2841                           ;newmain.c: 141: void lcd_put_cur(int row, int col)
  2842     031B  0826               	movf	lcd_send_data@data_l,w
  2843     031C  3809               	iorlw	9
  2844     031D  00A3               	movwf	lcd_send_data@data_t+3
  2845     031E                     l1469:
  2846                           
  2847                           ;newmain.c: 142: {
  2848     031E  120A  118A  2174  120A  118A  	fcall	_I2C_Start
  2849     0323                     l1471:
  2850                           
  2851                           ;newmain.c: 143:     switch (row)
  2852     0323  3027               	movlw	39
  2853     0324  00F1               	movwf	I2C_Multi_Send@address
  2854     0325  3020               	movlw	(low (lcd_send_data@data_t| 0))& (0+255)
  2855     0326  00F2               	movwf	I2C_Multi_Send@data
  2856     0327  3004               	movlw	4
  2857     0328  00F3               	movwf	I2C_Multi_Send@size
  2858     0329  3000               	movlw	0
  2859     032A  00F4               	movwf	I2C_Multi_Send@size+1
  2860     032B  3000               	movlw	0
  2861     032C  120A  118A  2255  120A  118A  	fcall	_I2C_Multi_Send
  2862     0331                     l1473:
  2863                           
  2864                           ;newmain.c: 144:     {
  2865     0331  120A  118A  217D  120A  118A  	fcall	_I2C_Stop
  2866     0336                     l1475:
  2867                           
  2868                           ;newmain.c: 145:         case 0:
  2869     0336  3002               	movlw	2
  2870     0337  00FB               	movwf	??_lcd_send_data+2
  2871     0338  3045               	movlw	69
  2872     0339  00FA               	movwf	??_lcd_send_data+1
  2873     033A  30A9               	movlw	169
  2874     033B  00F9               	movwf	??_lcd_send_data
  2875     033C                     u1387:
  2876     033C  0BF9               	decfsz	??_lcd_send_data,f
  2877     033D  2B3C               	goto	u1387
  2878     033E  0BFA               	decfsz	??_lcd_send_data+1,f
  2879     033F  2B3C               	goto	u1387
  2880     0340  0BFB               	decfsz	??_lcd_send_data+2,f
  2881     0341  2B3C               	goto	u1387
  2882     0342  2B43               	nop2
  2883     0343                     l105:
  2884     0343  0008               	return
  2885     0344                     __end_of_lcd_send_data:
  2886                           
  2887                           	psect	text11
  2888     02BC                     __ptext11:	
  2889 ;; *************** function _lcd_send_cmd *****************
  2890 ;; Defined at:
  2891 ;;		line 115 in file "newmain.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;  cmd             1    wreg     unsigned char 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  cmd             1    4[BANK0 ] unsigned char 
  2896 ;;  data_t          4    0[BANK0 ] unsigned char [4]
  2897 ;;  data_l          1    6[BANK0 ] unsigned char 
  2898 ;;  data_u          1    5[BANK0 ] unsigned char 
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      void 
  2901 ;; Registers used:
  2902 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2908 ;;      Params:         0       0       0       0       0
  2909 ;;      Locals:         0       7       0       0       0
  2910 ;;      Temps:          3       0       0       0       0
  2911 ;;      Totals:         3       7       0       0       0
  2912 ;;Total ram usage:       10 bytes
  2913 ;; Hardware stack levels used: 1
  2914 ;; Hardware stack levels required when called: 3
  2915 ;; This function calls:
  2916 ;;		_I2C_Multi_Send
  2917 ;;		_I2C_Start
  2918 ;;		_I2C_Stop
  2919 ;; This function is called by:
  2920 ;;		_lcd_clear
  2921 ;;		_lcd_put_cur
  2922 ;;		_lcd_init
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926     02BC                     _lcd_send_cmd:	
  2927                           ;psect for function _lcd_send_cmd
  2928                           
  2929                           
  2930                           ;incstack = 0
  2931                           ; Regs used in _lcd_send_cmd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2932                           ;lcd_send_cmd@cmd stored from wreg
  2933     02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2934     02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2935     02BE  00A4               	movwf	lcd_send_cmd@cmd
  2936     02BF                     l1437:
  2937                           
  2938                           ;newmain.c: 115: void lcd_send_data (char data);newmain.c: 116: {;newmain.c: 117:  char 
      +                          data_u, data_l;;newmain.c: 118:  uint8_t data_t[4];;newmain.c: 119:  data_u = (data&0xf0
      +                          );
  2939     02BF  0824               	movf	lcd_send_cmd@cmd,w
  2940     02C0  39F0               	andlw	240
  2941     02C1  00A5               	movwf	lcd_send_cmd@data_u
  2942     02C2                     l1439:
  2943                           
  2944                           ;newmain.c: 120:  data_l = ((data<<4)&0xf0);
  2945     02C2  0824               	movf	lcd_send_cmd@cmd,w
  2946     02C3  00F9               	movwf	??_lcd_send_cmd
  2947     02C4  3003               	movlw	3
  2948     02C5                     u695:
  2949     02C5  1003               	clrc
  2950     02C6  0DF9               	rlf	??_lcd_send_cmd,f
  2951     02C7  3EFF               	addlw	-1
  2952     02C8  1D03               	skipz
  2953     02C9  2AC5               	goto	u695
  2954     02CA  1003               	clrc
  2955     02CB  0D79               	rlf	??_lcd_send_cmd,w
  2956     02CC  39F0               	andlw	240
  2957     02CD  00A6               	movwf	lcd_send_cmd@data_l
  2958     02CE                     l1441:
  2959                           
  2960                           ;newmain.c: 121:  data_t[0] = data_u|0x0D;
  2961     02CE  0825               	movf	lcd_send_cmd@data_u,w
  2962     02CF  380C               	iorlw	12
  2963     02D0  00A0               	movwf	lcd_send_cmd@data_t
  2964     02D1                     l1443:
  2965                           
  2966                           ;newmain.c: 122:  data_t[1] = data_u|0x09;
  2967     02D1  0825               	movf	lcd_send_cmd@data_u,w
  2968     02D2  3808               	iorlw	8
  2969     02D3  00A1               	movwf	lcd_send_cmd@data_t+1
  2970     02D4                     l1445:
  2971                           
  2972                           ;newmain.c: 123:  data_t[2] = data_l|0x0D;
  2973     02D4  0826               	movf	lcd_send_cmd@data_l,w
  2974     02D5  380C               	iorlw	12
  2975     02D6  00A2               	movwf	lcd_send_cmd@data_t+2
  2976     02D7                     l1447:
  2977                           
  2978                           ;newmain.c: 124:  data_t[3] = data_l|0x09;
  2979     02D7  0826               	movf	lcd_send_cmd@data_l,w
  2980     02D8  3808               	iorlw	8
  2981     02D9  00A3               	movwf	lcd_send_cmd@data_t+3
  2982     02DA                     l1449:
  2983                           
  2984                           ;newmain.c: 125:  I2C_Start();
  2985     02DA  120A  118A  2174  120A  118A  	fcall	_I2C_Start
  2986     02DF                     l1451:
  2987                           
  2988                           ;newmain.c: 126:     I2C_Multi_Send(0,0X27,data_t,sizeof(data_t));
  2989     02DF  3027               	movlw	39
  2990     02E0  00F1               	movwf	I2C_Multi_Send@address
  2991     02E1  3020               	movlw	(low (lcd_send_cmd@data_t| 0))& (0+255)
  2992     02E2  00F2               	movwf	I2C_Multi_Send@data
  2993     02E3  3004               	movlw	4
  2994     02E4  00F3               	movwf	I2C_Multi_Send@size
  2995     02E5  3000               	movlw	0
  2996     02E6  00F4               	movwf	I2C_Multi_Send@size+1
  2997     02E7  3000               	movlw	0
  2998     02E8  120A  118A  2255  120A  118A  	fcall	_I2C_Multi_Send
  2999     02ED                     l1453:
  3000                           
  3001                           ;newmain.c: 127:     I2C_Stop();
  3002     02ED  120A  118A  217D  120A  118A  	fcall	_I2C_Stop
  3003     02F2                     l1455:
  3004                           
  3005                           ;newmain.c: 128:     _delay((unsigned long)((50)*(20000000/4000.0)));
  3006     02F2  3002               	movlw	2
  3007     02F3  00FB               	movwf	??_lcd_send_cmd+2
  3008     02F4  3045               	movlw	69
  3009     02F5  00FA               	movwf	??_lcd_send_cmd+1
  3010     02F6  30A9               	movlw	169
  3011     02F7  00F9               	movwf	??_lcd_send_cmd
  3012     02F8                     u1397:
  3013     02F8  0BF9               	decfsz	??_lcd_send_cmd,f
  3014     02F9  2AF8               	goto	u1397
  3015     02FA  0BFA               	decfsz	??_lcd_send_cmd+1,f
  3016     02FB  2AF8               	goto	u1397
  3017     02FC  0BFB               	decfsz	??_lcd_send_cmd+2,f
  3018     02FD  2AF8               	goto	u1397
  3019     02FE  2AFF               	nop2
  3020     02FF                     l102:
  3021     02FF  0008               	return
  3022     0300                     __end_of_lcd_send_cmd:
  3023                           
  3024                           	psect	text12
  3025     017D                     __ptext12:	
  3026 ;; *************** function _I2C_Stop *****************
  3027 ;; Defined at:
  3028 ;;		line 48 in file "newmain.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      void 
  3035 ;; Registers used:
  3036 ;;		wreg, status,2, status,0, pclath, cstack
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3042 ;;      Params:         0       0       0       0       0
  3043 ;;      Locals:         0       0       0       0       0
  3044 ;;      Temps:          0       0       0       0       0
  3045 ;;      Totals:         0       0       0       0       0
  3046 ;;Total ram usage:        0 bytes
  3047 ;; Hardware stack levels used: 1
  3048 ;; Hardware stack levels required when called: 1
  3049 ;; This function calls:
  3050 ;;		_I2C_IDLE
  3051 ;; This function is called by:
  3052 ;;		_lcd_send_cmd
  3053 ;;		_lcd_send_data
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057     017D                     _I2C_Stop:	
  3058                           ;psect for function _I2C_Stop
  3059                           
  3060     017D                     l1421:	
  3061                           ;incstack = 0
  3062                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  3063                           
  3064                           
  3065                           ;newmain.c: 50: {
  3066     017D  120A  118A  2186  120A  118A  	fcall	_I2C_IDLE
  3067     0182                     l1423:
  3068                           
  3069                           ;newmain.c: 51: I2C_IDLE();
  3070     0182  1683               	bsf	3,5	;RP0=1, select bank1
  3071     0183  1303               	bcf	3,6	;RP1=0, select bank1
  3072     0184  1511               	bsf	17,2	;volatile
  3073     0185                     l65:
  3074     0185  0008               	return
  3075     0186                     __end_of_I2C_Stop:
  3076                           
  3077                           	psect	text13
  3078     0174                     __ptext13:	
  3079 ;; *************** function _I2C_Start *****************
  3080 ;; Defined at:
  3081 ;;		line 42 in file "newmain.c"
  3082 ;; Parameters:    Size  Location     Type
  3083 ;;		None
  3084 ;; Auto vars:     Size  Location     Type
  3085 ;;		None
  3086 ;; Return value:  Size  Location     Type
  3087 ;;                  1    wreg      void 
  3088 ;; Registers used:
  3089 ;;		wreg, status,2, status,0, pclath, cstack
  3090 ;; Tracked objects:
  3091 ;;		On entry : 0/0
  3092 ;;		On exit  : 0/0
  3093 ;;		Unchanged: 0/0
  3094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3095 ;;      Params:         0       0       0       0       0
  3096 ;;      Locals:         0       0       0       0       0
  3097 ;;      Temps:          0       0       0       0       0
  3098 ;;      Totals:         0       0       0       0       0
  3099 ;;Total ram usage:        0 bytes
  3100 ;; Hardware stack levels used: 1
  3101 ;; Hardware stack levels required when called: 1
  3102 ;; This function calls:
  3103 ;;		_I2C_IDLE
  3104 ;; This function is called by:
  3105 ;;		_lcd_send_cmd
  3106 ;;		_lcd_send_data
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110     0174                     _I2C_Start:	
  3111                           ;psect for function _I2C_Start
  3112                           
  3113     0174                     l1417:	
  3114                           ;incstack = 0
  3115                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  3116                           
  3117                           
  3118                           ;newmain.c: 44: {
  3119     0174  120A  118A  2186  120A  118A  	fcall	_I2C_IDLE
  3120     0179                     l1419:
  3121                           
  3122                           ;newmain.c: 45:   I2C_IDLE();
  3123     0179  1683               	bsf	3,5	;RP0=1, select bank1
  3124     017A  1303               	bcf	3,6	;RP1=0, select bank1
  3125     017B  1411               	bsf	17,0	;volatile
  3126     017C                     l62:
  3127     017C  0008               	return
  3128     017D                     __end_of_I2C_Start:
  3129                           
  3130                           	psect	text14
  3131     0255                     __ptext14:	
  3132 ;; *************** function _I2C_Multi_Send *****************
  3133 ;; Defined at:
  3134 ;;		line 89 in file "newmain.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;  cmd             1    wreg     unsigned char 
  3137 ;;  address         1    1[COMMON] unsigned char 
  3138 ;;  data            1    2[COMMON] PTR unsigned char 
  3139 ;;		 -> lcd_send_data@data_t(4), lcd_send_cmd@data_t(4), 
  3140 ;;  size            2    3[COMMON] int 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  cmd             1    0[COMMON] unsigned char 
  3143 ;;  n               2    7[COMMON] int 
  3144 ;;  send            1    6[COMMON] unsigned char 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  1    wreg      void 
  3147 ;; Registers used:
  3148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3154 ;;      Params:         4       0       0       0       0
  3155 ;;      Locals:         3       0       0       0       0
  3156 ;;      Temps:          1       0       0       0       0
  3157 ;;      Totals:         8       0       0       0       0
  3158 ;;Total ram usage:        8 bytes
  3159 ;; Hardware stack levels used: 1
  3160 ;; Hardware stack levels required when called: 2
  3161 ;; This function calls:
  3162 ;;		_I2C_Write
  3163 ;; This function is called by:
  3164 ;;		_lcd_send_cmd
  3165 ;;		_lcd_send_data
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169     0255                     _I2C_Multi_Send:	
  3170                           ;psect for function _I2C_Multi_Send
  3171                           
  3172     0255                     l1425:	
  3173                           ;incstack = 0
  3174                           ; Regs used in _I2C_Multi_Send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3175                           
  3176                           
  3177                           ;newmain.c: 90:     ADCON0bits.CHS2 = 0;
  3178     0255  0871               	movf	I2C_Multi_Send@address,w
  3179     0256  00F5               	movwf	??_I2C_Multi_Send
  3180     0257  0775               	addwf	??_I2C_Multi_Send,w
  3181     0258  39FE               	andlw	254
  3182     0259  00F6               	movwf	I2C_Multi_Send@send
  3183     025A                     l1427:
  3184                           
  3185                           ;newmain.c: 91: 
  3186     025A  0876               	movf	I2C_Multi_Send@send,w
  3187     025B  120A  118A  2193  120A  118A  	fcall	_I2C_Write
  3188     0260                     l1429:
  3189                           
  3190                           ;newmain.c: 92:     ADCON0 |= channel<<3;
  3191     0260  01F7               	clrf	I2C_Multi_Send@n
  3192     0261  01F8               	clrf	I2C_Multi_Send@n+1
  3193     0262  2A75               	goto	l1435
  3194     0263                     l1431:
  3195                           
  3196                           ;newmain.c: 93:     GO_DONE = 1;
  3197     0263  0877               	movf	I2C_Multi_Send@n,w
  3198     0264  0772               	addwf	I2C_Multi_Send@data,w
  3199     0265  00F5               	movwf	??_I2C_Multi_Send
  3200     0266  0875               	movf	??_I2C_Multi_Send,w
  3201     0267  0084               	movwf	4
  3202     0268  1383               	bcf	3,7	;select IRP bank0
  3203     0269  0800               	movf	0,w
  3204     026A  120A  118A  2193  120A  118A  	fcall	_I2C_Write
  3205     026F                     l1433:
  3206                           
  3207                           ;newmain.c: 94:     while(GO_DONE);
  3208     026F  3001               	movlw	1
  3209     0270  07F7               	addwf	I2C_Multi_Send@n,f
  3210     0271  1803               	skipnc
  3211     0272  0AF8               	incf	I2C_Multi_Send@n+1,f
  3212     0273  3000               	movlw	0
  3213     0274  07F8               	addwf	I2C_Multi_Send@n+1,f
  3214     0275                     l1435:
  3215     0275  0878               	movf	I2C_Multi_Send@n+1,w
  3216     0276  3A80               	xorlw	128
  3217     0277  00F5               	movwf	??_I2C_Multi_Send
  3218     0278  0874               	movf	I2C_Multi_Send@size+1,w
  3219     0279  3A80               	xorlw	128
  3220     027A  0275               	subwf	??_I2C_Multi_Send,w
  3221     027B  1D03               	skipz
  3222     027C  2A7F               	goto	u685
  3223     027D  0873               	movf	I2C_Multi_Send@size,w
  3224     027E  0277               	subwf	I2C_Multi_Send@n,w
  3225     027F                     u685:
  3226     027F  1C03               	skipc
  3227     0280  2A82               	goto	u681
  3228     0281  2A83               	goto	u680
  3229     0282                     u681:
  3230     0282  2A63               	goto	l1431
  3231     0283                     u680:
  3232     0283                     l89:
  3233     0283  0008               	return
  3234     0284                     __end_of_I2C_Multi_Send:
  3235                           
  3236                           	psect	text15
  3237     0193                     __ptext15:	
  3238 ;; *************** function _I2C_Write *****************
  3239 ;; Defined at:
  3240 ;;		line 73 in file "newmain.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  Data            1    wreg     unsigned char 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  Data            1    0[COMMON] unsigned char 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      unsigned char 
  3247 ;; Registers used:
  3248 ;;		wreg, status,2, status,0, pclath, cstack
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3254 ;;      Params:         0       0       0       0       0
  3255 ;;      Locals:         1       0       0       0       0
  3256 ;;      Temps:          0       0       0       0       0
  3257 ;;      Totals:         1       0       0       0       0
  3258 ;;Total ram usage:        1 bytes
  3259 ;; Hardware stack levels used: 1
  3260 ;; Hardware stack levels required when called: 1
  3261 ;; This function calls:
  3262 ;;		_I2C_IDLE
  3263 ;; This function is called by:
  3264 ;;		_I2C_Multi_Send
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268     0193                     _I2C_Write:	
  3269                           ;psect for function _I2C_Write
  3270                           
  3271                           
  3272                           ;incstack = 0
  3273                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  3274                           ;I2C_Write@Data stored from wreg
  3275     0193  00F0               	movwf	I2C_Write@Data
  3276     0194                     l1407:
  3277                           
  3278                           ;newmain.c: 73:     uint8_t send = (uint8_t) ((address << 1) & (0b11111110));;newmain.c:
      +                           74:     I2C_Write(send);;newmain.c: 75:     for(int n = 0; n < size; n++){
  3279     0194  120A  118A  2186  120A  118A  	fcall	_I2C_IDLE
  3280     0199                     l1409:
  3281                           
  3282                           ;newmain.c: 76:         I2C_Write(data[n]);
  3283     0199  0870               	movf	I2C_Write@Data,w
  3284     019A  1283               	bcf	3,5	;RP0=0, select bank0
  3285     019B  1303               	bcf	3,6	;RP1=0, select bank0
  3286     019C  0093               	movwf	19	;volatile
  3287     019D                     l1411:
  3288                           
  3289                           ;newmain.c: 77:     }
  3290     019D  120A  118A  2186  120A  118A  	fcall	_I2C_IDLE
  3291     01A2                     l1413:
  3292     01A2                     l77:	
  3293                           ;newmain.c: 78: };	Return value of _I2C_Write is never used
  3294                           
  3295     01A2  0008               	return
  3296     01A3                     __end_of_I2C_Write:
  3297                           
  3298                           	psect	text16
  3299     0186                     __ptext16:	
  3300 ;; *************** function _I2C_IDLE *****************
  3301 ;; Defined at:
  3302 ;;		line 37 in file "newmain.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;		None
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;		None
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		wreg, status,2
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3316 ;;      Params:         0       0       0       0       0
  3317 ;;      Locals:         0       0       0       0       0
  3318 ;;      Temps:          0       0       0       0       0
  3319 ;;      Totals:         0       0       0       0       0
  3320 ;;Total ram usage:        0 bytes
  3321 ;; Hardware stack levels used: 1
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_I2C_Start
  3326 ;;		_I2C_Stop
  3327 ;;		_I2C_Write
  3328 ;;		_I2C_Restart
  3329 ;;		_I2C_ACK
  3330 ;;		_I2C_NACK
  3331 ;; This function uses a non-reentrant model
  3332 ;;
  3333                           
  3334     0186                     _I2C_IDLE:	
  3335                           ;psect for function _I2C_IDLE
  3336                           
  3337     0186                     l1403:	
  3338                           ;incstack = 0
  3339                           ; Regs used in _I2C_IDLE: [wreg+status,2]
  3340                           
  3341     0186                     l56:	
  3342                           ;newmain.c: 39: I2C_IDLE();
  3343                           
  3344     0186  1683               	bsf	3,5	;RP0=1, select bank1
  3345     0187  1303               	bcf	3,6	;RP1=0, select bank1
  3346     0188  1914               	btfsc	20,2	;volatile
  3347     0189  298B               	goto	u661
  3348     018A  298C               	goto	u660
  3349     018B                     u661:
  3350     018B  2986               	goto	l56
  3351     018C                     u660:
  3352     018C                     l1405:
  3353     018C  0811               	movf	17,w	;volatile
  3354     018D  391F               	andlw	31
  3355     018E  1D03               	btfss	3,2
  3356     018F  2991               	goto	u671
  3357     0190  2992               	goto	u670
  3358     0191                     u671:
  3359     0191  2986               	goto	l56
  3360     0192                     u670:
  3361     0192                     l59:
  3362     0192  0008               	return
  3363     0193                     __end_of_I2C_IDLE:
  3364                           
  3365                           	psect	text17
  3366     0284                     __ptext17:	
  3367 ;; *************** function _I2C_Master_Init *****************
  3368 ;; Defined at:
  3369 ;;		line 28 in file "newmain.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  c               4    0[BANK0 ] const unsigned long 
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;		None
  3374 ;; Return value:  Size  Location     Type
  3375 ;;                  1    wreg      void 
  3376 ;; Registers used:
  3377 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3378 ;; Tracked objects:
  3379 ;;		On entry : 0/0
  3380 ;;		On exit  : 0/0
  3381 ;;		Unchanged: 0/0
  3382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3383 ;;      Params:         0       4       0       0       0
  3384 ;;      Locals:         0       0       0       0       0
  3385 ;;      Temps:          0       4       0       0       0
  3386 ;;      Totals:         0       8       0       0       0
  3387 ;;Total ram usage:        8 bytes
  3388 ;; Hardware stack levels used: 1
  3389 ;; Hardware stack levels required when called: 1
  3390 ;; This function calls:
  3391 ;;		___lldiv
  3392 ;; This function is called by:
  3393 ;;		_main
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397     0284                     _I2C_Master_Init:	
  3398                           ;psect for function _I2C_Master_Init
  3399                           
  3400     0284                     l1571:	
  3401                           ;incstack = 0
  3402                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3403                           
  3404                           
  3405                           ;newmain.c: 29: }
  3406     0284  3028               	movlw	40
  3407     0285  1283               	bcf	3,5	;RP0=0, select bank0
  3408     0286  1303               	bcf	3,6	;RP1=0, select bank0
  3409     0287  0094               	movwf	20	;volatile
  3410     0288                     l1573:
  3411                           
  3412                           ;newmain.c: 30: 
  3413     0288  1683               	bsf	3,5	;RP0=1, select bank1
  3414     0289  1303               	bcf	3,6	;RP1=0, select bank1
  3415     028A  0191               	clrf	17	;volatile
  3416     028B                     l1575:
  3417                           
  3418                           ;newmain.c: 31: void I2C_Stop()
  3419     028B  0194               	clrf	20	;volatile
  3420     028C                     l1577:
  3421                           
  3422                           ;newmain.c: 32: {
  3423     028C  1283               	bcf	3,5	;RP0=0, select bank0
  3424     028D  1303               	bcf	3,6	;RP1=0, select bank0
  3425     028E  0820               	movf	I2C_Master_Init@c,w
  3426     028F  00A4               	movwf	??_I2C_Master_Init
  3427     0290  0821               	movf	I2C_Master_Init@c+1,w
  3428     0291  00A5               	movwf	??_I2C_Master_Init+1
  3429     0292  0822               	movf	I2C_Master_Init@c+2,w
  3430     0293  00A6               	movwf	??_I2C_Master_Init+2
  3431     0294  0823               	movf	I2C_Master_Init@c+3,w
  3432     0295  00A7               	movwf	??_I2C_Master_Init+3
  3433     0296  3002               	movlw	2
  3434     0297                     u935:
  3435     0297  1003               	clrc
  3436     0298  0DA4               	rlf	??_I2C_Master_Init,f
  3437     0299  0DA5               	rlf	??_I2C_Master_Init+1,f
  3438     029A  0DA6               	rlf	??_I2C_Master_Init+2,f
  3439     029B  0DA7               	rlf	??_I2C_Master_Init+3,f
  3440     029C                     u930:
  3441     029C  3EFF               	addlw	-1
  3442     029D  1D03               	skipz
  3443     029E  2A97               	goto	u935
  3444     029F  0827               	movf	??_I2C_Master_Init+3,w
  3445     02A0  00F3               	movwf	___lldiv@divisor+3
  3446     02A1  0826               	movf	??_I2C_Master_Init+2,w
  3447     02A2  00F2               	movwf	___lldiv@divisor+2
  3448     02A3  0825               	movf	??_I2C_Master_Init+1,w
  3449     02A4  00F1               	movwf	___lldiv@divisor+1
  3450     02A5  0824               	movf	??_I2C_Master_Init,w
  3451     02A6  00F0               	movwf	___lldiv@divisor
  3452     02A7  3001               	movlw	1
  3453     02A8  00F7               	movwf	___lldiv@dividend+3
  3454     02A9  3031               	movlw	49
  3455     02AA  00F6               	movwf	___lldiv@dividend+2
  3456     02AB  302D               	movlw	45
  3457     02AC  00F5               	movwf	___lldiv@dividend+1
  3458     02AD  3000               	movlw	0
  3459     02AE  00F4               	movwf	___lldiv@dividend
  3460     02AF  120A  118A  2388  120A  118A  	fcall	___lldiv
  3461     02B4  0870               	movf	?___lldiv,w
  3462     02B5  3EFF               	addlw	255
  3463     02B6  1683               	bsf	3,5	;RP0=1, select bank1
  3464     02B7  1303               	bcf	3,6	;RP1=0, select bank1
  3465     02B8  0093               	movwf	19	;volatile
  3466     02B9                     l1579:
  3467                           
  3468                           ;newmain.c: 33: I2C_IDLE();
  3469     02B9  1587               	bsf	7,3	;volatile
  3470     02BA                     l1581:
  3471                           
  3472                           ;newmain.c: 34: SSPCON2bits.PEN = 1;
  3473     02BA  1607               	bsf	7,4	;volatile
  3474     02BB                     l53:
  3475     02BB  0008               	return
  3476     02BC                     __end_of_I2C_Master_Init:
  3477                           
  3478                           	psect	text18
  3479     0388                     __ptext18:	
  3480 ;; *************** function ___lldiv *****************
  3481 ;; Defined at:
  3482 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\__lldiv.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;  divisor         4    0[COMMON] unsigned long 
  3485 ;;  dividend        4    4[COMMON] unsigned long 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;  quotient        4    9[COMMON] unsigned long 
  3488 ;;  counter         1   13[COMMON] unsigned char 
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  4    0[COMMON] unsigned long 
  3491 ;; Registers used:
  3492 ;;		wreg, status,2, status,0, btemp+1
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/0
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3498 ;;      Params:         8       0       0       0       0
  3499 ;;      Locals:         5       0       0       0       0
  3500 ;;      Temps:          1       0       0       0       0
  3501 ;;      Totals:        14       0       0       0       0
  3502 ;;Total ram usage:       14 bytes
  3503 ;; Hardware stack levels used: 1
  3504 ;; This function calls:
  3505 ;;		Nothing
  3506 ;; This function is called by:
  3507 ;;		_I2C_Master_Init
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511     0388                     ___lldiv:	
  3512                           ;psect for function ___lldiv
  3513                           
  3514     0388                     l1519:	
  3515                           ;incstack = 0
  3516                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  3517                           
  3518     0388  3000               	movlw	0
  3519     0389  00FC               	movwf	___lldiv@quotient+3
  3520     038A  3000               	movlw	0
  3521     038B  00FB               	movwf	___lldiv@quotient+2
  3522     038C  3000               	movlw	0
  3523     038D  00FA               	movwf	___lldiv@quotient+1
  3524     038E  3000               	movlw	0
  3525     038F  00F9               	movwf	___lldiv@quotient
  3526     0390  0873               	movf	___lldiv@divisor+3,w
  3527     0391  0472               	iorwf	___lldiv@divisor+2,w
  3528     0392  0471               	iorwf	___lldiv@divisor+1,w
  3529     0393  0470               	iorwf	___lldiv@divisor,w
  3530     0394  1903               	skipnz
  3531     0395  2B97               	goto	u791
  3532     0396  2B98               	goto	u790
  3533     0397                     u791:
  3534     0397  2BE5               	goto	l1541
  3535     0398                     u790:
  3536     0398                     l1521:
  3537     0398  01FD               	clrf	___lldiv@counter
  3538     0399  0AFD               	incf	___lldiv@counter,f
  3539     039A  2BA8               	goto	l1527
  3540     039B                     l1523:
  3541     039B  3001               	movlw	1
  3542     039C  00F8               	movwf	??___lldiv
  3543     039D                     u805:
  3544     039D  1003               	clrc
  3545     039E  0DF0               	rlf	___lldiv@divisor,f
  3546     039F  0DF1               	rlf	___lldiv@divisor+1,f
  3547     03A0  0DF2               	rlf	___lldiv@divisor+2,f
  3548     03A1  0DF3               	rlf	___lldiv@divisor+3,f
  3549     03A2  0BF8               	decfsz	??___lldiv,f
  3550     03A3  2B9D               	goto	u805
  3551     03A4                     l1525:
  3552     03A4  3001               	movlw	1
  3553     03A5  00FF               	movwf	btemp+1
  3554     03A6  087F               	movf	btemp+1,w
  3555     03A7  07FD               	addwf	___lldiv@counter,f
  3556     03A8                     l1527:
  3557     03A8  1FF3               	btfss	___lldiv@divisor+3,7
  3558     03A9  2BAB               	goto	u811
  3559     03AA  2BAC               	goto	u810
  3560     03AB                     u811:
  3561     03AB  2B9B               	goto	l1523
  3562     03AC                     u810:
  3563     03AC                     l1529:
  3564     03AC  3001               	movlw	1
  3565     03AD  00F8               	movwf	??___lldiv
  3566     03AE                     u825:
  3567     03AE  1003               	clrc
  3568     03AF  0DF9               	rlf	___lldiv@quotient,f
  3569     03B0  0DFA               	rlf	___lldiv@quotient+1,f
  3570     03B1  0DFB               	rlf	___lldiv@quotient+2,f
  3571     03B2  0DFC               	rlf	___lldiv@quotient+3,f
  3572     03B3  0BF8               	decfsz	??___lldiv,f
  3573     03B4  2BAE               	goto	u825
  3574     03B5                     l1531:
  3575     03B5  0873               	movf	___lldiv@divisor+3,w
  3576     03B6  0277               	subwf	___lldiv@dividend+3,w
  3577     03B7  1D03               	skipz
  3578     03B8  2BC3               	goto	u835
  3579     03B9  0872               	movf	___lldiv@divisor+2,w
  3580     03BA  0276               	subwf	___lldiv@dividend+2,w
  3581     03BB  1D03               	skipz
  3582     03BC  2BC3               	goto	u835
  3583     03BD  0871               	movf	___lldiv@divisor+1,w
  3584     03BE  0275               	subwf	___lldiv@dividend+1,w
  3585     03BF  1D03               	skipz
  3586     03C0  2BC3               	goto	u835
  3587     03C1  0870               	movf	___lldiv@divisor,w
  3588     03C2  0274               	subwf	___lldiv@dividend,w
  3589     03C3                     u835:
  3590     03C3  1C03               	skipc
  3591     03C4  2BC6               	goto	u831
  3592     03C5  2BC7               	goto	u830
  3593     03C6                     u831:
  3594     03C6  2BD6               	goto	l1537
  3595     03C7                     u830:
  3596     03C7                     l1533:
  3597     03C7  0870               	movf	___lldiv@divisor,w
  3598     03C8  02F4               	subwf	___lldiv@dividend,f
  3599     03C9  0871               	movf	___lldiv@divisor+1,w
  3600     03CA  1C03               	skipc
  3601     03CB  0F71               	incfsz	___lldiv@divisor+1,w
  3602     03CC  02F5               	subwf	___lldiv@dividend+1,f
  3603     03CD  0872               	movf	___lldiv@divisor+2,w
  3604     03CE  1C03               	skipc
  3605     03CF  0F72               	incfsz	___lldiv@divisor+2,w
  3606     03D0  02F6               	subwf	___lldiv@dividend+2,f
  3607     03D1  0873               	movf	___lldiv@divisor+3,w
  3608     03D2  1C03               	skipc
  3609     03D3  0F73               	incfsz	___lldiv@divisor+3,w
  3610     03D4  02F7               	subwf	___lldiv@dividend+3,f
  3611     03D5                     l1535:
  3612     03D5  1479               	bsf	___lldiv@quotient,0
  3613     03D6                     l1537:
  3614     03D6  3001               	movlw	1
  3615     03D7                     u845:
  3616     03D7  1003               	clrc
  3617     03D8  0CF3               	rrf	___lldiv@divisor+3,f
  3618     03D9  0CF2               	rrf	___lldiv@divisor+2,f
  3619     03DA  0CF1               	rrf	___lldiv@divisor+1,f
  3620     03DB  0CF0               	rrf	___lldiv@divisor,f
  3621     03DC  3EFF               	addlw	-1
  3622     03DD  1D03               	skipz
  3623     03DE  2BD7               	goto	u845
  3624     03DF                     l1539:
  3625     03DF  3001               	movlw	1
  3626     03E0  02FD               	subwf	___lldiv@counter,f
  3627     03E1  1D03               	btfss	3,2
  3628     03E2  2BE4               	goto	u851
  3629     03E3  2BE5               	goto	u850
  3630     03E4                     u851:
  3631     03E4  2BAC               	goto	l1529
  3632     03E5                     u850:
  3633     03E5                     l1541:
  3634     03E5  087C               	movf	___lldiv@quotient+3,w
  3635     03E6  00F3               	movwf	?___lldiv+3
  3636     03E7  087B               	movf	___lldiv@quotient+2,w
  3637     03E8  00F2               	movwf	?___lldiv+2
  3638     03E9  087A               	movf	___lldiv@quotient+1,w
  3639     03EA  00F1               	movwf	?___lldiv+1
  3640     03EB  0879               	movf	___lldiv@quotient,w
  3641     03EC  00F0               	movwf	?___lldiv
  3642     03ED                     l332:
  3643     03ED  0008               	return
  3644     03EE                     __end_of___lldiv:
  3645                           
  3646                           	psect	text19
  3647     016B                     __ptext19:	
  3648 ;; *************** function _ADC_Setup *****************
  3649 ;; Defined at:
  3650 ;;		line 97 in file "newmain.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;		None
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;		None
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  1    wreg      void 
  3657 ;; Registers used:
  3658 ;;		wreg
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3664 ;;      Params:         0       0       0       0       0
  3665 ;;      Locals:         0       0       0       0       0
  3666 ;;      Temps:          0       0       0       0       0
  3667 ;;      Totals:         0       0       0       0       0
  3668 ;;Total ram usage:        0 bytes
  3669 ;; Hardware stack levels used: 1
  3670 ;; This function calls:
  3671 ;;		Nothing
  3672 ;; This function is called by:
  3673 ;;		_main
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677     016B                     _ADC_Setup:	
  3678                           ;psect for function _ADC_Setup
  3679                           
  3680     016B                     l1583:	
  3681                           ;incstack = 0
  3682                           ; Regs used in _ADC_Setup: [wreg]
  3683                           
  3684                           
  3685                           ;newmain.c: 98: void lcd_send_cmd (char cmd)
  3686     016B  3081               	movlw	129
  3687     016C  1283               	bcf	3,5	;RP0=0, select bank0
  3688     016D  1303               	bcf	3,6	;RP1=0, select bank0
  3689     016E  009F               	movwf	31	;volatile
  3690                           
  3691                           ;newmain.c: 99: {
  3692     016F  3080               	movlw	128
  3693     0170  1683               	bsf	3,5	;RP0=1, select bank1
  3694     0171  1303               	bcf	3,6	;RP1=0, select bank1
  3695     0172  009F               	movwf	31	;volatile
  3696     0173                     l92:
  3697     0173  0008               	return
  3698     0174                     __end_of_ADC_Setup:
  3699     007E                     btemp	set	126	;btemp
  3700     007E                     wtemp0	set	126
  3701                           
  3702                           	psect	config
  3703                           
  3704                           ;Config register CONFIG @ 0x2007
  3705                           ;	Oscillator Selection bits
  3706                           ;	FOSC = HS, HS oscillator
  3707                           ;	Watchdog Timer Enable bit
  3708                           ;	WDTE = OFF, WDT disabled
  3709                           ;	Power-up Timer Enable bit
  3710                           ;	PWRTE = OFF, PWRT disabled
  3711                           ;	Brown-out Reset Enable bit
  3712                           ;	BOREN = ON, BOR enabled
  3713                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3714                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3715                           ;	Data EEPROM Memory Code Protection bit
  3716                           ;	CPD = OFF, Data EEPROM code protection off
  3717                           ;	Flash Program Memory Write Enable bits
  3718                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3719                           ;	In-Circuit Debugger Mode bit
  3720                           ;	DEBUG = 0x1, unprogrammed default
  3721                           ;	Flash Program Memory Code Protection bit
  3722                           ;	CP = OFF, Code protection off
  3723     2007                     	org	8199
  3724     2007  3F7A               	dw	16250

Data Sizes:
    Strings     62
    Constant    8
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     26      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_4(CODE[7]), sprintf@c(BANK0[1]), ?_sprintf(COMMON[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> main@num(BANK0[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> main@str1(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMMON[2]), 

    lcd_send_string@str	PTR unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), main@str1(BANK0[4]), STR_2(CODE[13]), STR_1(CODE[12]), 

    I2C_Multi_Send@data	PTR unsigned char  size(1) Largest target is 4
		 -> lcd_send_data@data_t(BANK0[4]), lcd_send_cmd@data_t(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_lcd_clear
    _main->_lcd_send_string
    _sprintf->___lwdiv
    _lcd_send_string->_lcd_send_data
    _lcd_put_cur->_lcd_send_cmd
    _lcd_init->_lcd_send_cmd
    _lcd_clear->_lcd_send_cmd
    _lcd_clear->_lcd_send_data
    _lcd_send_data->_I2C_Multi_Send
    _lcd_send_cmd->_I2C_Multi_Send
    _I2C_Multi_Send->_I2C_Write
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf
    _lcd_send_string->_lcd_send_data
    _lcd_put_cur->_lcd_send_cmd
    _lcd_init->_lcd_send_cmd
    _lcd_clear->_lcd_send_cmd
    _lcd_clear->_lcd_send_data

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0    8022
                                             15 BANK0     11    11      0
                          _ADC_Setup
                    _I2C_Master_Init
                          _lcd_clear
                           _lcd_init
                        _lcd_put_cur
                    _lcd_send_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    22      1    2404
                                              7 COMMON     4     3      1
                                              0 BANK0     15    15      0
                             ___bmul
                            ___lwdiv
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     168
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _lcd_send_string                                      2     0      2    1192
                                             12 COMMON     2     0      2
                      _lcd_send_data
 ---------------------------------------------------------------------------------
 (1) _lcd_put_cur                                          4     0      4    1345
                                              7 BANK0      4     0      4
                       _lcd_send_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     843
                                              7 BANK0      3     3      0
                       _lcd_send_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clear                                            2     2      0    1732
                                             12 COMMON     2     2      0
                       _lcd_send_cmd
                      _lcd_send_data
 ---------------------------------------------------------------------------------
 (2) _lcd_send_data                                       10    10      0     843
                                              9 COMMON     3     3      0
                                              0 BANK0      7     7      0
                     _I2C_Multi_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (2) _lcd_send_cmd                                        10    10      0     843
                                              9 COMMON     3     3      0
                                              0 BANK0      7     7      0
                     _I2C_Multi_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
                           _I2C_IDLE
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
                           _I2C_IDLE
 ---------------------------------------------------------------------------------
 (3) _I2C_Multi_Send                                       9     5      4     613
                                              1 COMMON     8     4      4
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _I2C_IDLE
 ---------------------------------------------------------------------------------
 (4) _I2C_IDLE                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _ADC_Setup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Setup
   _I2C_Master_Init
     ___lldiv
   _lcd_clear
     _lcd_send_cmd
       _I2C_Multi_Send
         _I2C_Write
           _I2C_IDLE
       _I2C_Start
         _I2C_IDLE
       _I2C_Stop
         _I2C_IDLE
     _lcd_send_data
       _I2C_Multi_Send
       _I2C_Start
       _I2C_Stop
   _lcd_init
     _lcd_send_cmd
   _lcd_put_cur
     _lcd_send_cmd
   _lcd_send_string
     _lcd_send_data
   _sprintf
     ___bmul
     ___lwdiv
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      1C       5       35.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2A      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Jun 07 18:24:27 2024

        I2C_Multi_Send@n 0077            ?_lcd_send_cmd 0070                        pc 0002  
         ___bmul@product 0071             ?_lcd_put_cur 0027           ?_lcd_send_data 0070  
                     l53 02BB                       l62 017C        I2C_Multi_Send@cmd 0070  
                     l56 0186                       l65 0185                       l59 0192  
                     l92 0173                       l77 01A2                       l89 0283  
                     fsr 0004      ___wmul@multiplicand 0072                      l102 02FF  
                    l110 0209                      l120 053A                      l105 0343  
                    l114 01CB                      l117 01E7                      l126 0254  
                    l322 01C9                      l234 0555                      l332 03ED  
                    l258 0639                      l267 0692                      l292 07F7  
                    l278 0747                      l287 07BE                      l296 0216  
                    l298 022E                      l568 0387                      l749 01B4  
     I2C_Multi_Send@data 0072                      u710 01AB                      u711 01AA  
                    u720 01B1                      u705 0309                      u721 01B0  
                    u810 03AC                      u730 0210                      u811 03AB  
                    u731 020F                      u660 018C                      u900 036F  
                    u805 039D                      u661 018B                      u901 036E  
                    u830 03C7                      u670 0192                      u831 03C6  
                    u671 0191                      u680 0283                      u920 0383  
                    u760 022A                      u825 03AE                      u681 0282  
                    u921 0382                      u905 036B                      u761 0229  
                    u745 0217                      u850 03E5                      u930 029C  
                    u770 01BB                      u851 03E4                      u835 03C3  
                    u771 01BA                      u915 0377                      u755 021E  
                    u940 0209                      u780 01C8                      u860 034C  
                    u845 03D7                      u685 027F                      u941 0208  
                    u781 01C7                      u861 034B                      u790 0398  
                    u950 0254                      u791 0397                      u935 0297  
                    u695 02C5                      u951 0253                      u880 035E  
                    u960 0547                      u945 0205                      u881 035D  
                    u961 0546                      u970 0575                      u875 0350  
                    u971 0574                      u980 05AE                      u981 05AD  
                    u990 05B7                      u895 035F                      u991 05B6  
     I2C_Multi_Send@send 0076       I2C_Multi_Send@size 0073                      fsr0 0004  
                    indf 0000                     l1403 0186                     l1411 019D  
                   l1405 018C                     l1413 01A2                     l1421 017D  
                   l1407 0194                     l1431 0263                     l1423 0182  
                   l1511 01C1                     l1503 01B6                     l1521 0398  
                   l1409 0199                     l1433 026F                     l1425 0255  
                   l1417 0174                     l1441 02CE                     l1601 01CD  
                   l1513 01C3                     l1505 01B7                     l1531 03B5  
                   l1523 039B                     l1435 0275                     l1427 025A  
                   l1419 0179                     l1451 02DF                     l1443 02D1  
                   l1515 01C8                     l1507 01BB                     l1533 03C7  
                   l1525 03A4                     l1541 03E5                     l1429 0260  
                   l1453 02ED                     l1445 02D4                     l1437 02BF  
                   l1461 0312                     l1621 04C3                     l1613 0493  
                   l1605 01D2                     l1509 01BF                     l1701 05FA  
                   l1535 03D5                     l1527 03A8                     l1519 0388  
                   l1455 02F2                     l1447 02D7                     l1439 02C2  
                   l1471 0323                     l1463 0315                     l1631 0507  
                   l1623 04D4                     l1615 04A1                     l1607 01E1  
                   l1551 034F                     l1711 061D                     l1703 05FE  
                   l1537 03D6                     l1529 03AC                     l1449 02DA  
                   l1473 0331                     l1465 0318                     l1457 0303  
                   l1633 050D                     l1625 04DA                     l1617 04A7  
                   l1641 022F                     l1561 0375                     l1553 0356  
                   l1545 0344                     l1481 01AB                     l1801 07A3  
                   l1713 0630                     l1705 0601                     l1539 03DF  
                   l1571 0284                     l1475 0336                     l1467 031B  
                   l1459 0306                     l1635 0518                     l1627 04EB  
                   l1619 04B8                     l1643 0230                     l1563 0376  
                   l1555 035A                     l1547 0346                     l1491 020C  
                   l1483 01B1                     l1811 07CF                     l1803 07AC  
                   l1731 067A                     l1723 0653                     l1715 0645  
                   l1707 0607                     l1651 0541                     l1581 02BA  
                   l1573 0288                     l1469 031E                     l1637 0523  
                   l1629 04F6                     l1645 023E                     l1565 037D  
                   l1557 035E                     l1549 034C                     l1493 0210  
                   l1485 01B3                     l1477 01A4                     l1813 07D6  
                   l1805 07B1                     l1741 069C                     l1733 0680  
                   l1725 0658                     l1717 064C                     l1709 0618  
                   l1653 0547                     l1583 016B                     l1575 028B  
                   l1639 0534                     l1647 0244                     l1559 036F  
                   l1567 0383                     l1495 021D                     l1479 01A5  
                   l1815 07DA                     l1807 07B5                     l1743 06A0  
                   l1727 065C                     l1735 0684                     l1719 064E  
                   l1751 06B8                     l1671 058E                     l1663 055A  
                   l1655 054B                     l1577 028C                     l1593 01F0  
                   l1585 01E8                     l1497 0224                     l1489 020A  
                   l1809 07C2                     l1761 06EC                     l1753 06D6  
                   l1745 06AF                     l1729 066B                     l1681 05BA  
                   l1673 059E                     l1665 0569                     l1657 0550  
                   l1817 07E6                     l1649 053E                     l1579 02B9  
                   l1595 01F6                     l1587 01EE                     l1499 022A  
                   l1763 06F0                     l1755 06DD                     l1819 07F4  
                   l1747 06B3                     l1739 0697                     l1691 05D9  
                   l1683 05BE                     l1675 05A2                     l1667 0575  
                   l1659 0556                     l1851 03EE                     l1597 01FC  
                   l1781 072F                     l1773 0715                     l1765 06F2  
                   l1757 06E1                     l1685 05C0                     l1693 05E6  
                   l1669 0579                     l1677 05AE                     l1861 03F8  
                   l1853 03F2                     l1599 01CA                     l1791 076A  
                   l1783 0743                     l1759 06E6                     l1695 05EA  
                   l1687 05CD                     l1679 05B7                     l1871 0427  
                   l1863 0405                     l1855 03F3                     l1793 076E  
                   l1785 0754                     l1777 071A                     l1769 06F9  
                   l1697 05F0                     l1689 05D5                     l1881 0462  
                   l1873 043E                     l1865 040A                     l1857 03F4  
                   l1795 0773                     l1787 0760                     l1779 072A  
                   l1971 06C8                     l1699 05F4                     l1883 046F  
                   l1875 044C                     l1867 0414                     l1859 03F7  
                   l1973 01D9                     l1797 0777                     l1789 0764  
                   l1885 0478                     l1877 0455                     l1869 0422  
                   l1799 0784                     l1887 0486                     l1879 045A  
                   l1969 0564                     STR_1 0046                     STR_2 0039  
                   STR_3 002C                     STR_4 0052                     STR_5 001B  
                   u1000 05E5                     u1001 05E4                     u1010 05FA  
                   u1011 05F9                     u1100 06AE                     u1020 0618  
                   u1101 06AD                     u1021 0617                     u1110 06E6  
                   u1030 061D                     u1111 06E5                     u1031 061C  
                   u1200 0783                     u1120 06EC                     u1040 0630  
                   u1201 0782                     u1121 06EB                     u1041 062F  
                   u1210 07BE                     u1130 06F8                     u1050 0645  
                   u1211 07BD                     u1131 06F7                     u1051 0644  
                   u1220 07C2                     u1140 0714                     u1060 0652  
                   u1221 07C1                     u1141 0713                     u1061 0651  
                   u1045 062C                     u1230 07CF                     u1150 072A  
                   u1070 066A                     u1231 07CE                     u1151 0729  
                   u1071 0669                     u1055 0641                     u1240 07E6  
                   u1160 0743                     u1080 0692                     u1241 07E5  
                   u1161 0742                     u1145 0710                     u1081 0691  
                   u1250 07F4                     u1170 0754                     u1090 0696  
                   u1307 04BE                     u1251 07F3                     u1235 07CB  
                   u1171 0753                     u1155 0726                     u1091 0695  
                   u1180 076A                     u1317 04CF                     u1181 0769  
                   u1165 073F                     u1190 076E                     u1327 04E0  
                   u1191 076D                     u1175 0750                     u1337 04F1  
                   u1347 0502                     u1267 041C                     u1357 0513  
                   u1277 0438                     u1367 051E                     u1287 049B  
                   u1377 052F                     u1297 04AD                     u1387 033C  
                   u1397 02F8         __end_of_I2C_IDLE 0193                     _main 03EE  
                   btemp 007E         __end_of_I2C_Stop 0186         ?_lcd_send_string 007C  
                   start 0000        ___bmul@multiplier 0072           ??_lcd_send_cmd 0079  
       ?_I2C_Master_Init 0020                    ?_main 0070          __end_of___lldiv 03EE  
        __end_of___lwdiv 0388                    _PORTB 0006                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISD 0088  
                  _SSPIF 0063          __end_of_isdigit 01B5        __end_of_I2C_Start 017D  
      __end_of_I2C_Write 01A3                    pclath 000A        __end_of_ADC_Setup 0174  
                  status 0003                    wtemp0 007E          __end_of_sprintf 07F8  
        __initialization 07F8          ??_lcd_send_data 0079             __end_of_main 0493  
                 ??_main 002F                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E    I2C_Multi_Send@address 0071  
                 _SSPADD 0093                   _SSPCON 0014                   _SSPBUF 0013  
       __end_of_lcd_init 053B                   ___bmul 01B5                   ___wmul 020A  
              ??___lldiv 0078                ??___lwdiv 0074                ?_I2C_IDLE 0070  
              ??_isdigit 0070                ?_I2C_Stop 0070     __end_of_lcd_send_cmd 0300  
              ??_sprintf 0078  __end_of__initialization 07FC      ___bmul@multiplicand 0070  
     lcd_send_cmd@data_l 0026       lcd_send_cmd@data_t 0020       lcd_send_cmd@data_u 0025  
         __pcstackCOMMON 0070               ??_I2C_IDLE 0070               ??_I2C_Stop 0070  
           sprintf@width 002B               __pbssBANK0 003A               __pmaintext 03EE  
                ?___bmul 0070                  ?___wmul 0070                  _ACKSTAT 048E  
                _GO_DONE 00FA                  _SSPCON2 0091                ?_lcd_init 0070  
                _SSPSTAT 0094               __stringtab 0003                _I2C_Start 0174  
              _I2C_Write 0193                _ADC_Setup 016B        __end_of_lcd_clear 020A  
                ___lldiv 0388                  ___lwdiv 0344                  __ptext1 053B  
                __ptext2 01A3                  __ptext3 020A                  __ptext4 0344  
                __ptext5 01B5                  __ptext6 022F                  __ptext7 01CA  
                __ptext8 0493                  __ptext9 01E8        __end_of_hexpowers 001B  
                _isdigit 01A3                  _sprintf 053B                  main@num 0036  
             ??_lcd_init 0027           lcd_put_cur@col 0029           lcd_put_cur@row 0027  
   end_of_initialization 07FC               ?_I2C_Start 0070               ?_I2C_Write 0070  
             ?_ADC_Setup 0070          ___lldiv@divisor 0070          ___lldiv@counter 007D  
       I2C_Master_Init@c 0020             _lcd_send_cmd 02BC    __end_of_lcd_send_data 0344  
         _I2C_Multi_Send 0255                _TRISCbits 0087               lcd_clear@i 007C  
     lcd_send_string@str 007C   __end_of_I2C_Multi_Send 0284            ??_lcd_put_cur 007C  
         __end_of___bmul 01CA           __end_of___wmul 022F      lcd_send_data@data_l 0026  
    lcd_send_data@data_t 0020      lcd_send_data@data_u 0025        ??_lcd_send_string 007E  
    start_initialization 07F8        ??_I2C_Master_Init 0024              ??_I2C_Start 0070  
            ??_I2C_Write 0070              ??_ADC_Setup 0070                 ??___bmul 0071  
               ??___wmul 0074          ?_I2C_Multi_Send 0071      __end_of_lcd_put_cur 01E8  
              ___latbits 0002            __pcstackBANK0 0020        lcd_send_data@data 0024  
              _adc_value 003A              sprintf@flag 0026              sprintf@prec 002D  
        lcd_send_cmd@cmd 0024         ___lwdiv@dividend 0072                 ?___lldiv 0070  
               ?___lwdiv 0070                _lcd_clear 01E8                __pstrings 0003  
               _I2C_IDLE 0186                 ?_isdigit 0070                 _I2C_Stop 017D  
              _hexpowers 0013         ___lwdiv@quotient 0074                 ?_sprintf 0077  
         ___wmul@product 0074              _lcd_put_cur 01CA               ?_lcd_clear 0070  
             _ADCON0bits 001F              __stringbase 0012        ___wmul@multiplier 0070  
          I2C_Write@Data 0070          _lcd_send_string 022F       __end_of__stringtab 0013  
            _isdigit$708 0070               sprintf@idx 0020               sprintf@len 0028  
             sprintf@val 0022          _I2C_Master_Init 0284          ___lwdiv@divisor 0070  
        ___lwdiv@counter 0076                 __ptext10 0300                 __ptext11 02BC  
               __ptext12 017D                 __ptext13 0174                 __ptext14 0255  
               __ptext15 0193                 __ptext16 0186                 __ptext17 0284  
               __ptext18 0388                 __ptext19 016B                 _lcd_init 0493  
       ??_I2C_Multi_Send 0075              ??_lcd_clear 007C                 main@str1 0032  
               isdigit@c 0071                sprintf@ap 0021                sprintf@cp 0024  
              sprintf@sp 002A         ___lldiv@dividend 0074  __end_of_lcd_send_string 0255  
              stringcode 000D  __end_of_I2C_Master_Init 02BC            _lcd_send_data 0300  
               sprintf@c 002E                 sprintf@f 0077         ___lldiv@quotient 0079  
               stringdir 000D                 stringtab 0003              _SSPCON2bits 0091  
